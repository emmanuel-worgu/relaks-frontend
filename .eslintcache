[{"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\index.js":"1","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\App.js":"3","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanLogin.js":"4","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerLogin.js":"5","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerForgotPassword.js":"6","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Home.js":"7","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ContactUs.js":"8","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerRegister.js":"9","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\404.js":"10","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyHandyman.js":"11","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanForgotPassword.js":"12","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanRegister.js":"13","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanDashboard.js":"14","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\BookJob.js":"15","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Pricing.js":"16","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyCustomer.js":"17","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ThankYouPage.js":"18","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerJob.js":"19","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerDashboard.js":"20","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Flutterwave.js":"21","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\JobList.js":"22","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Review.js":"23","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Nav.js":"24","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\NeedHelpTemplate.js":"25","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ForgotPasswordForm.js":"26","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Footer.js":"27","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\loginForm.js":"28","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Job.js":"29","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\verifyUserForm.js":"30","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\registerForm.js":"31","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanIsVerified.js":"32","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\CustomerJobComponent.js":"33","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PricingPlan.js":"34","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Dashboard.js":"35","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ReviewForm.js":"36","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanJob.js":"37","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\MiniFooter.js":"38","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Error.js":"39","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Settings.js":"40","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\settingsform.js":"41","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\RequestPayment.js":"42","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\RequestPaymentForm.js":"43","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\jobTable.js":"44","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanJob.js":"45","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandyManJobListComp.js":"46","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Loading.js":"47","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PrivacyPolicy.js":"48","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\About.js":"49","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Terms.js":"50","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\relaks__cta.js":"51"},{"size":500,"mtime":499162500000,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":499162500000,"results":"54","hashOfConfig":"53"},{"size":3902,"mtime":1618500248872,"results":"55","hashOfConfig":"53"},{"size":3101,"mtime":1619782730453,"results":"56","hashOfConfig":"53"},{"size":3630,"mtime":1619810947178,"results":"57","hashOfConfig":"53"},{"size":2367,"mtime":1619781474520,"results":"58","hashOfConfig":"53"},{"size":12201,"mtime":1619814503881,"results":"59","hashOfConfig":"53"},{"size":2343,"mtime":1618491999319,"results":"60","hashOfConfig":"53"},{"size":4298,"mtime":1619814730466,"results":"61","hashOfConfig":"53"},{"size":1113,"mtime":1617100864616,"results":"62","hashOfConfig":"53"},{"size":2642,"mtime":1619783580206,"results":"63","hashOfConfig":"53"},{"size":2365,"mtime":1619782518385,"results":"64","hashOfConfig":"53"},{"size":4465,"mtime":1619782792861,"results":"65","hashOfConfig":"53"},{"size":3318,"mtime":1619792051270,"results":"66","hashOfConfig":"53"},{"size":7113,"mtime":1619781159489,"results":"67","hashOfConfig":"53"},{"size":5166,"mtime":1619785103001,"results":"68","hashOfConfig":"53"},{"size":2649,"mtime":1619783553443,"results":"69","hashOfConfig":"53"},{"size":1654,"mtime":1619709195805,"results":"70","hashOfConfig":"53"},{"size":3361,"mtime":1619781572082,"results":"71","hashOfConfig":"53"},{"size":3426,"mtime":1619781266427,"results":"72","hashOfConfig":"53"},{"size":4384,"mtime":1619786317814,"results":"73","hashOfConfig":"53"},{"size":3615,"mtime":1619782906274,"results":"74","hashOfConfig":"53"},{"size":1928,"mtime":1619783389392,"results":"75","hashOfConfig":"53"},{"size":8317,"mtime":1619784140896,"results":"76","hashOfConfig":"53"},{"size":680,"mtime":1617288331335,"results":"77","hashOfConfig":"53"},{"size":1366,"mtime":1612725202456,"results":"78","hashOfConfig":"53"},{"size":3372,"mtime":1619811809663,"results":"79","hashOfConfig":"53"},{"size":3300,"mtime":1199146498569,"results":"80","hashOfConfig":"53"},{"size":4946,"mtime":1619000769463,"results":"81","hashOfConfig":"53"},{"size":2408,"mtime":1618997345724,"results":"82","hashOfConfig":"53"},{"size":7896,"mtime":1619786020801,"results":"83","hashOfConfig":"53"},{"size":906,"mtime":1619000718749,"results":"84","hashOfConfig":"53"},{"size":5380,"mtime":1619692509300,"results":"85","hashOfConfig":"53"},{"size":9492,"mtime":1619707962048,"results":"86","hashOfConfig":"53"},{"size":14391,"mtime":1619785176293,"results":"87","hashOfConfig":"53"},{"size":1493,"mtime":1618779415582,"results":"88","hashOfConfig":"53"},{"size":3728,"mtime":1619783931197,"results":"89","hashOfConfig":"53"},{"size":213,"mtime":1618578183375,"results":"90","hashOfConfig":"53"},{"size":965,"mtime":1615461644279,"results":"91","hashOfConfig":"53"},{"size":4301,"mtime":1619783505591,"results":"92","hashOfConfig":"53"},{"size":3213,"mtime":1619784202503,"results":"93","hashOfConfig":"53"},{"size":2801,"mtime":1619783313149,"results":"94","hashOfConfig":"53"},{"size":3005,"mtime":1619701697086,"results":"95","hashOfConfig":"53"},{"size":702,"mtime":1618224465917,"results":"96","hashOfConfig":"53"},{"size":3735,"mtime":1619784948212,"results":"97","hashOfConfig":"53"},{"size":4030,"mtime":1619783984176,"results":"98","hashOfConfig":"53"},{"size":535,"mtime":1619785692050,"results":"99","hashOfConfig":"53"},{"size":22422,"mtime":1618780198469,"results":"100","hashOfConfig":"53"},{"size":6801,"mtime":1619728252394,"results":"101","hashOfConfig":"53"},{"size":19162,"mtime":1618780565338,"results":"102","hashOfConfig":"53"},{"size":1118,"mtime":1618782333896,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1cdldua",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\index.js",[],["215","216"],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\App.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanLogin.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerLogin.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerForgotPassword.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Home.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ContactUs.js",["217","218"],"import React from 'react';\r\nimport Footer from './Footer';\r\nimport { NormalNav } from './Nav';\r\nimport NeedHelpTemplate from './NeedHelpTemplate';\r\nimport '../css/contactus.css';\r\n\r\nimport {\r\n  faHeadset,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst ContactUs = () => {\r\n  return (\r\n    <div>\r\n      <NeedHelpTemplate />\r\n      <NormalNav />\r\n      <div className=\"contact-us-header\">\r\n        <h1><b>CONTACT RELAKS</b></h1>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <div>\r\n            <p className=\"contact-us-text\">Relaks is a home subcription service that pays for your home repair and care needs.</p>\r\n            <p className=\"contact-us-text\">We would love to answer any question you have. Feel Free to contact us!!</p>\r\n            {/* <p className=\"contact-us-text\">Before You lay complain please read our faq, the answer to your question might just be there</p> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n            <p className=\"contact-us-text\">Email: <a href=\"email:support@tryrelaks.com\">support@tryrelaks.com</a></p>\r\n            <p className=\"contact-us-text\">Tel: <a href=\"tel:+2349055681975\">+2349055681975</a></p>\r\n          </div>\r\n      </div>\r\n      {/* <div className=\"faq\">\r\n        <h2 id=\"faq-header\">Frequently Asked Question</h2>\r\n        <div>\r\n          <p>This is our FAQ Section</p>\r\n        </div>\r\n      </div> */}\r\n      <div className=\"jumbotron\" style={{\r\n          backgroundColor: '#009EF7',\r\n          marginBottom: '0',\r\n          marginTop: '5rem'\r\n        }}>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12 col-md-12\">\r\n              <h1 className=\"relaks__cta\">Live Frustration Free Life with Relaks</h1>\r\n              <div style={{\r\n                marginTop: '20px'\r\n              }} className=\"member-button\">\r\n                <button className=\"what-is-relaks-button\" onClick='' style={{\r\n                  height: '4em',\r\n                  outline: 'none'\r\n                }}><b style={{\r\n                  fontSize: '1.2em'\r\n                }}>Become A Member</b></button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerRegister.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\404.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyHandyman.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanForgotPassword.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanRegister.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanDashboard.js",["219","220"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Dashboard from '../statelessComponent/Dashboard';\r\nimport HandymanIsVerified from '../statelessComponent/HandymanIsVerified';\r\nimport Loading from '../statelessComponent/Loading';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { HandymanDashboardNav } from '../statelessComponent/Nav';\r\n\r\nconst HandymanDashboard = () => {\r\n  // const[response, setResponse] = useState({\r\n  //   loading: false,\r\n  //   isAuth: false,\r\n  //   data: [],\r\n  //   success: false,\r\n  //   error: false,\r\n  // });\r\n  const[data, setData] = useState([]);\r\n  const[jobs, setJobs] = useState([]);\r\n  const[loading, setLoading] = useState(false);\r\n  let history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    // Get the user Info\r\n    const getUserInfo = async ()  => {\r\n    try {\r\n      setLoading(true);\r\n      const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        setLoading(false);\r\n        setData(data);\r\n        localStorage.setItem('earned_amount', data.amountEarned);\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n         history.push('/handyman/login');\r\n      };\r\n      if(mounted.current && response.status === 201) {\r\n        return (\r\n          <HandymanIsVerified />\r\n        );\r\n      };\r\n    } catch (error) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  getUserInfo();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Get the User Jobs\r\n    const getJobs = async ()  => {\r\n    try {\r\n      setLoading(true);\r\n      const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/get-all-jobs';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        setLoading(false);\r\n        setJobs(data);\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n         history.push('/handyman/login');\r\n      };\r\n      if(mounted.current && response.status === 201) {\r\n        return (\r\n          <HandymanIsVerified />\r\n        );\r\n      };\r\n\r\n      setJobs(data);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setJobs(error);\r\n    }\r\n  };\r\n  getJobs();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HandymanDashboardNav />\r\n      <Dashboard jobs={jobs.jobs}\r\n        data={data}\r\n        loading={loading}\r\n      />\r\n      <MiniFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandymanDashboard;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\BookJob.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Pricing.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyCustomer.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ThankYouPage.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerJob.js",["221"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomerJobComponent from '../statelessComponent/CustomerJobComponent';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { CustomerDashboardNav } from '../statelessComponent/Nav';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\n\r\nconst CustomerJob = () => {\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  // The success variable checks if the request was successful\r\n  const[jobs, setJobs] = useState([]);\r\n  const[error, setError] = useState({\r\n    error: false,\r\n    message: ''\r\n  });\r\n  const[success, setSuccess] = useState(false);\r\n  const[loading, setLoading] = useState(false);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n    const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/get-all-jobs';\r\n\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'auth-token': token,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      }\r\n    });\r\n\r\n    if (mounted.current && response.status === 200) {\r\n      const job = await response.json();\r\n      setSuccess(true);\r\n      setLoading(false);\r\n      return setJobs(job);\r\n    } else if (mounted.current && response.status === 201) {\r\n      const job = await response.json();\r\n      setLoading(false)\r\n      setSuccess(false);\r\n      return setError({\r\n        error: true,\r\n        message: job.errMessage,\r\n      });\r\n    } else if (mounted.current && response.status === 401) {\r\n\r\n      history.push('/customer/login');\r\n    } else if (mounted.current && response.status === 400) {\r\n      const job = await response.json();\r\n      setLoading(false);\r\n      setSuccess(false);\r\n      return setError({\r\n        error: true,\r\n        message: job.errMessage,\r\n      });\r\n    }\r\n\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setJobs(error)\r\n      setSuccess(false);\r\n      return setError({\r\n        error: true,\r\n        message: `Couldn't fetch the jobs. Please check your internet connection and try again!!`\r\n      });\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  const logic = () => {\r\n    if (loading) {\r\n      return (\r\n        <div>\r\n          <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">Fetching Your Jobs...</h4>\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (success) {\r\n      const mappedJob = jobs.map(job =>  <CustomerJobComponent job={job} key={job._id} />);\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          {mappedJob}\r\n          <MiniFooter />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <h4 className=\"how-its-works\">{error.message}</h4>\r\n    );\r\n\r\n  };\r\n  // const mappedJob = jobs.map(job => <p className=\"card-tex\">{job.Description}</p>)\r\n  return (\r\n    <div>\r\n      <CustomerDashboardNav />\r\n      {logic()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerJob;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerDashboard.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Flutterwave.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\JobList.js",["222"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport HandymanJob from '../statelessComponent/HandymanJob';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { HandymanDashboardNav } from '../statelessComponent/Nav';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\n\r\nconst JobList =  () => {\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  // The success variable checks if the request was successful\r\n  const[jobs, setJobs] = useState([]);\r\n  const[error, setError] = useState({\r\n    error: false,\r\n    message: ''\r\n  })\r\n  const[loading, setLoading] = useState(false);\r\n  const[success, setSuccess] = useState(false);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n      const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/all-jobs';\r\n\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n        }\r\n      });\r\n\r\n      if (mounted.current && response.status === 200) {\r\n        const job = await response.json();\r\n        setSuccess(true);\r\n        setLoading(false);\r\n        return setJobs(job.jobs);\r\n      } else if (mounted.current && response.status === 201) {\r\n        const job = await response.json();\r\n\r\n        setSuccess(false);\r\n        setLoading(false);\r\n        return setError({\r\n          error: true,\r\n          message: job.errMessage,\r\n        });\r\n      } else if (mounted.current && response.status === 401) {\r\n\r\n        history.push('/handyman/login');\r\n      } else if (mounted.current && response.status === 400) {\r\n        const job = await response.json();\r\n\r\n        setSuccess(false);\r\n        setLoading(false);\r\n        return setError({\r\n          error: true,\r\n          message: job.errMessage,\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n      setJobs(error);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n      return setError({\r\n        error: true,\r\n        message: `Couldn't fetch the jobs. Please check your internet connection and try again!!`,\r\n      });\r\n    };\r\n  };\r\n\r\n  // Cleans the DOM\r\n  useEffect(() => {\r\n    getData();\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n\r\n  const logic = () => {\r\n    if (loading) {\r\n      return (\r\n        <div>\r\n          <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">Loading Jobs...</h4>\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (success) {\r\n      const mappedJob = jobs.map(job => <HandymanJob job={job} key={job._id} />);\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          {mappedJob}\r\n          <MiniFooter />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">{error.message}</h4>\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n          </div>\r\n      </div>\r\n    );\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <HandymanDashboardNav />\r\n      {logic()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobList;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Review.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Nav.js",["223","224"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n// import { FaCog } from 'react-icons/fa';\r\n\r\nimport '../css/nav.css'\r\nimport NavLogo from '../assest/RelaksLogo.png';\r\nimport {\r\n  faBars,\r\n  faCog,\r\n  faTachometerAlt,\r\n  faSignOutAlt,\r\n  faBullhorn,\r\n  faBriefcase,\r\n  faShoppingCart,\r\n  faTools,\r\n  faMoneyBillWave,\r\n  faClipboardCheck,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\n// This is the Homepage Nav when not authenticated\r\nexport const NormalNav = () => {\r\n  const history = useHistory();\r\n  const handleNavButton = () => {\r\n    return (\r\n      history.push('/customer/register')\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"nav-content\">\r\n      <div>\r\n        <Link to=\"/\">\r\n          <img src={NavLogo} className=\"nav-logo\" alt=\"relaks logo\" />\r\n        </Link>\r\n      </div>\r\n      <div className=\"nav-action\">\r\n        <div className=\"nav-login\">\r\n          <h4 className=\"nav-header\"><Link to=\"/customer/login\">Login</Link></h4>\r\n        </div>\r\n        <div className=\"nav-subcribe\">\r\n          <button onClick={handleNavButton} className=\"nav-subcribe-button\">\r\n            <h4 className=\"nav-header\">\r\n              <b>Subcribe</b>\r\n            </h4>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// This is the home page nav when authenticated\r\nexport const AuthNav = () => {\r\n  const history = useHistory();\r\n  const handleNavButton = () => {\r\n    return (\r\n      history.push('/customer')\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"nav-content\">\r\n      <div>\r\n        <Link to=\"/\">\r\n          <img src={NavLogo} className=\"nav-logo\" alt=\"relaks logo\" />\r\n        </Link>\r\n      </div>\r\n      <div className=\"nav-action\">\r\n        {/* <div className=\"nav-login\">\r\n          <h4><Link to=\"/customer/login\">Login</Link></h4>\r\n        </div> */}\r\n        <div className=\"nav-subcribe\">\r\n          <button onClick={handleNavButton} className=\"nav-subcribe-button\">\r\n            <h4>\r\n              <b>Dashboard</b>\r\n            </h4>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// The Handyman Dashboard Nav\r\nexport const HandymanDashboardNav = () => {\r\n  const[menuButton, setMenuButton] = useState(false);\r\n  const[response, setResponse] = useState({\r\n    loading: false,\r\n    data: '',\r\n  });\r\n\r\n  const history = useHistory();\r\n  \r\n\r\n\r\n  const handleMenuButton = () => {\r\n    setMenuButton(!menuButton);\r\n  };\r\n\r\n  const logouthandler = () => {\r\n    localStorage.clear('jwt_token');\r\n  };\r\n  \r\n  const getData = async ()  => {\r\n    try {\r\n      setResponse({\r\n        loading: true,\r\n      });\r\n      const url =  'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(response.status === 200) {\r\n        setResponse({\r\n          loading: false,\r\n          data: data,\r\n        });\r\n      }\r\n      if(response.status === 401) {\r\n        history.push('/handyman/login');\r\n      };\r\n    } catch (error) {\r\n      setResponse({\r\n        loading: false,\r\n        data: 'Something Went wrong. Try Again!!',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"harmburger\">\r\n      <FontAwesomeIcon icon={faBars} size=\"3x\" onClick={handleMenuButton} className=\"harmburger-icon\" style={{\r\n        color: menuButton ? 'blue': null\r\n      }} />\r\n        <div>\r\n          <img src={NavLogo} className=\"nav-logo\" alt=\"relaks logo\" />\r\n        </div>\r\n      </div>\r\n      <div className={menuButton ? 'mystyle' : 'dashboardnav'}>\r\n      <div className=\"dashboardnav-content\">\r\n        <h5 className=\"dashboard-header\">{response.loading ? 'Loading...' : `Hi, ${response.data.name}`}</h5>\r\n        <ul className=\"dashboardnav-ul\">\r\n          <li className=\"dashboardnav-li\"><Link to=\"/handyman\"><FontAwesomeIcon icon={faTachometerAlt} /> Dashboard</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/handyman/accept-job\"><FontAwesomeIcon icon={faClipboardCheck} /> Accept Jobs</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/handyman/job\"><FontAwesomeIcon icon={faBriefcase} /> My Jobs</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/handyman/request-payment\"><FontAwesomeIcon icon={faMoneyBillWave} /> Pay Out</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/handyman/setting\"><FontAwesomeIcon icon={faCog} /> Settings</Link></li>\r\n          <li className=\"dashboardnav-li\" onClick={logouthandler}><Link to=\"/\"><FontAwesomeIcon icon={faSignOutAlt} /> Logout</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"#\"><FontAwesomeIcon icon={faBullhorn} /> Feedback</Link></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    </nav>\r\n  );\r\n}; \r\n\r\n// The Customer Dashboard Nav\r\nexport const CustomerDashboardNav = () => {\r\n  const[menuButton, setMenuButton] = useState(false);\r\n  const[response, setResponse] = useState({\r\n    loading: false,\r\n    data: ''\r\n  });\r\n\r\n  const history = useHistory();\r\n  \r\n\r\n\r\n  const handleMenuButton = () => {\r\n    setMenuButton(!menuButton);\r\n  };\r\n\r\n  const logouthandler = () => {\r\n    localStorage.clear('jwt_token');\r\n  };\r\n\r\n  const getData = async ()  => {\r\n    try {\r\n      setResponse({\r\n        loading: true,\r\n      });\r\n      const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      if(response.status === 200) {\r\n        const data = await response.json();\r\n        setResponse({\r\n          loading: false,\r\n          data,\r\n        });\r\n      }\r\n      if(response.status === 201) {\r\n        const data = await response.json();\r\n        setResponse({\r\n          loading: false,\r\n          data: data.authUser,\r\n        })\r\n        history.push('/customer/pricing');\r\n      }\r\n      if(response.status === 401) {\r\n        history.push('/customer/login');\r\n      };\r\n    } catch (error) {\r\n      setResponse({\r\n        loading: false,\r\n        data: 'Something Went wrong. Try Again!!',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [])\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"harmburger\">\r\n        <FontAwesomeIcon icon={faBars} size=\"3x\" onClick={handleMenuButton} className=\"harmburger-icon\" style={{\r\n          color: menuButton ? 'blue' : null,\r\n        }}/>\r\n        <div>\r\n          <img src={NavLogo} className=\"nav-logo\" alt=\"relaks logo\" />\r\n        </div>\r\n      </div>\r\n      <div className={menuButton ? 'mystyle' : 'dashboardnav'}>\r\n      <div className=\"dashboardnav-content\">\r\n        <h5 className=\"dashboard-header\">{response.loading ? 'Loading...' : `Hi, ${response.data.name}`}</h5>\r\n        <ul className=\"dashboardnav-ul\">\r\n          <li className=\"dashboardnav-li\"><Link to=\"/customer\"><FontAwesomeIcon icon={faTachometerAlt} /> Dashboard</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/customer/book-service\"><FontAwesomeIcon icon={faTools} /> Request A Handyman</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/customer/job\"><FontAwesomeIcon icon={faBriefcase} /> My Jobs</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/customer/pricing\"><FontAwesomeIcon icon={faShoppingCart} /> Buy Plan</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/customer/setting\"><FontAwesomeIcon icon={faCog} /> Settings</Link></li>\r\n          <li className=\"dashboardnav-li\" onClick={logouthandler}><Link to=\"/\"><FontAwesomeIcon icon={faSignOutAlt} /> Logout</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"#\"><FontAwesomeIcon icon={faBullhorn} /> Feedback</Link></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    </nav>\r\n  );\r\n}; ","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\NeedHelpTemplate.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ForgotPasswordForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Footer.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\loginForm.js",["225"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NeedHelpTemplate from './NeedHelpTemplate';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport logo from '../assest/logo.svg';\r\nimport '../css/loginForm.css';\r\nimport Error from './Error';\r\n\r\nimport {\r\n  faSpinner,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nconst LoginForm = (props) => {\r\n  const[seePassword, setSeePassword] = useState(false);\r\n\r\n  const handleSeePassword = () => {\r\n    setSeePassword(!seePassword);\r\n  };\r\n  \r\n  const loginHeader = document.location.pathname === '/handyman/login' ? 'Jobs Available. Login to Accept!!' : 'Welcome Back!! Please Login to see your Dashboard';\r\n  const forgotPassword = document.location.pathname === '/handyman/login' ? '/handyman/forgot-password' : '/customer/forgot-password';\r\n  const signupLink = document.location.pathname === '/handyman/login' ? '/handyman/register' : '/customer/register';\r\n\r\n  const loginField = document.getElementById('loginField');\r\n\r\n  // const loginFieldLogic = parseInt(loginField) ? props.phoneValue : props.emailValue;\r\n\r\n  const loginFieldLogic = parseInt(loginField) ? 'phone' : 'email';\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <NeedHelpTemplate />\r\n      <div>\r\n        <img src={logo} alt=\"Relaks Logo\" className=\"relaks-logo\"></img>\r\n      </div>\r\n      <div className=\"container\">\r\n          <div className=\"relaks-register\">\r\n            <h3 id=\"register-header\">{ loginHeader }</h3>\r\n            <h6 className=\"error-message\">{props.response.error}</h6>\r\n            <label id=\"email-text\">Email Address or Phone Number</label>\r\n            <input type={props.emailValue.is ? 'email' : 'text'}\r\n              name=\"email\"\r\n              id=\"loginField\"\r\n              value={props.emailValue.is ? props.emailValue.value : props.phoneValue.value}\r\n              onChange={props.handleEmail}\r\n              className=\"relaks-input\" \r\n              required>\r\n            </input>\r\n            <br></br>\r\n            <label>Password</label><br></br>\r\n            <input type={seePassword? \"text\": \"password\"} \r\n              name=\"password\" \r\n              className=\"relaks-input\" \r\n              id=\"password\"\r\n              value={props.passwordValue}\r\n              onChange={props.handlePassword}\r\n              required>\r\n            </input>\r\n            <br/>\r\n            <label>See your Password</label>\r\n            <input type=\"checkbox\" \r\n              name=\"checkbox\" \r\n              className=\"checkbox\" \r\n              checked={seePassword} \r\n              onChange={handleSeePassword}>\r\n            </input>\r\n            <br></br>\r\n            <h6 id=\"forgot-password\"><em><Link to = {forgotPassword}>Forgot Your Password?</Link></em></h6>\r\n            <br></br>\r\n            <button type=\"submit\"\r\n              className=\"submit-button\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#errorModalLabel\"\r\n              onClick={props.handleSubmit}>\r\n                <b>{props.response.loading ?\r\n                  <>\r\n                    <div>\r\n                    <FontAwesomeIcon icon={faSpinner} size=\"1x\" /> Please Wait...\r\n                    </div>\r\n                  </>\r\n                  :\r\n                  'Login to see your Dashboard'\r\n                }</b>\r\n            </button>\r\n            <br/>\r\n            <p id=\"signup\">New to Relaks ? <b id=\"signup-text\"><Link to = {signupLink}>Sign Up</Link></b></p>\r\n          </div>\r\n        </div>\r\n        <Error />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Job.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\verifyUserForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\registerForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanIsVerified.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\CustomerJobComponent.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PricingPlan.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Dashboard.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ReviewForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanJob.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\MiniFooter.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Error.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Settings.js",["226","227"],"import React, { useState } from 'react';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { CustomerDashboardNav, HandymanDashboardNav } from '../statelessComponent/Nav';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\nimport SettingsForm from '../statelessComponent/settingsform';\r\n\r\nconst Settings = ()  => {\r\n  const[name, setName] = useState('');\r\n  const[email, setEmail] = useState('');\r\n  const[phone, setPhone] = useState('');\r\n  const[oldPassword, setOldPassword] = useState('');\r\n  const[newPassword, setNewPassword] = useState('');\r\n  const[loading, setLoading] = useState(false);\r\n  const[personalInfoRes, setPersonalInfoRes] = useState('');\r\n  const[resetPasswordRes, setResetPasswordRes] = useState('');\r\n\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handlePhone = (e) => {\r\n    setPhone(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleOldPassword = (e) => {\r\n    setOldPassword(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleNewPassword =  (e) => {\r\n    setNewPassword(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handlePersonalInformation = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n      const url = document.location.pathname === '/customer/setting' ? 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/update-user' : 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/update-user'\r\n      const data = {\r\n        name: name,\r\n        email: email,\r\n        phone: phone\r\n      }\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      if (response.status === 200) {\r\n        const message = await response.json();\r\n        setLoading(false);\r\n        setPersonalInfoRes(message.successMessage);\r\n      } else {\r\n        const message = await response.json()\r\n        setLoading(false);\r\n        setPersonalInfoRes(message.errMessage);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setPersonalInfoRes(error.TypeError);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n      const url = document.location.pathname === '/customer/reset-password' ? 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/reset-password' : 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/reset-password'\r\n      const data = {\r\n        oldPassword,\r\n        newPassword,\r\n      };\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'auth-token' : token,\r\n          'Accept' : 'application/json',\r\n          'Content-Type' : 'application/json',\r\n        }\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const message = response.json();\r\n        setLoading(false);\r\n        setResetPasswordRes(message.successMessage);\r\n      } else {\r\n        const message = response.json();\r\n        setLoading(false);\r\n        setResetPasswordRes(message.errMessage);\r\n      };\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setResetPasswordRes(error.TypeError);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {document.location.pathname === '/customer/setting' ? <CustomerDashboardNav /> : <HandymanDashboardNav />}\r\n      <SettingsForm oldPassword={oldPassword}\r\n        newPassword={newPassword}\r\n        name={name}\r\n        email={email}\r\n        phone={phone}\r\n        loading={loading}\r\n        personalInfoRes={personalInfoRes}\r\n        handleName={handleName}\r\n        handleEmail={handleEmail}\r\n        handlePhone={handlePhone}\r\n        handleOldPassword={handleOldPassword}\r\n        handleNewPassword={handleNewPassword}\r\n        handlePersonalInformation={handlePersonalInformation}\r\n        handleResetPassword={handleResetPassword}\r\n       />\r\n      <MiniFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\settingsform.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\RequestPayment.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\RequestPaymentForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\jobTable.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanJob.js",["228"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport HandymanJobComp from '../statelessComponent/HandyManJobListComp';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { HandymanDashboardNav } from '../statelessComponent/Nav';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\n\r\nconst HandymanJob = () => {\r\n  const[jobs, setJobs] = useState([]);\r\n  const[loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    // Get the User Jobs\r\n    const getJobs = async ()  => {\r\n    try {\r\n      setLoading(true);\r\n      const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/get-all-jobs';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        setLoading(false);\r\n        setJobs(data);\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n         history.push('/handyman/login');\r\n      };\r\n      if(mounted.current && response.status === 201) {\r\n        setLoading(false);\r\n        setJobs(data);\r\n      };\r\n\r\n      setJobs(data);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setJobs(error);\r\n    }\r\n  };\r\n  getJobs();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n\r\n  const logic = () => {\r\n    if (loading) {\r\n      <div>\r\n        <NeedHelpTemplate />\r\n        <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">Loading Jobs...</h4>\r\n        <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n        </div>\r\n      </div>\r\n    }\r\n\r\n    if (typeof jobs === String) {\r\n      <div>\r\n        <NeedHelpTemplate />\r\n        <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">{jobs.errMessage}</h4>\r\n        <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n        }} className=\"mini-footer\">\r\n          <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n        </div>\r\n      </div>\r\n    }\r\n\r\n    if (jobs.jobs === undefined) {\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">Loading Jobs...</h4>\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (jobs.jobs.length === 0) {\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">No Jobs Yet!!</h4>\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n    const mappedJob = jobs.jobs.map((job) => <HandymanJobComp key={job._id} job={job}/>);\r\n    return (\r\n      <div>\r\n        <NeedHelpTemplate />\r\n        {mappedJob}\r\n        <MiniFooter />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <HandymanDashboardNav />\r\n      {logic()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandymanJob;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandyManJobListComp.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Loading.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PrivacyPolicy.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\About.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Terms.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\relaks__cta.js",[],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":8,"column":3,"nodeType":"235","messageId":"236","endLine":8,"endColumn":12},{"ruleId":"233","severity":1,"message":"237","line":10,"column":10,"nodeType":"235","messageId":"236","endLine":10,"endColumn":25},{"ruleId":"238","severity":1,"message":"239","line":60,"column":6,"nodeType":"240","endLine":60,"endColumn":8,"suggestions":"241"},{"ruleId":"238","severity":1,"message":"239","line":101,"column":6,"nodeType":"240","endLine":101,"endColumn":8,"suggestions":"242"},{"ruleId":"238","severity":1,"message":"243","line":78,"column":6,"nodeType":"240","endLine":78,"endColumn":8,"suggestions":"244"},{"ruleId":"238","severity":1,"message":"243","line":81,"column":6,"nodeType":"240","endLine":81,"endColumn":8,"suggestions":"245"},{"ruleId":"238","severity":1,"message":"243","line":139,"column":6,"nodeType":"240","endLine":139,"endColumn":8,"suggestions":"246"},{"ruleId":"238","severity":1,"message":"243","line":232,"column":6,"nodeType":"240","endLine":232,"endColumn":8,"suggestions":"247"},{"ruleId":"233","severity":1,"message":"248","line":30,"column":9,"nodeType":"235","messageId":"236","endLine":30,"endColumn":24},{"ruleId":"233","severity":1,"message":"249","line":4,"column":8,"nodeType":"235","messageId":"236","endLine":4,"endColumn":24},{"ruleId":"233","severity":1,"message":"250","line":15,"column":9,"nodeType":"235","messageId":"236","endLine":15,"endColumn":25},{"ruleId":"238","severity":1,"message":"239","line":53,"column":6,"nodeType":"240","endLine":53,"endColumn":8,"suggestions":"251"},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-unused-vars","'faHeadset' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["254"],["255"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["256"],["257"],["258"],["259"],"'loginFieldLogic' is assigned a value but never used.","'NeedHelpTemplate' is defined but never used.","'resetPasswordRes' is assigned a value but never used.",["260"],"no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"261","fix":"263"},{"desc":"264","fix":"265"},{"desc":"264","fix":"266"},{"desc":"264","fix":"267"},{"desc":"264","fix":"268"},{"desc":"261","fix":"269"},"Update the dependencies array to be: [history]",{"range":"270","text":"271"},{"range":"272","text":"271"},"Update the dependencies array to be: [getData]",{"range":"273","text":"274"},{"range":"275","text":"274"},{"range":"276","text":"274"},{"range":"277","text":"274"},{"range":"278","text":"271"},[1937,1939],"[history]",[3034,3036],[2360,2362],"[getData]",[2432,2434],[3545,3547],[6720,6722],[1647,1649]]