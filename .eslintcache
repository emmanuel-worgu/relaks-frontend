[{"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\index.js":"1","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\App.js":"3","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanLogin.js":"4","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerLogin.js":"5","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerForgotPassword.js":"6","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Home.js":"7","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ContactUs.js":"8","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerRegister.js":"9","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\404.js":"10","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyHandyman.js":"11","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanForgotPassword.js":"12","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanRegister.js":"13","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanDashboard.js":"14","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\BookJob.js":"15","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Pricing.js":"16","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyCustomer.js":"17","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ThankYouPage.js":"18","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerJob.js":"19","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerDashboard.js":"20","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Flutterwave.js":"21","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\JobList.js":"22","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Review.js":"23","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Nav.js":"24","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\NeedHelpTemplate.js":"25","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ForgotPasswordForm.js":"26","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Footer.js":"27","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\loginForm.js":"28","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Job.js":"29","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\verifyUserForm.js":"30","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\registerForm.js":"31","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanIsVerified.js":"32","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\CustomerJobComponent.js":"33","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PricingPlan.js":"34","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Dashboard.js":"35","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ReviewForm.js":"36","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanJob.js":"37","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\MiniFooter.js":"38"},{"size":500,"mtime":499162500000,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"40"},{"size":3068,"mtime":1615022278450,"results":"42","hashOfConfig":"40"},{"size":3195,"mtime":1612533204575,"results":"43","hashOfConfig":"40"},{"size":3014,"mtime":1612958983554,"results":"44","hashOfConfig":"40"},{"size":2206,"mtime":1612539099134,"results":"45","hashOfConfig":"40"},{"size":6756,"mtime":1614787840162,"results":"46","hashOfConfig":"40"},{"size":1303,"mtime":1614616212101,"results":"47","hashOfConfig":"40"},{"size":3936,"mtime":1614714672580,"results":"48","hashOfConfig":"40"},{"size":1140,"mtime":1614632544270,"results":"49","hashOfConfig":"40"},{"size":2650,"mtime":1612540490873,"results":"50","hashOfConfig":"40"},{"size":2262,"mtime":1612724809162,"results":"51","hashOfConfig":"40"},{"size":4251,"mtime":1612532477331,"results":"52","hashOfConfig":"40"},{"size":1884,"mtime":1612522276093,"results":"53","hashOfConfig":"40"},{"size":7261,"mtime":1614857695756,"results":"54","hashOfConfig":"40"},{"size":4627,"mtime":1614768737821,"results":"55","hashOfConfig":"40"},{"size":2685,"mtime":1612540515744,"results":"56","hashOfConfig":"40"},{"size":760,"mtime":1615222575684,"results":"57","hashOfConfig":"40"},{"size":3314,"mtime":1615049392699,"results":"58","hashOfConfig":"40"},{"size":1620,"mtime":1614870508811,"results":"59","hashOfConfig":"40"},{"size":4218,"mtime":1614434766241,"results":"60","hashOfConfig":"40"},{"size":3036,"mtime":1615244841103,"results":"61","hashOfConfig":"40"},{"size":1929,"mtime":1615023556254,"results":"62","hashOfConfig":"40"},{"size":1274,"mtime":1614505716762,"results":"63","hashOfConfig":"40"},{"size":234,"mtime":1612725084564,"results":"64","hashOfConfig":"40"},{"size":1366,"mtime":1612725202456,"results":"65","hashOfConfig":"40"},{"size":1231,"mtime":1614767976581,"results":"66","hashOfConfig":"40"},{"size":2999,"mtime":1612958924199,"results":"67","hashOfConfig":"40"},{"size":4870,"mtime":1614633696973,"results":"68","hashOfConfig":"40"},{"size":2369,"mtime":1612725736001,"results":"69","hashOfConfig":"40"},{"size":6755,"mtime":1614072160395,"results":"70","hashOfConfig":"40"},{"size":924,"mtime":1612724480567,"results":"71","hashOfConfig":"40"},{"size":1029,"mtime":1614985279167,"results":"72","hashOfConfig":"40"},{"size":5558,"mtime":1614817717097,"results":"73","hashOfConfig":"40"},{"size":518,"mtime":1614691587205,"results":"74","hashOfConfig":"40"},{"size":1559,"mtime":1614952628309,"results":"75","hashOfConfig":"40"},{"size":2217,"mtime":1615053611721,"results":"76","hashOfConfig":"40"},{"size":205,"mtime":1611678622197,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1cdldua",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\index.js",[],["164","165"],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\App.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanLogin.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerLogin.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerForgotPassword.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Home.js",["166"],"import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Nav from './Nav';\r\nimport Footer from './Footer';\r\nimport NeedHelpTemplate from './NeedHelpTemplate';\r\n\r\nimport '../css/home.css';\r\nimport HomeBackground from '../assest/home_background.jpg';\r\nimport Relaks from '../assest/relaxing.svg';\r\n\r\nconst Home = () => {\r\n\r\n  const[loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const customerRoute = () => {\r\n    setLoading(true);\r\n    history.push('/customer/register');\r\n  };\r\n\r\n  const handymanRoute = () => {\r\n    setLoading(true);\r\n    history.push('/handyman/register');\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <NeedHelpTemplate />\r\n      </div>\r\n      <Nav />\r\n      <div>\r\n        <div id=\"setImg\">\r\n          <div>\r\n            <img src={HomeBackground} className=\"hero-img\" alt=\"relaks-home-background\" />\r\n          </div>\r\n          <div className=\"hero-content\">\r\n            <h3 className=\"hero-text\">Live A Frustration Free Life!!</h3>\r\n            <p className=\"hero-text\">Get all your home repairs done for a monthly fee</p>\r\n            <div className=\"hero-button\">\r\n              <button id=\"home-button\" className=\"submit-button\" onClick={customerRoute}>\r\n                <b className=\"button-text\">{loading ? 'Loading...' : 'Get Your Home Fixed'}</b>\r\n              </button>\r\n            </div>\r\n            <div className=\"hero-or\">\r\n              <h3 className=\"hero-text\"><b>OR</b></h3>\r\n            </div>\r\n            <h3 className=\"hero-text\">Join Relaks Technicians</h3>\r\n            <p className=\"hero-text\">Earn Money by helping Homeowners get their home fixed</p>\r\n            <div className=\"hero-button\">\r\n              <button className=\"submit-button\" id=\"home-button\" onClick={handymanRoute}>\r\n                <b className=\"button-text\">Join Relaks Technicians</b>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"how-its-works\">\r\n          <h2>How Relaks Works</h2>\r\n        </div>\r\n        <div className=\"pricing\">\r\n          <p id=\"pricing-para\">Relaks makes it easy for you to take care of your home. Get Started with Relaks with just three easy steps!!</p>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-4 col-xl-4\">\r\n            <div className=\"how-its-works-items\">\r\n              <h4 className=\"how-its-works-content\">Create An Account</h4>\r\n              <p className=\"how-its-works-text\">Register with us by just filling your name, email, phone number and password. That is it!!</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-4 col-xl-4\">\r\n            <div className=\"how-its-works-items\">\r\n              <h4 className=\"how-its-works-content\">Subscribe to any of our Plan</h4>\r\n              <p className=\"how-its-works-text\">Save cost by paying for our plan and never worry about your home repair needs</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-4 col-xl-4\">\r\n            <div className=\"how-its-works-items\">\r\n              <h4 className=\"how-its-works-content\">Get your home fixed</h4>\r\n              <p className=\"how-its-works-text\">Get your home fixed whenever it happens. You don't have to worry about getting good artisan or the cost of getting it done.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div  id=\"svg-section\" className=\"row\">\r\n          <div className=\"col-sm-6 col-md-6\">\r\n            <div>\r\n              <img src={Relaks} alt=\"relaxing\" className=\"svg\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-6 col-md-6\" id=\"svg-content\">\r\n            <div className=\"happiness-div\">\r\n              <h4 className=\"happiness\">Happiness Guaranteed</h4>\r\n              <p className=\"happiness-content\">If for whatever reason you are not happy with the service. We will try to make it right!! </p>\r\n              <div className=\"happiness-button\">\r\n                <button className=\"submit-button\" onClick={customerRoute}>\r\n                  <b className=\"button-text\">Get Your Home Fixed</b>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"benefit-section\">\r\n          <div className=\"how-its-works\">\r\n            <h2>Benefit of Relaks</h2>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12 col-md-6 col-xl-3\">\r\n              <div className=\"how-its-works-items\">\r\n                <h4 className=\"how-its-works-content\">Saves Time!! Saves Cost!!</h4>\r\n                <p className=\"how-its-works-text\">Avoid unneccessary wastage of time and cost. Get covered with Relaks and fix your home with just a click of a buuton.</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-12 col-md-6 col-xl-3\">\r\n              <div className=\"how-its-works-items\">\r\n                <h4 className=\"how-its-works-content\">No Worry!! No Stress!!</h4>\r\n                <p className=\"how-its-works-text\">Relaks only send well screened, vetted and professional technicians so that you can feel RELAKS and do what matters to you most</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-12 col-md-6 col-xl-3\">\r\n              <div className=\"how-its-works-items\">\r\n                <h4 className=\"how-its-works-content\">Transparent Pricing</h4>\r\n                <p className=\"how-its-works-text\">What you see is what you pay!! No strings attached</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-12 col-md-6 col-xl-3\">\r\n              <div className=\"how-its-works-items\">\r\n                <h4 className=\"how-its-works-content\">Secured Payment</h4>\r\n                <p className=\"how-its-works-text\">Relaks uses industry standard payment security to make to sure your payment are secured</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"pricing\">\r\n          <h2>Relaks Pricing</h2>\r\n        </div>\r\n        <div className=\"pricing\">\r\n          <p className=\"pricing-text\">Pay Once every year and be covered for your home repair needs</p>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-4 col-xl-4\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Gold</h5>\r\n                <p className=\"card-tex\">\r\n                  <b>Amount: 50000</b>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ContactUs.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerRegister.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\404.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyHandyman.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanForgotPassword.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanRegister.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanDashboard.js",["167","168"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport HandymanIsVerified from '../statelessComponent/HandymanIsVerified';\r\n\r\nconst HandymanDashboard = () => {\r\n  const[response, setResponse] = useState({\r\n    loading: true,\r\n    isAuth: false,\r\n    data: 'The fist Render!!'\r\n  });\r\n  let history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    const getData = async ()  => {\r\n    try {\r\n      setResponse({\r\n        loading: true,\r\n      });\r\n      const url = 'http://localhost:5000/api/handymen/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current) {\r\n        setResponse({\r\n          loading: false,\r\n          data: data,\r\n          isAuth: true\r\n        });\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n        history.push('/handyman/login');\r\n      };\r\n      if(mounted.current && response.status === 201) {\r\n        return (\r\n          <HandymanIsVerified />\r\n        );\r\n      };\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  getData();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n  if (!response.loading) {\r\n    return (\r\n      <div>\r\n        {/* <p>\r\n          <li>{response.data.name || response.data.errMessage}</li>\r\n          <li>{response.data.email}</li>\r\n          <li>{response.data.phone}</li>\r\n        </p> */}\r\n        <HandymanIsVerified />\r\n    </div>\r\n    );\r\n  }\r\n  return(\r\n    <p>Loading....</p>\r\n  );\r\n};\r\n\r\nexport default HandymanDashboard;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\BookJob.js",["169","170","171","172"],"import React, { useState, useEffect, useRef} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Job from '../statelessComponent/Job';\r\n\r\nconst BookJob = () => {\r\n  const[jobPoster, setJobPoster] = useState('');\r\n  const[work, setWork] = useState('')\r\n  const[workInfo, setWorkInfo] = useState('');\r\n  const[dateToCome, setDateToCome] = useState('');\r\n  const[timeToCome, setTimeToCome] = useState('');\r\n  const[serviceCategory, setServiceCategory] = useState({\r\n    value: ''\r\n  });\r\n  const[homeAddress, setHomeAddress] = useState('');\r\n  const[busStop, setBusStop] = useState('');\r\n  const[city, setCity] = useState('');\r\n  const[state, setState] = useState('');\r\n  const[response, setResponse] = useState({\r\n    message: {},\r\n    loading: false,\r\n    error: ''\r\n  });\r\n  const[isAuth, setIsAuth] = useState(false);\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n  \r\n  // Variable to abort the fetch request\r\n  // Will work on it later\r\n  const abortController = new AbortController();\r\n  const signal = abortController.signal;\r\n\r\n  // This function will check if the user is authenticated\r\n  // it also fetch the user info from the server and return isAuth true\r\n  useEffect(() => {\r\n    const getData = async ()  => {\r\n    try {\r\n      const url = 'http://localhost:5000/api/customers/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        console.log(data);\r\n        setIsAuth(true);\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n        console.log(data);\r\n        console.log('Not Authenticated!!')\r\n        history.push('/customer/login');\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Cleans up the DOM\r\n  getData();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  });\r\n\r\n  const handleWork = (e) => {\r\n    setWork(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleWorkInfo = (e) => {\r\n    setWorkInfo(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDateToCome = (e) => {\r\n    setDateToCome(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleTimeToCome = (e) => {\r\n    setTimeToCome(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleServiceCategory = (e) => {\r\n    setServiceCategory({ value: e.target.value });\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleHomeAddress = (e) => {\r\n    setHomeAddress(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleBusStop = (e) => {\r\n    setBusStop(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleCity = (e) => {\r\n    setCity(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleState = (e) => {\r\n    setState(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    setResponse({\r\n      loading: true\r\n    });\r\n    if (work === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'What do you want to fix. This is required!!'\r\n      });\r\n    } else if (serviceCategory.value === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'Please Choose a category that fit your job!!'\r\n      });\r\n    } else if (dateToCome === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'Please tell us the date to come!!'\r\n      });\r\n    } else if (timeToCome === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'What time should we come!!'\r\n      });\r\n    } else if (workInfo === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'Please Provide us with a little info about your work!!'\r\n      });\r\n    } else if (homeAddress === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'What is your home address!!'\r\n      });\r\n    } else if (busStop === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'What is your nearest bus stop!!'\r\n      });\r\n    } else if (city === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'What is your city!!'\r\n      });\r\n    } else if (state === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'Please provide us with your state!!'\r\n      });\r\n    };\r\n\r\n    const data = {\r\n      jobBooked: {\r\n        jobName: work\r\n      },\r\n      jobScheduled: {\r\n        date: dateToCome\r\n      },\r\n      jobDescription: workInfo,\r\n      location: {\r\n        state,\r\n        city,\r\n        nearestBusStop: busStop\r\n      }\r\n    }\r\n    try {\r\n      const url = 'http://localhost:5000/api/customers/book-service';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          \"auth-token\": token,\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\",\r\n          \"Access-Control-Allow-Origin-\": \"no-cors\"\r\n        }\r\n    });\r\n    if (response.status === 200) {\r\n      const message = await response.json();\r\n      setResponse({\r\n        loading: false,\r\n        message,\r\n      });\r\n      console.log(message);\r\n      history.push('/customer/book-service/confirm');\r\n    }\r\n    if (response.status === 201) {\r\n      const message = await response.json();\r\n      return setResponse({\r\n        loading: false,\r\n        error: message.errMessage || message,\r\n      });\r\n    }\r\n    if (response.status === 400) {\r\n      const message = await response.json();\r\n      return setResponse({\r\n        loading: false,\r\n        error: message.errMessage,\r\n      });\r\n    }\r\n    if (response.status === 401) {\r\n      const message = await response.json();\r\n      setResponse({\r\n        loading: false,\r\n        error: message.errMessage,\r\n      });\r\n      setTimeout(() => {\r\n        history.push('/customer/login');\r\n      },6000);\r\n    }\r\n    } catch (error) {\r\n      setResponse({\r\n        loading: false,\r\n        error: 'There was a problem!! Our Engineers have been Notified. Try Again!!'\r\n      })\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  });\r\n  return (\r\n    <div>\r\n      <Job work={work}\r\n        handleWork={handleWork}\r\n        serviceCategory={serviceCategory.value}\r\n        handleServiceCategory={handleServiceCategory}\r\n        dateToCome={dateToCome}\r\n        handleDateToCome={handleDateToCome} \r\n        timeToCome={timeToCome}\r\n        handleTimeToCome={handleTimeToCome}\r\n        workInfo={workInfo}\r\n        handleWorkInfo={handleWorkInfo}\r\n        homeAddress={homeAddress}\r\n        handleHomeAddress={handleHomeAddress}\r\n        busStop={busStop}\r\n        handleBusStop={handleBusStop}\r\n        city={city}\r\n        handleCity={handleCity}\r\n        state={state}\r\n        handleState={handleState}\r\n        handleSubmit={handleSubmit}\r\n        response={response}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default BookJob;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Pricing.js",["173","174","175"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PricingPlan from '../statelessComponent/PricingPlan';\r\n\r\nconst Pricing = () => {\r\n  const[user, setUser] = useState('');\r\n  const[plan, setPlan] = useState('');\r\n  const[isAuth, setIsAuth] = useState(false);\r\n  const[loading, setLoading] = useState({\r\n    _gold: false,\r\n    _silver: false,\r\n    _platinum: false,\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const token = localStorage.getItem('jwt_token');\r\n\r\n  const getData = async () => {\r\n    const url = 'http://localhost:5000/api/customers/dashboard';\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'auth-token': token,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      }\r\n    });\r\n    if (response.status === 200) {\r\n      setIsAuth(true);\r\n    } else {\r\n      setIsAuth(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  });\r\n    \r\n    // Each of Package function will redirect to the payment page once the response status is 200\r\n    const gold = async() => {\r\n      const data = {\r\n        planName: 'Gold'\r\n      }\r\n\r\n      try {\r\n        setLoading({\r\n          _gold: true,\r\n        });\r\n        console.log('Gold Package');\r\n        const url = 'http://localhost:5000/api/customers/choose-plan'\r\n\r\n        const response = await fetch(url, {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'auth-token': token,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        })\r\n\r\n        if (response.status === 200) {\r\n          const message = await response.json()\r\n          console.log(message);\r\n          setLoading({\r\n            _gold: false\r\n          });\r\n          history.push('/customer/pay');\r\n        } else {\r\n          const message = await response.json()\r\n          console.log(message);\r\n          setLoading({\r\n            _gold: false,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    const platinum = async() => {\r\n      const data = {\r\n        planName: 'Platinum'\r\n      }\r\n      try {\r\n        setLoading({\r\n          _platinum: true,\r\n        });\r\n        console.log('Platinum Package');\r\n        const url = 'http://localhost:5000/api/customers/choose-plan'\r\n\r\n        const response = await fetch(url, {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'auth-token': token,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        })\r\n\r\n        if (response.status === 200) {\r\n          const message = response.json()\r\n          console.log(message);\r\n          setLoading({\r\n            _platinum: false,\r\n          });\r\n          history.push('/customer/pay');\r\n        } else {\r\n          const message = await response.json();\r\n          console.log(message);\r\n          setLoading({\r\n            _platinum: false,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setLoading({\r\n          _platinum: false,\r\n        });\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    const silver = async() => {\r\n      const data = {\r\n        planName: 'Silver'\r\n      }\r\n      try {\r\n        setLoading({\r\n          _silver: true,\r\n        });\r\n        console.log('Silver Package');\r\n        const url = 'http://localhost:5000/api/customers/choose-plan'\r\n\r\n        const response = await fetch(url, {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'auth-token': token,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        })\r\n\r\n        if (response.status === 200) {\r\n          const message = await response.json()\r\n          console.log(message);\r\n          setLoading({\r\n            _silver: false,\r\n          });\r\n          history.push('/customer/pay');\r\n        } else {\r\n          const message = await response.json()\r\n          console.log(message);\r\n          setLoading({\r\n            _silver: false,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setLoading({\r\n          _silver: false,\r\n        });\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n  return (\r\n    <div>\r\n      <PricingPlan gold={gold}\r\n        silver={silver}\r\n        platinum={platinum}\r\n        loading={loading}\r\n        isAuth={isAuth}\r\n        plan={plan}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pricing;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyCustomer.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ThankYouPage.js",["176"],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerJob.js",["177"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomerJobComponent from '../statelessComponent/CustomerJobComponent';\r\nimport Footer from '../statelessComponent/Footer';\r\nimport Nav from '../statelessComponent/Nav';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\n\r\nconst CustomerJob = () => {\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  // The success variable checks if the request was successful\r\n  const[jobs, setJobs] = useState([]);\r\n  const[error, setError] = useState({\r\n    error: false,\r\n    message: ''\r\n  });\r\n  const[success, setSuccess] = useState(false);\r\n  const[loading, setLoading] = useState(false);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n    const url = 'http://localhost:5000/api/customers/get-all-jobs';\r\n\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'auth-token': token,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      }\r\n    });\r\n\r\n    if (mounted.current && response.status === 200) {\r\n      const job = await response.json();\r\n      // console.log(job);\r\n      setSuccess(true);\r\n      setLoading(false);\r\n      return setJobs(job);\r\n    } else if (mounted.current && response.status === 201) {\r\n      const job = await response.json();\r\n      setLoading(false)\r\n      setSuccess(false);\r\n      return setError({\r\n        error: true,\r\n        message: job.errMessage,\r\n      });\r\n    } else if (mounted.current && response.status === 401) {\r\n\r\n      history.push('/customer/login');\r\n    } else if (mounted.current && response.status === 400) {\r\n      const job = await response.json();\r\n      setLoading(false);\r\n      setSuccess(false);\r\n      return setError({\r\n        error: true,\r\n        message: job.errMessage,\r\n      });\r\n    }\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      // console.log(jobs);\r\n      setLoading(false);\r\n      setJobs(error)\r\n      setSuccess(false);\r\n      return setError({\r\n        error: true,\r\n        message: `Couldn't fetch the jobs. Please check your internet connection and try again!!`\r\n      });\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  // const mappedJob = jobs.map(job => {\r\n  //   console.log(job.jobDescription);\r\n  //   return(\r\n  //     <CustomerJobComponent key={job._id}\r\n  //     job={job}\r\n  //   />\r\n  //   );\r\n  // });\r\n\r\n  // const mappedJob = jobs.map(job =>  <CustomerJobComponent job={job} key={job._id} />);\r\n\r\n  const logic = () => {\r\n    if (loading) {\r\n      return (\r\n        <h4 className=\"how-its-works\">Fetching Your Jobs...</h4>\r\n      );\r\n    }\r\n\r\n    if (success) {\r\n      const mappedJob = jobs.map(job =>  <CustomerJobComponent job={job} key={job._id} />);\r\n      return mappedJob;\r\n    }\r\n\r\n    return (\r\n      <h4 className=\"how-its-works\">{error.message}</h4>\r\n    );\r\n\r\n  };\r\n  // const mappedJob = jobs.map(job => <p className=\"card-tex\">{job.Description}</p>)\r\n  return (\r\n    <div>\r\n      <NeedHelpTemplate />\r\n      <Nav />\r\n      {logic()}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerJob;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerDashboard.js",["178","179","180"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport Dashboard from '../statelessComponent/Dashboard';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\nimport Nav from '../statelessComponent/Nav';\r\n\r\nconst CustomerDashboard = () => {\r\n  const[response, setResponse] = useState({\r\n    loading: true,\r\n    isAuth: false,\r\n    data: 'The fist Render!!'\r\n  });\r\n  let history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    const getData = async ()  => {\r\n    try {\r\n      setResponse({\r\n        loading: true,\r\n      });\r\n      const url = 'http://localhost:5000/api/customers/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        setResponse({\r\n          loading: false,\r\n          data: data,\r\n          isAuth: true\r\n        });\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n        history.push('/customer/login');\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  getData();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <NeedHelpTemplate />\r\n      <Nav />\r\n      <Dashboard />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerDashboard;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Flutterwave.js",["181","182","183"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { useFlutterwave, closePaymentModal } from 'flutterwave-react-v3';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Flutterwave() {\r\n  const[user, setUser] = useState({\r\n    name: '',\r\n    email: '',\r\n    phonenumber: '',\r\n    planName: '',\r\n    amount: 0,\r\n  });\r\n  const[loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  const getUser = async () => {\r\n    const url = 'http://localhost:5000/api/customers/dashboard';\r\n    const token = localStorage.getItem('jwt_token');\r\n    setLoading(true);\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'auth-token': token,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      }\r\n    });\r\n    if (response.status === 200) {\r\n      const user = await response.json();\r\n      console.log(user);\r\n      console.log(user.phone);\r\n      setUser({\r\n        name: user.name,\r\n        email: user.email,\r\n        phonenumber: user.phone,\r\n        // planName: user.subscriptionPlan.planName,\r\n        // amount: user.subscriptionPlan.amount,\r\n      });\r\n      setLoading(false);\r\n    } else {\r\n      return history.push('/customer/login');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  // FLWPUBK-12312993f6d2b838c0c92154e059f86f-X\r\n  \r\n  const config = {\r\n    public_key: 'FLWPUBK_TEST-a69503fa38db11ad11dc4ea595059e4c-X',\r\n    tx_ref: `${user.name.slice(0,3)}-${Date.now()}${Math.floor(Math.random() * 1000000)}-X`,\r\n    amount: 1,\r\n    currency: 'NGN',\r\n    payment_options: 'card,mobilemoney,ussd',\r\n    customer: {\r\n      email: user.email,\r\n      phone_number: parseInt(user.phone),\r\n      name: user.name,\r\n    },\r\n    customizations: {\r\n      title: 'Plan Name',\r\n      description: 'Payment for items in cart',\r\n      logo: 'https://st2.depositphotos.com/4403291/7418/v/450/depositphotos_74189661-stock-illustration-online-shop-log.jpg',\r\n    },\r\n  };\r\n\r\n  const handleFlutterPayment = useFlutterwave(config);\r\n\r\n  const paymentGateway = () => {\r\n    setLoading(true);\r\n      handleFlutterPayment({\r\n        callback: async (response) => {\r\n          try {\r\n            console.log(response);\r\n            console.log(response.status);\r\n            const data = {\r\n              transaction_id: response.transaction_id,\r\n            };\r\n           //  if (response.status !== 'successful') {\r\n           //    setLoading(false);\r\n           //    console.log('Transaction not successful');\r\n           //    closePaymentModal();\r\n           //    return history.push('/customer/thank-you');\r\n           //  }\r\n           const url = 'http://localhost:5000/api/customers/verify-payment';\r\n           const token = localStorage.getItem('jwt_token');\r\n\r\n          //  Make a request to verify if the transaction was successful\r\n           const verifyTransaction = await fetch(url, {\r\n             method: 'POST',\r\n             body: JSON.stringify(data),\r\n             headers: {\r\n               'auth-token': token,\r\n               'Content-Type': 'application/json',\r\n               'Accept': 'application/json'\r\n             }\r\n           });\r\n\r\n           const verificationResponse = await verifyTransaction.json();\r\n           console.log(verificationResponse);\r\n           if (verificationResponse.status !== 200) {\r\n             console.log('We could not verify your transaction');\r\n           }\r\n           \r\n           closePaymentModal();  // this will close the modal programmatically\r\n           history.push('/customer/thank-you');\r\n           // Test ATM CARD =  5531 8866 5214 2950\r\n           // CVV = 564\r\n           // EXPIRY DATE = 09/32\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        },\r\n        onClose: () => {\r\n          console.log('close')\r\n        },\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    paymentGateway();\r\n    // return () => {\r\n    //   mounted.current = false;\r\n    // };\r\n  });\r\n\r\n  if (user.name.length < 0) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <div>Please Wait While we setup everything...</div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Flutterwave;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\JobList.js",["184"],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Review.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Nav.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\NeedHelpTemplate.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ForgotPasswordForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Footer.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\loginForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Job.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\verifyUserForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\registerForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanIsVerified.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\CustomerJobComponent.js",["185"],"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst CustomerJobComponent = (props) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const logic = props.success ? props.mappedJob : props.error;\r\n\r\n  const giveReviewButton = () => {\r\n    localStorage.setItem('id', props.job._id);\r\n    history.push('/customer/review')\r\n  };\r\n  return (\r\n    <div className=\"how-its-works\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 col-md-12 col-xl-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Testing</h4>\r\n              {/* <p className=\" card-text error\">{props.err}</p> */}\r\n              <p className=\"card-text\">{props.job.jobDescription}</p>\r\n              <div>\r\n                <button className=\"submit-button\" onClick={giveReviewButton}>Give Review</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerJobComponent;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PricingPlan.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Dashboard.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ReviewForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanJob.js",["186"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst HandymanJob = (props) => {\r\n\r\n  const[data, setData] = useState({\r\n    message: '',\r\n    loading: false,\r\n    success: false,\r\n  });\r\n\r\n\r\n  const acceptJob = () => {\r\n    setData({\r\n      loading: true\r\n    });\r\n    const data = {\r\n      id: props.job.id,\r\n    }\r\n    const url = 'http://localhost:5000/api/handymen/find-job';\r\n    const token = localStorage.getItem('jwt_token');\r\n\r\n    const response = fetch(url, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'auth-token': token,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      }\r\n    });\r\n\r\n    if (response.status !== 200) {\r\n      const  message = response.json();\r\n\r\n      setData({\r\n        message,\r\n        loading: false,\r\n        success: false,\r\n      });\r\n\r\n      alert(message);\r\n    }\r\n\r\n    const message = response.json();\r\n    setData({\r\n      message,\r\n      loading: false,\r\n      success: true,\r\n    });\r\n    alert(message);\r\n  };\r\n\r\n  const logic = () => {\r\n\r\n    if (data.loading) {\r\n      return (\r\n        <b>Accepting...</b>\r\n      );\r\n    }\r\n\r\n    if (data.success) {\r\n      return (\r\n        <b>Accepted</b>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <b>Accept</b>\r\n    );\r\n  };\r\n\r\n  // const textLogic = () => {\r\n  //     <h5>{data.message}</h5>\r\n\r\n  //   setTimeout(() => {\r\n  //     setData({\r\n  //       message: ''\r\n  //     });\r\n  //   }, 3000)\r\n  // };\r\n\r\n  return (\r\n    <div className=\"how-its-works\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 col-md-12 col-xl-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Testing</h4>\r\n              {/* <p className=\" card-text error\">{props.err}</p> */}\r\n              <p className=\"card-text\">{props.job.jobDescription}</p>\r\n              <div>\r\n                {/* {textLogic} */}\r\n                <button className=\"submit-button\" onClick={acceptJob}>{logic()}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandymanJob;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\MiniFooter.js",[],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":14},{"ruleId":"191","severity":1,"message":"195","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":18},{"ruleId":"196","severity":1,"message":"197","line":55,"column":6,"nodeType":"198","endLine":55,"endColumn":8,"suggestions":"199"},{"ruleId":"191","severity":1,"message":"200","line":6,"column":9,"nodeType":"193","messageId":"194","endLine":6,"endColumn":18},{"ruleId":"191","severity":1,"message":"201","line":6,"column":20,"nodeType":"193","messageId":"194","endLine":6,"endColumn":32},{"ruleId":"191","severity":1,"message":"202","line":23,"column":9,"nodeType":"193","messageId":"194","endLine":23,"endColumn":15},{"ruleId":"191","severity":1,"message":"203","line":30,"column":9,"nodeType":"193","messageId":"194","endLine":30,"endColumn":15},{"ruleId":"191","severity":1,"message":"204","line":6,"column":9,"nodeType":"193","messageId":"194","endLine":6,"endColumn":13},{"ruleId":"191","severity":1,"message":"205","line":6,"column":15,"nodeType":"193","messageId":"194","endLine":6,"endColumn":22},{"ruleId":"191","severity":1,"message":"206","line":7,"column":15,"nodeType":"193","messageId":"194","endLine":7,"endColumn":22},{"ruleId":"191","severity":1,"message":"207","line":9,"column":9,"nodeType":"193","messageId":"194","endLine":9,"endColumn":17},{"ruleId":"196","severity":1,"message":"208","line":81,"column":6,"nodeType":"198","endLine":81,"endColumn":8,"suggestions":"209"},{"ruleId":"191","severity":1,"message":"195","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":18},{"ruleId":"191","severity":1,"message":"210","line":8,"column":9,"nodeType":"193","messageId":"194","endLine":8,"endColumn":17},{"ruleId":"196","severity":1,"message":"197","line":51,"column":6,"nodeType":"198","endLine":51,"endColumn":8,"suggestions":"211"},{"ruleId":"191","severity":1,"message":"212","line":13,"column":9,"nodeType":"193","messageId":"194","endLine":13,"endColumn":16},{"ruleId":"191","severity":1,"message":"213","line":16,"column":7,"nodeType":"193","messageId":"194","endLine":16,"endColumn":14},{"ruleId":"196","severity":1,"message":"214","line":49,"column":6,"nodeType":"198","endLine":49,"endColumn":8,"suggestions":"215"},{"ruleId":"196","severity":1,"message":"208","line":84,"column":6,"nodeType":"198","endLine":84,"endColumn":8,"suggestions":"216"},{"ruleId":"191","severity":1,"message":"217","line":8,"column":9,"nodeType":"193","messageId":"194","endLine":8,"endColumn":14},{"ruleId":"191","severity":1,"message":"218","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":20},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["221"],"'jobPoster' is assigned a value but never used.","'setJobPoster' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'signal' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setPlan' is assigned a value but never used.","'redirect' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["222"],"'response' is assigned a value but never used.",["223"],"'loading' is assigned a value but never used.","'mounted' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["224"],["225"],"'logic' is assigned a value but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"226","fix":"230"},{"desc":"231","fix":"232"},{"desc":"228","fix":"233"},"Update the dependencies array to be: [history]",{"range":"234","text":"235"},"Update the dependencies array to be: [getData]",{"range":"236","text":"237"},{"range":"238","text":"235"},"Update the dependencies array to be: [getUser]",{"range":"239","text":"240"},{"range":"241","text":"237"},[1498,1500],"[history]",[2393,2395],"[getData]",[1470,1472],[1350,1352],"[getUser]",[2462,2464]]