[{"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\index.js":"1","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\App.js":"2","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\loginForm.js":"4","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\registerForm.js":"5","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Loading.js":"6","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\DashboardData.js":"7","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Home.js":"8","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Nav.js":"9","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ForgotPasswordForm.js":"10","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\verifyUserForm.js":"11","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Footer.js":"12","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\BookJob.js":"13","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Job.js":"14","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\MiniFooter.js":"15","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerLogin.js":"16","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanLogin.js":"17","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerRegister.js":"18","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanRegister.js":"19","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerForgotPassword.js":"20","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanForgotPassword.js":"21","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyCustomer.js":"22","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyHandyman.js":"23","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerDashboard.js":"24","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanDashboard.js":"25","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanIsVerified.js":"26","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\NeedHelpTemplate.js":"27","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Flutterwave.js":"28","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\404.js":"29","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ThankYouPage.js":"30","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Pricing.js":"31","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PricingPlan.js":"32"},{"size":500,"mtime":499162500000,"results":"33","hashOfConfig":"34"},{"size":2591,"mtime":1613860606870,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"34"},{"size":2999,"mtime":1612958924199,"results":"37","hashOfConfig":"34"},{"size":6755,"mtime":1614072160395,"results":"38","hashOfConfig":"34"},{"size":217,"mtime":1609792617054,"results":"39","hashOfConfig":"34"},{"size":146,"mtime":1609960333739,"results":"40","hashOfConfig":"34"},{"size":2581,"mtime":1614071923363,"results":"41","hashOfConfig":"34"},{"size":1274,"mtime":1611587654178,"results":"42","hashOfConfig":"34"},{"size":1366,"mtime":1612725202456,"results":"43","hashOfConfig":"34"},{"size":2369,"mtime":1612725736001,"results":"44","hashOfConfig":"34"},{"size":157,"mtime":1611530272062,"results":"45","hashOfConfig":"34"},{"size":7259,"mtime":1614083678560,"results":"46","hashOfConfig":"34"},{"size":4864,"mtime":1613216664428,"results":"47","hashOfConfig":"34"},{"size":205,"mtime":1611678622197,"results":"48","hashOfConfig":"34"},{"size":3014,"mtime":1612958983554,"results":"49","hashOfConfig":"34"},{"size":3195,"mtime":1612533204575,"results":"50","hashOfConfig":"34"},{"size":3931,"mtime":1614025577798,"results":"51","hashOfConfig":"34"},{"size":4251,"mtime":1612532477331,"results":"52","hashOfConfig":"34"},{"size":2206,"mtime":1612539099134,"results":"53","hashOfConfig":"34"},{"size":2262,"mtime":1612724809162,"results":"54","hashOfConfig":"34"},{"size":2685,"mtime":1612540515744,"results":"55","hashOfConfig":"34"},{"size":2650,"mtime":1612540490873,"results":"56","hashOfConfig":"34"},{"size":1612,"mtime":1613483525085,"results":"57","hashOfConfig":"34"},{"size":1884,"mtime":1612522276093,"results":"58","hashOfConfig":"34"},{"size":924,"mtime":1612724480567,"results":"59","hashOfConfig":"34"},{"size":234,"mtime":1612725084564,"results":"60","hashOfConfig":"34"},{"size":3993,"mtime":1614433562556,"results":"61","hashOfConfig":"34"},{"size":562,"mtime":1613420579775,"results":"62","hashOfConfig":"34"},{"size":635,"mtime":1613475563268,"results":"63","hashOfConfig":"34"},{"size":4589,"mtime":1614025810513,"results":"64","hashOfConfig":"34"},{"size":1848,"mtime":1614022426529,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1cdldua",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"68"},"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\index.js",[],["136","137"],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\App.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\loginForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\registerForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Loading.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\DashboardData.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Home.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Nav.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ForgotPasswordForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\verifyUserForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Footer.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\BookJob.js",["138","139","140","141","142"],"import React, { useState, useEffect, useRef} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Job from '../statelessComponent/Job';\r\n\r\nconst BookJob = () => {\r\n  const[jobPoster, setJobPoster] = useState('');\r\n  const[work, setWork] = useState('')\r\n  const[workInfo, setWorkInfo] = useState('');\r\n  const[dateToCome, setDateToCome] = useState('');\r\n  const[timeToCome, setTimeToCome] = useState('');\r\n  const[serviceCategory, setServiceCategory] = useState({\r\n    value: ''\r\n  });\r\n  const[homeAddress, setHomeAddress] = useState('');\r\n  const[busStop, setBusStop] = useState('');\r\n  const[city, setCity] = useState('');\r\n  const[state, setState] = useState('');\r\n  const[response, setResponse] = useState({\r\n    message: {},\r\n    loading: false,\r\n    error: ''\r\n  });\r\n  const[isAuth, setIsAuth] = useState(false);\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n  \r\n  // Variable to abort the fetch request\r\n  // Will work on it later\r\n  const abortController = new AbortController();\r\n  const signal = abortController.signal;\r\n\r\n  // This function will check if the user is authenticated\r\n  // it also fetch the user info from the server and return isAuth true\r\n  useEffect(() => {\r\n    const getData = async ()  => {\r\n    try {\r\n      const url = 'http://localhost:5000/api/customers/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        console.log(data);\r\n        setIsAuth(true);\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n        console.log(data);\r\n        console.log('Not Authenticated!!')\r\n        history.push('/customer/login');\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Cleans up the DOM\r\n  getData();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n\r\n  const handleWork = (e) => {\r\n    setWork(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleWorkInfo = (e) => {\r\n    setWorkInfo(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDateToCome = (e) => {\r\n    setDateToCome(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleTimeToCome = (e) => {\r\n    setTimeToCome(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleServiceCategory = (e) => {\r\n    setServiceCategory({ value: e.target.value });\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleHomeAddress = (e) => {\r\n    setHomeAddress(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleBusStop = (e) => {\r\n    setBusStop(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleCity = (e) => {\r\n    setCity(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleState = (e) => {\r\n    setState(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    setResponse({\r\n      loading: true\r\n    });\r\n    if (work === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'What do you want to fix. This is required!!'\r\n      });\r\n    } else if (serviceCategory.value === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'Please Choose a category that fit your job!!'\r\n      });\r\n    } else if (dateToCome === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'Please tell us the date to come!!'\r\n      });\r\n    } else if (timeToCome === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'What time should we come!!'\r\n      });\r\n    } else if (workInfo === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'Please Provide us with a little info about your work!!'\r\n      });\r\n    } else if (homeAddress === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'What is your home address!!'\r\n      });\r\n    } else if (busStop === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'What is your nearest bus stop!!'\r\n      });\r\n    } else if (city === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'What is your city!!'\r\n      });\r\n    } else if (state === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'Please provide us with your state!!'\r\n      });\r\n    };\r\n\r\n    const data = {\r\n      jobBooked: {\r\n        jobName: work\r\n      },\r\n      jobScheduled: {\r\n        date: dateToCome\r\n      },\r\n      jobDescription: workInfo,\r\n      location: {\r\n        state,\r\n        city,\r\n        nearestBusStop: busStop\r\n      }\r\n    }\r\n    try {\r\n      const url = 'http://localhost:5000/api/customers/book-service';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          \"auth-token\": token,\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\",\r\n          \"Access-Control-Allow-Origin-\": \"no-cors\"\r\n        }\r\n    });\r\n    if (response.status === 200) {\r\n      const message = await response.json();\r\n      setResponse({\r\n        loading: false,\r\n        message,\r\n      });\r\n      console.log(message);\r\n      history.push('/customer/book-service/confirm');\r\n    }\r\n    if (response.status === 201) {\r\n      const message = await response.json();\r\n      return setResponse({\r\n        loading: false,\r\n        error: message.errMessage || message,\r\n      });\r\n    }\r\n    if (response.status === 400) {\r\n      const message = await response.json();\r\n      return setResponse({\r\n        loading: false,\r\n        error: message.errMessage,\r\n      });\r\n    }\r\n    if (response.status === 401) {\r\n      const message = await response.json();\r\n      setResponse({\r\n        loading: false,\r\n        error: message.errMessage,\r\n      });\r\n      setTimeout(() => {\r\n        history.push('/customer/login');\r\n      },6000);\r\n    }\r\n    } catch (error) {\r\n      setResponse({\r\n        loading: false,\r\n        error: 'There was a problem!! Our Engineers have been Notified. Try Again!!'\r\n      })\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  });\r\n  return (\r\n    <div>\r\n      <Job work={work}\r\n        handleWork={handleWork}\r\n        serviceCategory={serviceCategory}\r\n        handleServiceCategory={handleServiceCategory}\r\n        dateToCome={dateToCome}\r\n        handleDateToCome={handleDateToCome} \r\n        timeToCome={timeToCome}\r\n        handleTimeToCome={handleTimeToCome}\r\n        workInfo={workInfo}\r\n        handleWorkInfo={handleWorkInfo}\r\n        homeAddress={homeAddress}\r\n        handleHomeAddress={handleHomeAddress}\r\n        busStop={busStop}\r\n        handleBusStop={handleBusStop}\r\n        city={city}\r\n        handleCity={handleCity}\r\n        state={state}\r\n        handleState={handleState}\r\n        handleSubmit={handleSubmit}\r\n        response={response}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default BookJob;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Job.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\MiniFooter.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerLogin.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanLogin.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerRegister.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanRegister.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerForgotPassword.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanForgotPassword.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyCustomer.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyHandyman.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerDashboard.js",["143","144"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\nconst CustomerDashboard = () => {\r\n  const[response, setResponse] = useState({\r\n    loading: true,\r\n    isAuth: false,\r\n    data: 'The fist Render!!'\r\n  });\r\n  let history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    const getData = async ()  => {\r\n    try {\r\n      setResponse({\r\n        loading: true,\r\n      });\r\n      const url = 'http://localhost:5000/api/customers/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        setResponse({\r\n          loading: false,\r\n          data: data,\r\n          isAuth: true\r\n        });\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n        history.push('/customer/login');\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  getData();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n  if (!response.loading) {\r\n    return (\r\n      <div>\r\n        <p>\r\n          <li>{response.data.name}</li>\r\n          <li>{response.data.email}</li>\r\n          <li>{response.data.phone}</li>\r\n        </p>\r\n    </div>\r\n    );\r\n  }\r\n  return(\r\n    <p>Loading....</p>\r\n  );\r\n};\r\n\r\nexport default CustomerDashboard;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanDashboard.js",["145","146"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport HandymanIsVerified from '../statelessComponent/HandymanIsVerified';\r\n\r\nconst HandymanDashboard = () => {\r\n  const[response, setResponse] = useState({\r\n    loading: true,\r\n    isAuth: false,\r\n    data: 'The fist Render!!'\r\n  });\r\n  let history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    const getData = async ()  => {\r\n    try {\r\n      setResponse({\r\n        loading: true,\r\n      });\r\n      const url = 'http://localhost:5000/api/handymen/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current) {\r\n        setResponse({\r\n          loading: false,\r\n          data: data,\r\n          isAuth: true\r\n        });\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n        history.push('/handyman/login');\r\n      };\r\n      if(mounted.current && response.status === 201) {\r\n        return (\r\n          <HandymanIsVerified />\r\n        );\r\n      };\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  getData();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n  if (!response.loading) {\r\n    return (\r\n      <div>\r\n        {/* <p>\r\n          <li>{response.data.name || response.data.errMessage}</li>\r\n          <li>{response.data.email}</li>\r\n          <li>{response.data.phone}</li>\r\n        </p> */}\r\n        <HandymanIsVerified />\r\n    </div>\r\n    );\r\n  }\r\n  return(\r\n    <p>Loading....</p>\r\n  );\r\n};\r\n\r\nexport default HandymanDashboard;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanIsVerified.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\NeedHelpTemplate.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Flutterwave.js",["147","148","149"],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\404.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ThankYouPage.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Pricing.js",["150","151","152","153"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PricingPlan from '../statelessComponent/PricingPlan';\r\n\r\nconst Pricing = () => {\r\n  const[user, setUser] = useState('');\r\n  const[plan, setPlan] = useState('');\r\n  const[loading, setLoading] = useState({\r\n    _gold: false,\r\n    _silver: false,\r\n    _platinum: false,\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const token = localStorage.getItem('jwt_token');\r\n\r\n  // const getData = async () => {\r\n  //   const url = 'http://localhost:5000/api/customers/dashboard';\r\n  //   const response = await fetch(url, {\r\n  //     method: 'GET',\r\n  //     headers: {\r\n  //       'auth-token': token,\r\n  //       'Content-Type': 'application/json',\r\n  //       'Accept': 'application/json'\r\n  //     }\r\n  //   });\r\n  //   const user = await response.json();\r\n  //   console.log(user);\r\n  //   setUser(user);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getData()\r\n  // }, []);\r\n    \r\n    // Each of Package function will redirect to the payment page once the response status is 200\r\n    const gold = async() => {\r\n      const data = {\r\n        planName: 'Gold'\r\n      }\r\n\r\n      try {\r\n        setLoading({\r\n          _gold: true,\r\n        });\r\n        console.log('Gold Package');\r\n        const url = 'http://localhost:5000/api/customers/choose-plan'\r\n\r\n        const response = await fetch(url, {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'auth-token': token,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        })\r\n\r\n        if (response.status === 200) {\r\n          const message = await response.json()\r\n          console.log(message);\r\n          setLoading({\r\n            _gold: false\r\n          });\r\n          history.push('/customer/pay');\r\n        } else {\r\n          const message = await response.json()\r\n          console.log(message);\r\n          setLoading({\r\n            _gold: false,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    const platinum = async() => {\r\n      const data = {\r\n        planName: 'Platinum'\r\n      }\r\n      try {\r\n        setLoading({\r\n          _platinum: true,\r\n        });\r\n        console.log('Platinum Package');\r\n        const url = 'http://localhost:5000/api/customers/choose-plan'\r\n\r\n        const response = await fetch(url, {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'auth-token': token,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        })\r\n\r\n        if (response.status === 200) {\r\n          const message = response.json()\r\n          console.log(message);\r\n          setLoading({\r\n            _platinum: false,\r\n          });\r\n          history.push('/customer/pay');\r\n        } else {\r\n          const message = await response.json();\r\n          console.log(message);\r\n          setLoading({\r\n            _platinum: false,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setLoading({\r\n          _platinum: false,\r\n        });\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    const silver = async() => {\r\n      const data = {\r\n        planName: 'Silver'\r\n      }\r\n      try {\r\n        setLoading({\r\n          _silver: true,\r\n        });\r\n        console.log('Silver Package');\r\n        const url = 'http://localhost:5000/api/customers/choose-plan'\r\n\r\n        const response = await fetch(url, {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'auth-token': token,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        })\r\n\r\n        if (response.status === 200) {\r\n          const message = await response.json()\r\n          console.log(message);\r\n          setLoading({\r\n            _silver: false,\r\n          });\r\n          history.push('/customer/pay');\r\n        } else {\r\n          const message = await response.json()\r\n          console.log(message);\r\n          setLoading({\r\n            _silver: false,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setLoading({\r\n          _silver: false,\r\n        });\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n  return (\r\n    <div>\r\n      <PricingPlan gold={gold}\r\n        silver={silver}\r\n        platinum={platinum}\r\n        loading={loading}\r\n        plan={plan}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pricing;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PricingPlan.js",["154","155"],"import React from 'react';\r\nimport NeedHelpTemplate from './NeedHelpTemplate';\r\nimport Flutterwave from '../statefulComponent/Flutterwave';\r\nimport Nav from './Nav';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PricingPlan = (props) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <NeedHelpTemplate />\r\n      </div>\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n      <div>\r\n        <h4>Choose A Plan that best suits You</h4>\r\n      </div>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-4\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Platinum</h5>\r\n                <p className=\"card-text\">Live A Frustration Free Live</p>\r\n                <button onClick={props.platinum}>{props.loading._platinum ? 'Loading...' : 'Platinum'}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-4\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Silver</h5>\r\n                <p className=\"card-text\">Live A Frustration Free Live</p>\r\n                <button onClick={props.silver}>{props.loading._silver ? 'Loading...' : 'Silver'}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-4\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Gold</h5>\r\n                <p className=\"card-text\">Live A Frustration Free Live</p>\r\n                <button onClick={props.gold}>{props.loading._gold ? 'Loading...' : 'Gold'}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PricingPlan;",{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":6,"column":9,"nodeType":"162","messageId":"163","endLine":6,"endColumn":18},{"ruleId":"160","severity":1,"message":"164","line":6,"column":20,"nodeType":"162","messageId":"163","endLine":6,"endColumn":32},{"ruleId":"160","severity":1,"message":"165","line":23,"column":9,"nodeType":"162","messageId":"163","endLine":23,"endColumn":15},{"ruleId":"160","severity":1,"message":"166","line":30,"column":9,"nodeType":"162","messageId":"163","endLine":30,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":67,"column":6,"nodeType":"169","endLine":67,"endColumn":8,"suggestions":"170"},{"ruleId":"160","severity":1,"message":"171","line":2,"column":10,"nodeType":"162","messageId":"163","endLine":2,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":48,"column":6,"nodeType":"169","endLine":48,"endColumn":8,"suggestions":"172"},{"ruleId":"160","severity":1,"message":"171","line":2,"column":10,"nodeType":"162","messageId":"163","endLine":2,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":55,"column":6,"nodeType":"169","endLine":55,"endColumn":8,"suggestions":"173"},{"ruleId":"160","severity":1,"message":"174","line":13,"column":9,"nodeType":"162","messageId":"163","endLine":13,"endColumn":16},{"ruleId":"160","severity":1,"message":"175","line":16,"column":7,"nodeType":"162","messageId":"163","endLine":16,"endColumn":14},{"ruleId":"167","severity":1,"message":"176","line":49,"column":6,"nodeType":"169","endLine":49,"endColumn":8,"suggestions":"177"},{"ruleId":"160","severity":1,"message":"178","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"160","severity":1,"message":"179","line":6,"column":9,"nodeType":"162","messageId":"163","endLine":6,"endColumn":13},{"ruleId":"160","severity":1,"message":"180","line":6,"column":15,"nodeType":"162","messageId":"163","endLine":6,"endColumn":22},{"ruleId":"160","severity":1,"message":"181","line":7,"column":15,"nodeType":"162","messageId":"163","endLine":7,"endColumn":22},{"ruleId":"160","severity":1,"message":"182","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":19},{"ruleId":"160","severity":1,"message":"183","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":14},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'jobPoster' is assigned a value but never used.","Identifier","unusedVar","'setJobPoster' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'signal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["186"],"'Redirect' is defined but never used.",["187"],["188"],"'loading' is assigned a value but never used.","'mounted' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["189"],"'useEffect' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setPlan' is assigned a value but never used.","'Flutterwave' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"190","fix":"192"},{"desc":"190","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [history]",{"range":"196","text":"197"},{"range":"198","text":"197"},{"range":"199","text":"197"},"Update the dependencies array to be: [getUser]",{"range":"200","text":"201"},[2140,2142],"[history]",[1294,1296],[1498,1500],[1350,1352],"[getUser]"]