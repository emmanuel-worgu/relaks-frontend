[{"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\index.js":"1","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\App.js":"3","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanLogin.js":"4","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerLogin.js":"5","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerForgotPassword.js":"6","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Home.js":"7","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ContactUs.js":"8","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerRegister.js":"9","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\404.js":"10","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyHandyman.js":"11","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanForgotPassword.js":"12","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanRegister.js":"13","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanDashboard.js":"14","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\BookJob.js":"15","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Pricing.js":"16","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyCustomer.js":"17","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ThankYouPage.js":"18","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerJob.js":"19","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerDashboard.js":"20","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Flutterwave.js":"21","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\JobList.js":"22","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Review.js":"23","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Nav.js":"24","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\NeedHelpTemplate.js":"25","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ForgotPasswordForm.js":"26","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Footer.js":"27","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\loginForm.js":"28","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Job.js":"29","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\verifyUserForm.js":"30","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\registerForm.js":"31","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanIsVerified.js":"32","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\CustomerJobComponent.js":"33","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PricingPlan.js":"34","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Dashboard.js":"35","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ReviewForm.js":"36","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanJob.js":"37","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\MiniFooter.js":"38","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Error.js":"39","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Settings.js":"40","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\settingsform.js":"41","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\RequestPayment.js":"42","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\RequestPaymentForm.js":"43","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\jobTable.js":"44","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanJob.js":"45","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandyManJobListComp.js":"46","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Loading.js":"47"},{"size":500,"mtime":499162500000,"results":"48","hashOfConfig":"49"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"49"},{"size":3531,"mtime":1617278872267,"results":"51","hashOfConfig":"49"},{"size":3195,"mtime":1612533204575,"results":"52","hashOfConfig":"49"},{"size":3014,"mtime":1612958983554,"results":"53","hashOfConfig":"49"},{"size":2206,"mtime":1612539099134,"results":"54","hashOfConfig":"49"},{"size":10085,"mtime":1617662711804,"results":"55","hashOfConfig":"49"},{"size":1319,"mtime":1615647916800,"results":"56","hashOfConfig":"49"},{"size":3936,"mtime":1614714672580,"results":"57","hashOfConfig":"49"},{"size":1113,"mtime":1617100864616,"results":"58","hashOfConfig":"49"},{"size":2650,"mtime":1612540490873,"results":"59","hashOfConfig":"49"},{"size":2262,"mtime":1612724809162,"results":"60","hashOfConfig":"49"},{"size":4251,"mtime":1612532477331,"results":"61","hashOfConfig":"49"},{"size":3274,"mtime":1617279509216,"results":"62","hashOfConfig":"49"},{"size":7392,"mtime":1617197876814,"results":"63","hashOfConfig":"49"},{"size":4543,"mtime":1617664937033,"results":"64","hashOfConfig":"49"},{"size":2685,"mtime":1612540515744,"results":"65","hashOfConfig":"49"},{"size":757,"mtime":1617197898060,"results":"66","hashOfConfig":"49"},{"size":3477,"mtime":1617198222296,"results":"67","hashOfConfig":"49"},{"size":2825,"mtime":1617662526327,"results":"68","hashOfConfig":"49"},{"size":4237,"mtime":1617668908596,"results":"69","hashOfConfig":"49"},{"size":3331,"mtime":1617056494122,"results":"70","hashOfConfig":"49"},{"size":1933,"mtime":1617198284768,"results":"71","hashOfConfig":"49"},{"size":6993,"mtime":1617670438377,"results":"72","hashOfConfig":"49"},{"size":680,"mtime":1617668188920,"results":"73","hashOfConfig":"49"},{"size":1366,"mtime":1612725202456,"results":"74","hashOfConfig":"49"},{"size":2477,"mtime":1617107718228,"results":"75","hashOfConfig":"49"},{"size":3446,"mtime":1617662031889,"results":"76","hashOfConfig":"49"},{"size":4925,"mtime":1616401945865,"results":"77","hashOfConfig":"49"},{"size":2369,"mtime":1612725736001,"results":"78","hashOfConfig":"49"},{"size":7286,"mtime":1617662311778,"results":"79","hashOfConfig":"49"},{"size":932,"mtime":1615648025355,"results":"80","hashOfConfig":"49"},{"size":1404,"mtime":1617375726502,"results":"81","hashOfConfig":"49"},{"size":8233,"mtime":1617664013090,"results":"82","hashOfConfig":"49"},{"size":9909,"mtime":1617374959261,"results":"83","hashOfConfig":"49"},{"size":1567,"mtime":1615648060021,"results":"84","hashOfConfig":"49"},{"size":3382,"mtime":1617378557382,"results":"85","hashOfConfig":"49"},{"size":205,"mtime":1611678622197,"results":"86","hashOfConfig":"49"},{"size":965,"mtime":1615461644279,"results":"87","hashOfConfig":"49"},{"size":4275,"mtime":1616595371555,"results":"88","hashOfConfig":"49"},{"size":3907,"mtime":1199151713447,"results":"89","hashOfConfig":"49"},{"size":2468,"mtime":1616837661497,"results":"90","hashOfConfig":"49"},{"size":2573,"mtime":1616836528719,"results":"91","hashOfConfig":"49"},{"size":687,"mtime":1617287050285,"results":"92","hashOfConfig":"49"},{"size":2366,"mtime":1617284393103,"results":"93","hashOfConfig":"49"},{"size":2382,"mtime":1617373659630,"results":"94","hashOfConfig":"49"},{"size":493,"mtime":1617663170454,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1cdldua",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"98"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\index.js",[],["203","204"],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\App.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanLogin.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerLogin.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerForgotPassword.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Home.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ContactUs.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerRegister.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\404.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyHandyman.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanForgotPassword.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanRegister.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanDashboard.js",["205","206"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Dashboard from '../statelessComponent/Dashboard';\r\nimport HandymanIsVerified from '../statelessComponent/HandymanIsVerified';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { HandymanDashboardNav } from '../statelessComponent/Nav';\r\n\r\nconst HandymanDashboard = () => {\r\n  // const[response, setResponse] = useState({\r\n  //   loading: false,\r\n  //   isAuth: false,\r\n  //   data: [],\r\n  //   success: false,\r\n  //   error: false,\r\n  // });\r\n  const[data, setData] = useState([]);\r\n  const[jobs, setJobs] = useState([]);\r\n  const[loading, setLoading] = useState(false);\r\n  let history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    // Get the user Info\r\n    const getUserInfo = async ()  => {\r\n    try {\r\n      setLoading(true);\r\n      const url = 'http://localhost:5000/api/handymen/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        setLoading(false);\r\n        setData(data);\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n         history.push('/handyman/login');\r\n      };\r\n      if(mounted.current && response.status === 201) {\r\n        return (\r\n          <HandymanIsVerified />\r\n        );\r\n      };\r\n      // console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  getUserInfo();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Get the User Jobs\r\n    const getJobs = async ()  => {\r\n    try {\r\n      setLoading(true);\r\n      const url = 'http://localhost:5000/api/handymen/get-all-jobs';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        setLoading(false);\r\n        setJobs(data);\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n         history.push('/handyman/login');\r\n      };\r\n      if(mounted.current && response.status === 201) {\r\n        return (\r\n          <HandymanIsVerified />\r\n        );\r\n      };\r\n\r\n      setJobs(data);\r\n      // console.log(jobs);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setJobs(error);\r\n    }\r\n  };\r\n  getJobs();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n\r\n  // data.length === 0 ? console.log('fetching...') : console.log(data.jobsChosen);\r\n  return (\r\n    <div>\r\n      <HandymanDashboardNav />\r\n      <Dashboard jobs={jobs.jobs}\r\n        data={data}\r\n        loading={loading}\r\n      />\r\n      <MiniFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandymanDashboard;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\BookJob.js",["207","208"],"import React, { useState, useEffect, useRef} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Job from '../statelessComponent/Job';\r\nimport { CustomerDashboardNav } from '../statelessComponent/Nav';\r\n\r\nconst BookJob = () => {\r\n  // const[jobPoster, setJobPoster] = useState('');\r\n  const[work, setWork] = useState('')\r\n  const[workInfo, setWorkInfo] = useState('');\r\n  const[dateToCome, setDateToCome] = useState('');\r\n  const[timeToCome, setTimeToCome] = useState('');\r\n  const[serviceCategory, setServiceCategory] = useState({\r\n    value: ''\r\n  });\r\n  const[homeAddress, setHomeAddress] = useState('');\r\n  const[busStop, setBusStop] = useState('');\r\n  const[city, setCity] = useState('');\r\n  const[state, setState] = useState('');\r\n  const[response, setResponse] = useState({\r\n    message: {},\r\n    loading: false,\r\n    error: ''\r\n  });\r\n  const[isAuth, setIsAuth] = useState(false);\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n  \r\n  // Variable to abort the fetch request\r\n  // Will work on it later\r\n  const abortController = new AbortController();\r\n  const signal = abortController.signal;\r\n\r\n  // This function will check if the user is authenticated\r\n  // it also fetch the user info from the server and return isAuth true\r\n  useEffect(() => {\r\n    const getData = async ()  => {\r\n    try {\r\n      const url = 'http://localhost:5000/api/customers/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        console.log(data);\r\n        setIsAuth(true);\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n        console.log(data);\r\n        console.log('Not Authenticated!!')\r\n        history.push('/customer/login');\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Cleans up the DOM\r\n  getData();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  });\r\n\r\n  const handleWork = (e) => {\r\n    setWork(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleWorkInfo = (e) => {\r\n    setWorkInfo(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDateToCome = (e) => {\r\n    setDateToCome(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleTimeToCome = (e) => {\r\n    setTimeToCome(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleServiceCategory = (e) => {\r\n    setServiceCategory({ value: e.target.value });\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleHomeAddress = (e) => {\r\n    setHomeAddress(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleBusStop = (e) => {\r\n    setBusStop(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleCity = (e) => {\r\n    setCity(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleState = (e) => {\r\n    setState(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    setResponse({\r\n      loading: true\r\n    });\r\n    if (work === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'What do you want to fix. This is required!!'\r\n      });\r\n    } else if (serviceCategory.value === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'Please Choose a category that fit your job!!'\r\n      });\r\n    } else if (dateToCome === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'Please tell us the date to come!!'\r\n      });\r\n    } else if (timeToCome === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'What time should we come!!'\r\n      });\r\n    } else if (workInfo === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'Please Provide us with a little info about your work!!'\r\n      });\r\n    } else if (homeAddress === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'What is your home address!!'\r\n      });\r\n    } else if (busStop === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'What is your nearest bus stop!!'\r\n      });\r\n    } else if (city === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'What is your city!!'\r\n      });\r\n    } else if (state === '') {\r\n      return setResponse({\r\n        loading: false,\r\n        error: 'Please provide us with your state!!'\r\n      });\r\n    };\r\n\r\n    const data = {\r\n      jobName: work,\r\n      jobCategory: serviceCategory.value,\r\n      date: new Date(dateToCome),\r\n      time: timeToCome,\r\n      jobDescription: workInfo,\r\n      houseAddress: homeAddress,\r\n      state,\r\n      city,\r\n      busStop,\r\n    }\r\n\r\n    console.log(data);\r\n\r\n    try {\r\n      const url = 'http://localhost:5000/api/customers/book-service';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          \"auth-token\": token,\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\",\r\n          \"Access-Control-Allow-Origin-\": \"no-cors\"\r\n        }\r\n    });\r\n    if (response.status === 200) {\r\n      const message = await response.json();\r\n      setResponse({\r\n        loading: false,\r\n        message,\r\n      });\r\n      // console.log(message);\r\n      history.push('/customer/book-service/confirm');\r\n    }\r\n    if (response.status === 201) {\r\n      const message = await response.json();\r\n      return setResponse({\r\n        loading: false,\r\n        error: message.errMessage || message,\r\n      });\r\n    }\r\n    if (response.status === 400) {\r\n      const message = await response.json();\r\n      return setResponse({\r\n        loading: false,\r\n        error: message.errMessage,\r\n      });\r\n    }\r\n    if (response.status === 401) {\r\n      const message = await response.json();\r\n      setResponse({\r\n        loading: false,\r\n        error: message.errMessage,\r\n      });\r\n      setTimeout(() => {\r\n        history.push('/customer/login');\r\n      },6000);\r\n    }\r\n    } catch (error) {\r\n      setResponse({\r\n        loading: false,\r\n        error: 'There was a problem!! Our Engineers have been Notified. Try Again!!'\r\n      })\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  });\r\n  return (\r\n    <div>\r\n      <CustomerDashboardNav />\r\n      <Job work={work}\r\n        handleWork={handleWork}\r\n        serviceCategory={serviceCategory.value}\r\n        handleServiceCategory={handleServiceCategory}\r\n        dateToCome={dateToCome}\r\n        handleDateToCome={handleDateToCome} \r\n        timeToCome={timeToCome}\r\n        handleTimeToCome={handleTimeToCome}\r\n        workInfo={workInfo}\r\n        handleWorkInfo={handleWorkInfo}\r\n        homeAddress={homeAddress}\r\n        handleHomeAddress={handleHomeAddress}\r\n        busStop={busStop}\r\n        handleBusStop={handleBusStop}\r\n        city={city}\r\n        handleCity={handleCity}\r\n        state={state}\r\n        handleState={handleState}\r\n        handleSubmit={handleSubmit}\r\n        response={response}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default BookJob;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Pricing.js",["209","210","211"],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyCustomer.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ThankYouPage.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerJob.js",["212","213","214"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomerJobComponent from '../statelessComponent/CustomerJobComponent';\r\nimport Footer from '../statelessComponent/Footer';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport Nav, { CustomerDashboardNav } from '../statelessComponent/Nav';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\n\r\nconst CustomerJob = () => {\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  // The success variable checks if the request was successful\r\n  const[jobs, setJobs] = useState([]);\r\n  const[error, setError] = useState({\r\n    error: false,\r\n    message: ''\r\n  });\r\n  const[success, setSuccess] = useState(false);\r\n  const[loading, setLoading] = useState(false);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n    const url = 'http://localhost:5000/api/customers/get-all-jobs';\r\n\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'auth-token': token,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      }\r\n    });\r\n\r\n    if (mounted.current && response.status === 200) {\r\n      const job = await response.json();\r\n      console.log(job);\r\n      setSuccess(true);\r\n      setLoading(false);\r\n      return setJobs(job);\r\n    } else if (mounted.current && response.status === 201) {\r\n      const job = await response.json();\r\n      setLoading(false)\r\n      setSuccess(false);\r\n      return setError({\r\n        error: true,\r\n        message: job.errMessage,\r\n      });\r\n    } else if (mounted.current && response.status === 401) {\r\n\r\n      history.push('/customer/login');\r\n    } else if (mounted.current && response.status === 400) {\r\n      const job = await response.json();\r\n      setLoading(false);\r\n      setSuccess(false);\r\n      return setError({\r\n        error: true,\r\n        message: job.errMessage,\r\n      });\r\n    }\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      // console.log(jobs);\r\n      setLoading(false);\r\n      setJobs(error)\r\n      setSuccess(false);\r\n      return setError({\r\n        error: true,\r\n        message: `Couldn't fetch the jobs. Please check your internet connection and try again!!`\r\n      });\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  // const mappedJob = jobs.map(job => {\r\n  //   console.log(job.jobDescription);\r\n  //   return(\r\n  //     <CustomerJobComponent key={job._id}\r\n  //     job={job}\r\n  //   />\r\n  //   );\r\n  // });\r\n\r\n  // const mappedJob = jobs.map(job =>  <CustomerJobComponent job={job} key={job._id} />);\r\n\r\n  const logic = () => {\r\n    if (loading) {\r\n      return (\r\n        <h4 className=\"how-its-works\">Fetching Your Jobs...</h4>\r\n      );\r\n    }\r\n\r\n    if (success) {\r\n      const mappedJob = jobs.map(job =>  <CustomerJobComponent job={job} key={job._id} />);\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          {mappedJob}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <h4 className=\"how-its-works\">{error.message}</h4>\r\n    );\r\n\r\n  };\r\n  // const mappedJob = jobs.map(job => <p className=\"card-tex\">{job.Description}</p>)\r\n  return (\r\n    <div>\r\n      <CustomerDashboardNav />\r\n      {logic()}\r\n      <MiniFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerJob;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerDashboard.js",["215","216"],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Flutterwave.js",["217","218","219"],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\JobList.js",["220"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport HandymanJob from '../statelessComponent/HandymanJob';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { HandymanDashboardNav } from '../statelessComponent/Nav';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\n\r\nconst JobList =  () => {\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  // The success variable checks if the request was successful\r\n  const[jobs, setJobs] = useState([]);\r\n  const[error, setError] = useState({\r\n    error: false,\r\n    message: ''\r\n  })\r\n  const[loading, setLoading] = useState(false);\r\n  const[success, setSuccess] = useState(false);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n      const url = 'http://localhost:5000/api/handymen/all-jobs';\r\n\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n        }\r\n      });\r\n\r\n      if (mounted.current && response.status === 200) {\r\n        const job = await response.json();\r\n        console.log(job.jobs);\r\n        setSuccess(true);\r\n        setLoading(false);\r\n        return setJobs(job.jobs);\r\n      } else if (mounted.current && response.status === 201) {\r\n        const job = await response.json();\r\n\r\n        setSuccess(false);\r\n        setLoading(false);\r\n        return setError({\r\n          error: true,\r\n          message: job.errMessage,\r\n        });\r\n      } else if (mounted.current && response.status === 401) {\r\n\r\n        history.push('/handyman/login');\r\n      } else if (mounted.current && response.status === 400) {\r\n        const job = await response.json();\r\n\r\n        setSuccess(false);\r\n        setLoading(false);\r\n        return setError({\r\n          error: true,\r\n          message: job.errMessage,\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      // console.log(jobs);\r\n      setJobs(error);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n      return setError({\r\n        error: true,\r\n        message: `Couldn't fetch the jobs. Please check your internet connection and try again!!`,\r\n      });\r\n    };\r\n  };\r\n\r\n  // Cleans the DOM\r\n  useEffect(() => {\r\n    getData();\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  // console.log(jobs[0].jobs[0].hasPaid);\r\n\r\n\r\n  const logic = () => {\r\n    if (loading) {\r\n      return (\r\n        <h4 className=\"how-its-works\">Loading Jobs...</h4>\r\n      );\r\n    }\r\n\r\n    if (success) {\r\n      // const arrayJob = jobs.jobs;\r\n      // console.log(arrayJob);\r\n      console.log(jobs);\r\n      const mappedJob = jobs.map(job => <HandymanJob job={job} key={job._id} />);\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          {mappedJob}\r\n          <MiniFooter style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <h4 className=\"how-its-works\">{error.message}</h4>\r\n    );\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <HandymanDashboardNav />\r\n      {logic()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobList;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Review.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Nav.js",["221","222"],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\NeedHelpTemplate.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ForgotPasswordForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Footer.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\loginForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Job.js",["223","224"],"import React from 'react';\r\nimport MiniFooter from './MiniFooter';\r\nimport NeedHelpTemplate from './NeedHelpTemplate';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport logo from '../assest/logo.svg';\r\nimport '../css/registerForm.css';\r\nimport { CustomerDashboardNav } from './Nav';\r\n// import loginImg from '../assest/login.svg';\r\n\r\n\r\nconst Job = (props) => {\r\n  return (\r\n    <div>\r\n      <NeedHelpTemplate />\r\n      {/* <div>\r\n        <img src={logo} alt=\"Relaks Logo\" className=\"relaks-logo\"></img>\r\n      </div> */}\r\n      <div className=\"container\">\r\n        <div className=\"relaks-register\">\r\n            <h3 id=\"register-header\">How Can We Help You</h3>\r\n            <h6 className=\"error-message\">{props.response.error}</h6>\r\n            <label id=\"name-text\">What do you want to fix</label>\r\n            <br/>\r\n            <input type=\"text\" \r\n              name=\"work\"\r\n              autoComplete=\"off\" \r\n              className=\"relaks-input\" \r\n              placeholder=\"e.g. Fix my light switch\"\r\n              value={props.work}\r\n              onChange={props.handleWork}\r\n              required>\r\n            </input>\r\n            <br/>\r\n            <label htmlFor=\"job-category\">What Categroy best fit your job</label>\r\n            <br/>\r\n            <select name=\"job-category\" \r\n              id=\"job-category\" \r\n              className=\"relaks-input\"\r\n              value={props.serviceCategory.value}\r\n              onChange={props.handleServiceCategory}>\r\n                <option value=\"\">Choose a category</option>\r\n                <option value=\"Electrical\">Electrical</option>\r\n                <option value=\"Electrical\">Plumbering</option>\r\n                <option value=\"Electrical\">Carpentering</option>\r\n                <option value=\"Electrical\">Painting</option>\r\n            </select>\r\n            <br/>\r\n            <label>When Should We Come</label>\r\n            <br/>\r\n            <input type=\"date\" \r\n              name=\"date\" \r\n              className=\"relaks-input\" \r\n              value={props.dateToCome}\r\n              onChange={props.handleDateToCome}\r\n              required>\r\n            </input>\r\n            <br/>\r\n            <label>At What Time</label>\r\n            <br/>\r\n            <input type=\"time\" \r\n              name=\"time\" \r\n              className=\"relaks-input\"\r\n              value={props.timeToCome}\r\n              onChange={props.handleTimeToCome}\r\n              required>\r\n            </input>\r\n            <br/>\r\n            <label htmlFor=\"job-description\">Please we need more info about your work</label>\r\n            <br/>\r\n            <textarea\r\n              id=\"job-description\"\r\n              autoComplete=\"off\"\r\n              name=\"job-description\"\r\n              rows=\"4\"\r\n              cols=\"35\"\r\n              className=\"relaks-textarea\"\r\n              placeholder=\"I need a Ladder\"\r\n              value={props.workInfo}\r\n              onChange={props.handleWorkInfo}\r\n              required>\r\n            </textarea>\r\n            <br/>\r\n            <hr></hr>\r\n            <h3 id=\"register-header\">Address</h3>\r\n            <p>Please Provide Us with correct address details.</p>\r\n            <label id=\"name-text\">Address</label>\r\n            <br/>\r\n            <input type=\"text\" \r\n              name=\"address\" \r\n              className=\"relaks-input\" \r\n              placeholder=\"e.g No. 9 malik street elelenwo\"\r\n              value={props.homeAddress}\r\n              onChange={props.handleHomeAddress}\r\n              required>\r\n            </input>\r\n            <br/>\r\n            <label>Nearest Bus Stop</label>\r\n            <br/>\r\n            <input type=\"text\" \r\n              name=\"bus-stop\" \r\n              className=\"relaks-input\" \r\n              placeholder=\"e.g Oil Mill Bus Stop\"\r\n              value={props.busStop}\r\n              onChange={props.handleBusStop}\r\n              required>\r\n            </input>\r\n            <br/>\r\n            <label>City</label>\r\n            <br/>\r\n            <input type=\"text\" \r\n              name=\"city\" \r\n              className=\"relaks-input\" \r\n              placeholder=\"e.g Port Harcourt\"\r\n              value={props.city}\r\n              onChange={props.handleCity}\r\n              required>\r\n            </input>\r\n            <br/>\r\n            <label>State</label>\r\n            <br/>\r\n            <input type=\"text\" \r\n              name=\"state\" \r\n              className=\"relaks-input\" \r\n              placeholder=\"e.g Rivers State\"\r\n              value={props.state}\r\n              onChange={props.handleState}\r\n              required>\r\n            </input>\r\n            <br/>\r\n            <button type=\"submit\"\r\n              onClick={props.handleSubmit}\r\n              className=\"submit-button\">\r\n              <b>{props.response.loading ? 'Loading...' : 'Book'}</b>\r\n            </button>\r\n          </div>\r\n      </div>\r\n      <MiniFooter/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Job;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\verifyUserForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\registerForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanIsVerified.js",["225"],"import React from 'react';\r\nimport Nav from './Nav';\r\nimport SuperImg from '../assest/superhero.svg';\r\nimport '../css/handymanIsVerify.css';\r\n\r\nconst HandymanIsVerified = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className=\"need-help\">\r\n          <p className=\"need-help-para\">Need Help? Call 09055681975</p>\r\n        </div>\r\n      </div>\r\n      {/* <Nav /> */}\r\n      <div>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12 col-md-8\">\r\n              <img src={SuperImg} alt=\"relaks-verify-handyman\" className=\"verify-image\"></img>\r\n            </div>\r\n            <div className=\"col-sm-12 col-md-4\">\r\n              <p>Oopps!! You have not been Verify. Don't worry just fill in the form below and wait for up to 30mins</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandymanIsVerified;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\CustomerJobComponent.js",["226","227"],"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NeedHelpTemplate from './NeedHelpTemplate';\r\nimport '../css/customerjobcomponent.css';\r\n\r\nconst CustomerJobComponent = (props) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const logic = props.success ? props.mappedJob : props.error;\r\n\r\n  const giveReviewButton = () => {\r\n    localStorage.setItem('id', props.job._id);\r\n    history.push('/customer/review')\r\n  };\r\n  return (\r\n    <div>\r\n      {/* <NeedHelpTemplate /> */}\r\n      <div style={{\r\n        marginBottom: '1.5em',\r\n        marginTop: '1.5em',\r\n        // marginLeft: '25px'\r\n      }} className=\"dashboard\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-12 col-xl-12\">\r\n            <div style={{\r\n              marginLeft: '25px'\r\n            }}className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Testing</h4>\r\n                {/* <p className=\" card-text error\">{props.err}</p> */}\r\n                <p className=\"card-text\">{props.job.jobDescription}</p>\r\n                <div className=\"review-button\">\r\n                  <button className=\"submit-button\" onClick={giveReviewButton}>Give Review</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerJobComponent;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PricingPlan.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Dashboard.js",["228"],"import React from 'react';\r\nimport NeedHelpTemplate from './NeedHelpTemplate';\r\nimport '../css/dashboard.css';\r\nimport { HandymanJobTable, CustomerJobTable } from './jobTable';\r\n\r\nconst textStyle = {\r\n  color: 'White'\r\n};\r\n\r\nconst Dashboard = (props) => {\r\n  // This is for the /customer Route\r\n  if (document.location.pathname === '/customer' || document.location.pathname === '/customer/') {\r\n    const { jobs, userInfo, loading, error } = props\r\n\r\n    console.log(userInfo);\r\n    console.log(jobs)\r\n    \r\n    const handleTotalJobs = () => {\r\n      if (userInfo.length === 0) {\r\n        return 'Calculating...'\r\n      }\r\n\r\n      if (error) {\r\n        return 'Failed to fetch... Please Reload the Page';\r\n      }\r\n\r\n      return userInfo.jobPosted.length;\r\n    };\r\n\r\n    const handleCompletedJob = () => {\r\n      if (userInfo.length === 0) {\r\n        return 'Calculating...'\r\n      }\r\n\r\n      if (error) {\r\n        return 'Failed to fetch... Please Reload the Page';\r\n      }\r\n\r\n      return userInfo.jobCompleted.length;\r\n    };\r\n\r\n    const handleAssignedJob = () => {\r\n      if (userInfo.length === 0) {\r\n        return 'Calculating...'\r\n      }\r\n\r\n      if (error) {\r\n        return 'Failed to fetch... Please Reload the Page';\r\n      }\r\n\r\n      return userInfo.isAssigned.length;\r\n    };\r\n\r\n    const handleCanceledJob = () => {\r\n      if (userInfo.length === 0) {\r\n        return 'Calculating...'\r\n      }\r\n\r\n      if (error) {\r\n        return 'Failed to fetch... Please Reload the Page';\r\n      }\r\n\r\n      return userInfo.jobsCanceled\r\n    };\r\n\r\n    // jobs === undefined ? console.log('Fetching...') : jobs.map(job => console.log(job));\r\n    const logic = () => {\r\n      if (jobs === undefined) {\r\n        return <p>Fetching....</p>\r\n      }\r\n\r\n      if (jobs.length === 0) {\r\n        return (\r\n          <tr>\r\n            <td>N/A</td>\r\n            <td>N/A</td>\r\n            <td>N/A</td>\r\n          </tr>\r\n        );\r\n      }\r\n      \r\n      const mappedJob = jobs.map(job => <CustomerJobTable\r\n        id={job._id}\r\n        key={job._id}\r\n        jobName={job.jobName}\r\n        isAssigned={job.isAssigned}\r\n\r\n      />);\r\n      return mappedJob;\r\n    }\r\n    return (\r\n      <div>\r\n        <NeedHelpTemplate />\r\n        <div className=\"dashboard\">\r\n          <h5 className=\"dashboard-manage\">Dashboard - Manage your account here!!</h5>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6 col-md-6 col-xl-3\" id=\"job-card\">\r\n              <div style={{backgroundColor: 'Blue'}} className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 style={textStyle} className=\"card-title\">Total Jobs</h5>\r\n                  <p style={textStyle} className=\"card-text\"><b>{handleTotalJobs()}</b></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-6 col-md-6 col-xl-3\" id=\"job-card\">\r\n              <div style={{backgroundColor: 'yellowgreen'}} className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 style={textStyle} className=\"card-title\">Completed Jobs</h5>\r\n                  <p style={textStyle} className=\"card-text\"><b>{handleCompletedJob()}</b></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-6 col-md-6 col-xl-3\" id=\"job-card\">\r\n              <div style={{backgroundColor: 'Red'}} className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 style={textStyle} className=\"card-title\">Cancelled Jobs</h5>\r\n                  <p style={textStyle} className=\"card-text\"><b>{handleCanceledJob()}</b></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-6 col-md-6 col-xl-3\" id=\"job-card\">\r\n              <div style={{backgroundColor: 'Green'}} className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 style={textStyle} className=\"card-title\">Assigned Jobs</h5>\r\n                  <p style={textStyle} className=\"card-text\"><b>{handleAssignedJob()}</b></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div style={{marginBottom: '10em'}}>\r\n            <h5 className=\"dashboard-manage\" id=\"joblist\">List Of Jobs</h5>\r\n            <div>\r\n              <table id=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Job Name</th>\r\n                    <th>Assigned</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {logic()}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    );\r\n  } else if (document.location.pathname === '/handyman' || '/handyman/') {\r\n    // This is the for the /handyman Route\r\n      const { jobs, data } = props\r\n      console.log(data);\r\n\r\n      const handleTotalJobs = () => {\r\n        if (data.length === 0) {\r\n          return 'Calculating...'\r\n        }\r\n\r\n        return data.jobsChosen.length + data.jobsCompleted.length;\r\n      };\r\n\r\n      const handleCompletedJob = () => {\r\n        if (data.length === 0) {\r\n          return 'Calculating...'\r\n        }\r\n\r\n        return data.jobsCompleted.length;\r\n      };\r\n\r\n      const handleAssignedJob = () => {\r\n        if (data.length === 0) {\r\n          return 'Calculating...'\r\n        }\r\n\r\n        return data.jobsChosen.length;\r\n      };\r\n\r\n      const handleAmount = () => {\r\n        if (data.length === 0) {\r\n          return 'Calculating...'\r\n        }\r\n\r\n        return data.amountEarned;\r\n      };\r\n\r\n      console.log(jobs);\r\n\r\n      // jobs === undefined ? console.log('Fetching...') : jobs.map(job => console.log(job));\r\n      const logic = () => {\r\n        if (jobs === undefined) {\r\n          return <p>Fetching....</p>\r\n        }\r\n\r\n        if (jobs.length === 0) {\r\n          return (\r\n            <tr>\r\n              <td>N/A</td>\r\n              <td>N/A</td>\r\n              <td>N/A</td>\r\n              <td>N/A</td>\r\n              <td>N/A</td>\r\n            </tr>\r\n          );\r\n        }\r\n        \r\n        const mappedJob = jobs.map(job => <HandymanJobTable\r\n          id={job._id}\r\n          key={job._id}\r\n          customerName={job.jobPoster.name}\r\n          customerPhone={job.jobPoster.phone}\r\n          jobCompleted={job.jobCompleted}\r\n\r\n        />);\r\n        return mappedJob;\r\n      }\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          <div className=\"dashboard\">\r\n            <h5 className=\"dashboard-manage\">Dashboard - Manage your account here!!</h5>\r\n            <div className=\"revenue-card\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div style={{backgroundColor: 'Violet'}} className=\"card\" id=\"card-border\">\r\n                    <div className=\"card-body\">\r\n                      <h5 style={textStyle} className=\"card-title\">Revenue</h5>\r\n                      <p style={textStyle} className=\"card-text\"><b>Income - ₦{handleAmount()}</b></p>\r\n                      <p style={textStyle} className=\"card-text\"><b>Available Income - ₦{handleAmount() - (handleAmount() * 0.05) === isNaN ? 'Calculating' : handleAmount() - (handleAmount() * 0.05)}</b></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-6 col-md-6 col-xl-3\" id=\"job-card\">\r\n                <div style={{backgroundColor: 'Blue'}} className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 style={textStyle} className=\"card-title\">Total Jobs</h5>\r\n                    <p style={textStyle} className=\"card-text\"><b>{handleTotalJobs()}</b></p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-6 col-md-6 col-xl-3\" id=\"job-card\">\r\n                <div style={{backgroundColor: 'yellowgreen'}} className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 style={textStyle} className=\"card-title\">Completed Jobs</h5>\r\n                    <p style={textStyle} className=\"card-text\"><b>{handleCompletedJob()}</b></p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-6 col-md-6 col-xl-3\" id=\"job-card\">\r\n                <div style={{backgroundColor: 'Red'}} className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 style={textStyle} className=\"card-title\">Cancelled Jobs</h5>\r\n                    <p style={textStyle} className=\"card-text\"><b>7</b></p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-6 col-md-6 col-xl-3\" id=\"job-card\">\r\n                <div style={{backgroundColor: 'Green'}} className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 style={textStyle} className=\"card-title\">Assigned Jobs</h5>\r\n                    <p style={textStyle} className=\"card-text\"><b>{handleAssignedJob()}</b></p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h5 className=\"dashboard-manage\" id=\"joblist\">List Of Jobs</h5>\r\n            <div id=\"table\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Job ID</th>\r\n                    <th>Customer Name</th>\r\n                    <th>Customer Phone Number</th>\r\n                    <th>Job Name</th>\r\n                    <th>Approval</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {logic()}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\nexport default Dashboard;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ReviewForm.js",["229"],"import React from 'react';\r\nimport Footer from './Footer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport logo from '../assest/logo.svg';\r\nimport '../css/registerForm.css';\r\nimport NeedHelpTemplate from './NeedHelpTemplate';\r\nimport Nav from './Nav';\r\n// import loginImg from '../assest/login.svg';\r\n\r\n\r\nconst ReviewForm = (props) => {\r\n  return (\r\n    <div>\r\n      <NeedHelpTemplate />\r\n      {/* <Nav /> */}\r\n      <div>\r\n        <img src={logo} alt=\"Relaks Logo\" className=\"relaks-logo\"></img>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"relaks-register\">\r\n            <h3 id=\"register-header\">Give Feedback on Your Job</h3>\r\n            <h6 className=\"error-message\">{props.responseMessage}</h6>\r\n            <label htmlFor=\"job-description\">How was your service</label>\r\n            <br/>\r\n            <textarea\r\n              id=\"job-description\"\r\n              autoComplete=\"off\"\r\n              name=\"phone\"\r\n              rows=\"4\"\r\n              cols=\"35\"\r\n              className=\"relaks-textarea\"\r\n              placeholder=\"I need a Ladder\"\r\n              value={props.reviewMessage}\r\n              onChange={props.handleReviewMessage}\r\n              required>\r\n            </textarea>\r\n            <br/>\r\n            <button type=\"submit\"\r\n              onClick={props.handleButton}\r\n              className=\"submit-button\">\r\n              <b>{props.loading ? 'Submitting...' : 'Submit'}</b>\r\n            </button>\r\n          </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewForm;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanJob.js",["230"],"import React, { useState } from 'react';\r\n\r\nconst HandymanJob = (props) => {\r\n\r\n  const[data, setData] = useState({\r\n    message: '',\r\n    loading: false,\r\n    success: false,\r\n  });\r\n\r\n\r\n  const acceptJob = async () => {\r\n    setData({\r\n      loading: true\r\n    });\r\n    const body = {\r\n      id: props.job._id,\r\n    }\r\n\r\n    // console.log(data);\r\n    const url = 'http://localhost:5000/api/handymen/find-job';\r\n    const token = localStorage.getItem('jwt_token');\r\n\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        'auth-token': token,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      }\r\n    });\r\n\r\n    if (response.status !== 200) {\r\n      const  message = await response.json();\r\n\r\n      setData({\r\n        message,\r\n        loading: false,\r\n        success: false,\r\n      });\r\n\r\n      console.log(message);\r\n    } else {\r\n      const message = await response.json();\r\n      setData({\r\n        message,\r\n        loading: false,\r\n        success: true,\r\n      });\r\n      console.log(message);\r\n    };\r\n  };\r\n\r\n  console.log(props.job)\r\n\r\n  const logic = () => {\r\n\r\n    if (data.loading) {\r\n      return (\r\n        <b>Accepting...</b>\r\n      );\r\n    }\r\n\r\n    if (data.success) {\r\n      return (\r\n        <b>Accepted</b>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <b>Accept</b>\r\n    );\r\n  };\r\n\r\n  const textLogic = () => {\r\n    if (data.success === false) {\r\n      return data.message.errMessage;\r\n    }\r\n\r\n    return '';\r\n\r\n    setTimeout(() => {\r\n      setData({\r\n        message: ''\r\n      });\r\n    }, 3000)\r\n  };\r\n\r\n  const displayLogic = data.success ? 'none' : null;\r\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\n\r\n  return (\r\n    <div style={{\r\n      marginBottom: '1.5em',\r\n      marginTop: '1.5em',\r\n      display: displayLogic,\r\n    }} className=\"dashboard\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 col-md-12 col-xl-12\">\r\n          <div style={{\r\n            marginLeft: '25px'\r\n          }}className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">{props.job.jobName}</h4>\r\n              {/* <p className=\" card-text error\">{props.err}</p> */}\r\n              <p>Extra Note: {props.job.jobDescription}</p>\r\n              <p>Category: {props.job.jobCategory}</p>\r\n              <p>Home Address: {props.job.houseAddress}</p>\r\n              <p>Nearest Bus Stop: {props.job.nearestBusStop}</p>\r\n              <p>City: {props.job.city}</p>\r\n              <p>State: {props.job.state}</p>\r\n              <p>Date: {new Date(props.job.dateScheduled).toLocaleDateString('en-US', options)}</p>\r\n              <p>Time: {props.job.timeScheduled}</p>\r\n              <hr/>\r\n              <h6><b>Once Accepted, You can not accept any other job until this is completed.</b></h6>\r\n              <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center'\r\n              }}>\r\n                <button className=\"submit-button\" onClick={acceptJob}>{logic()}</button>\r\n              </div>\r\n              <div>\r\n                <h6 className=\"error\" style={{color: 'red'}}>{textLogic()}</h6>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandymanJob;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\MiniFooter.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Error.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Settings.js",["231","232"],"import React, { useState } from 'react';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { CustomerDashboardNav, HandymanDashboardNav } from '../statelessComponent/Nav';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\nimport SettingsForm from '../statelessComponent/settingsform';\r\n\r\nconst Settings = ()  => {\r\n  const[name, setName] = useState('');\r\n  const[email, setEmail] = useState('');\r\n  const[phone, setPhone] = useState('');\r\n  const[oldPassword, setOldPassword] = useState('');\r\n  const[newPassword, setNewPassword] = useState('');\r\n  const[loading, setLoading] = useState(false);\r\n  const[personalInfoRes, setPersonalInfoRes] = useState('');\r\n  const[resetPasswordRes, setResetPasswordRes] = useState('');\r\n\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handlePhone = (e) => {\r\n    setPhone(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleOldPassword = (e) => {\r\n    setOldPassword(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleNewPassword =  (e) => {\r\n    setNewPassword(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handlePersonalInformation = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n      const url = document.location.pathname === '/customer/setting' ? 'http://localhost:5000/api/customers/update-user' : 'http://localhost:5000/api/handymen/update-user'\r\n      const data = {\r\n        name: name,\r\n        email: email,\r\n        phone: phone\r\n      }\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      if (response.status === 200) {\r\n        const message = await response.json();\r\n        setLoading(false);\r\n        setPersonalInfoRes(message.successMessage);\r\n        console.log(message);\r\n      } else {\r\n        const message = await response.json()\r\n        setLoading(false);\r\n        setPersonalInfoRes(message.errMessage);\r\n        console.log(message);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setPersonalInfoRes(error.TypeError);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n      const url = document.location.pathname === '/customer/reset-password' ? 'http://localhost:5000/api/customers/reset-password' : 'http://localhost:5000/api/handymen/reset-password'\r\n      const data = {\r\n        oldPassword,\r\n        newPassword,\r\n      };\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'auth-token' : token,\r\n          'Accept' : 'application/json',\r\n          'Content-Type' : 'application/json',\r\n        }\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const message = response.json();\r\n        setLoading(false);\r\n        setResetPasswordRes(message.successMessage);\r\n      } else {\r\n        const message = response.json();\r\n        setLoading(false);\r\n        setResetPasswordRes(message.errMessage);\r\n      };\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setResetPasswordRes(error.TypeError);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {document.location.pathname === '/customer/setting' ? <CustomerDashboardNav /> : <HandymanDashboardNav />}\r\n      <SettingsForm oldPassword={oldPassword}\r\n        newPassword={newPassword}\r\n        name={name}\r\n        email={email}\r\n        phone={phone}\r\n        loading={loading}\r\n        personalInfoRes={personalInfoRes}\r\n        handleName={handleName}\r\n        handleEmail={handleEmail}\r\n        handlePhone={handlePhone}\r\n        handleOldPassword={handleOldPassword}\r\n        handleNewPassword={handleNewPassword}\r\n        handlePersonalInformation={handlePersonalInformation}\r\n        handleResetPassword={handleResetPassword}\r\n       />\r\n      <MiniFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\settingsform.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\RequestPayment.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\RequestPaymentForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\jobTable.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanJob.js",["233"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport HandymanJobComp from '../statelessComponent/HandyManJobListComp';\r\nimport { HandymanDashboardNav } from '../statelessComponent/Nav';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\n\r\nconst HandymanJob = () => {\r\n  const[jobs, setJobs] = useState([]);\r\n  const[loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    // Get the User Jobs\r\n    const getJobs = async ()  => {\r\n    try {\r\n      setLoading(true);\r\n      const url = 'http://localhost:5000/api/handymen/get-all-jobs';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        setLoading(false);\r\n        setJobs(data);\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n         history.push('/handyman/login');\r\n      };\r\n      if(mounted.current && response.status === 201) {\r\n        setLoading(false);\r\n        setJobs(data);\r\n      };\r\n\r\n      setJobs(data);\r\n      // console.log(jobs);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setJobs(error);\r\n    }\r\n  };\r\n  getJobs();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n\r\n  const logic = () => {\r\n    if (loading) {\r\n      <div>\r\n        <NeedHelpTemplate />\r\n        <h4>Loading...</h4>\r\n      </div>\r\n    }\r\n\r\n    if (typeof jobs === String) {\r\n      <div>\r\n        <NeedHelpTemplate />\r\n        <h4>{jobs.errMessage}</h4>\r\n      </div>\r\n    }\r\n\r\n    if (jobs.jobs === undefined) {\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          <h4>Loading...</h4>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const mappedJob = jobs.jobs.map((job) => <HandymanJobComp key={job._id} id={job._id}/>);\r\n    return (\r\n      <div>\r\n        <NeedHelpTemplate />\r\n        {mappedJob}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <HandymanDashboardNav />\r\n      {logic()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandymanJob;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandyManJobListComp.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Loading.js",[],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":60,"column":6,"nodeType":"240","endLine":60,"endColumn":8,"suggestions":"241"},{"ruleId":"238","severity":1,"message":"239","line":102,"column":6,"nodeType":"240","endLine":102,"endColumn":8,"suggestions":"242"},{"ruleId":"243","severity":1,"message":"244","line":24,"column":9,"nodeType":"245","messageId":"246","endLine":24,"endColumn":15},{"ruleId":"243","severity":1,"message":"247","line":31,"column":9,"nodeType":"245","messageId":"246","endLine":31,"endColumn":15},{"ruleId":"243","severity":1,"message":"248","line":6,"column":9,"nodeType":"245","messageId":"246","endLine":6,"endColumn":13},{"ruleId":"243","severity":1,"message":"249","line":6,"column":15,"nodeType":"245","messageId":"246","endLine":6,"endColumn":22},{"ruleId":"243","severity":1,"message":"250","line":7,"column":15,"nodeType":"245","messageId":"246","endLine":7,"endColumn":22},{"ruleId":"243","severity":1,"message":"251","line":4,"column":8,"nodeType":"245","messageId":"246","endLine":4,"endColumn":14},{"ruleId":"243","severity":1,"message":"252","line":6,"column":8,"nodeType":"245","messageId":"246","endLine":6,"endColumn":11},{"ruleId":"238","severity":1,"message":"253","line":82,"column":6,"nodeType":"240","endLine":82,"endColumn":8,"suggestions":"254"},{"ruleId":"238","severity":1,"message":"239","line":48,"column":6,"nodeType":"240","endLine":48,"endColumn":8,"suggestions":"255"},{"ruleId":"238","severity":1,"message":"239","line":83,"column":6,"nodeType":"240","endLine":83,"endColumn":8,"suggestions":"256"},{"ruleId":"243","severity":1,"message":"257","line":13,"column":9,"nodeType":"245","messageId":"246","endLine":13,"endColumn":16},{"ruleId":"243","severity":1,"message":"258","line":16,"column":7,"nodeType":"245","messageId":"246","endLine":16,"endColumn":14},{"ruleId":"238","severity":1,"message":"259","line":49,"column":6,"nodeType":"240","endLine":49,"endColumn":8,"suggestions":"260"},{"ruleId":"238","severity":1,"message":"253","line":84,"column":6,"nodeType":"240","endLine":84,"endColumn":8,"suggestions":"261"},{"ruleId":"238","severity":1,"message":"253","line":127,"column":6,"nodeType":"240","endLine":127,"endColumn":8,"suggestions":"262"},{"ruleId":"243","severity":1,"message":"263","line":196,"column":15,"nodeType":"245","messageId":"246","endLine":196,"endColumn":19},{"ruleId":"243","severity":1,"message":"264","line":5,"column":8,"nodeType":"245","messageId":"246","endLine":5,"endColumn":12},{"ruleId":"243","severity":1,"message":"265","line":7,"column":10,"nodeType":"245","messageId":"246","endLine":7,"endColumn":30},{"ruleId":"243","severity":1,"message":"252","line":2,"column":8,"nodeType":"245","messageId":"246","endLine":2,"endColumn":11},{"ruleId":"243","severity":1,"message":"266","line":3,"column":8,"nodeType":"245","messageId":"246","endLine":3,"endColumn":24},{"ruleId":"243","severity":1,"message":"267","line":10,"column":9,"nodeType":"245","messageId":"246","endLine":10,"endColumn":14},{"ruleId":"243","severity":1,"message":"257","line":13,"column":29,"nodeType":"245","messageId":"246","endLine":13,"endColumn":36},{"ruleId":"243","severity":1,"message":"252","line":7,"column":8,"nodeType":"245","messageId":"246","endLine":7,"endColumn":11},{"ruleId":"268","severity":1,"message":"269","line":83,"column":5,"nodeType":"270","messageId":"271","endLine":87,"endColumn":13},{"ruleId":"243","severity":1,"message":"266","line":4,"column":8,"nodeType":"245","messageId":"246","endLine":4,"endColumn":24},{"ruleId":"243","severity":1,"message":"272","line":15,"column":9,"nodeType":"245","messageId":"246","endLine":15,"endColumn":25},{"ruleId":"238","severity":1,"message":"239","line":53,"column":6,"nodeType":"240","endLine":53,"endColumn":8,"suggestions":"273"},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["276"],["277"],"no-unused-vars","'isAuth' is assigned a value but never used.","Identifier","unusedVar","'signal' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setPlan' is assigned a value but never used.","'Footer' is defined but never used.","'Nav' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["278"],["279"],["280"],"'loading' is assigned a value but never used.","'mounted' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["281"],["282"],["283"],"'data' is assigned a value but never used.","'logo' is defined but never used.","'CustomerDashboardNav' is defined but never used.","'NeedHelpTemplate' is defined but never used.","'logic' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'resetPasswordRes' is assigned a value but never used.",["284"],"no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},{"desc":"285","fix":"287"},{"desc":"288","fix":"289"},{"desc":"285","fix":"290"},{"desc":"285","fix":"291"},{"desc":"292","fix":"293"},{"desc":"288","fix":"294"},{"desc":"288","fix":"295"},{"desc":"285","fix":"296"},"Update the dependencies array to be: [history]",{"range":"297","text":"298"},{"range":"299","text":"298"},"Update the dependencies array to be: [getData]",{"range":"300","text":"301"},{"range":"302","text":"298"},{"range":"303","text":"298"},"Update the dependencies array to be: [getUser]",{"range":"304","text":"305"},{"range":"306","text":"301"},{"range":"307","text":"301"},{"range":"308","text":"298"},[1850,1852],"[history]",[2954,2956],[2476,2478],"[getData]",[1553,1555],[2496,2498],[1348,1350],"[getUser]",[2498,2500],[3244,3246],[1594,1596]]