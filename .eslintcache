<<<<<<< HEAD
[{"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\index.js":"1","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\App.js":"3","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanLogin.js":"4","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerLogin.js":"5","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerForgotPassword.js":"6","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Home.js":"7","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ContactUs.js":"8","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerRegister.js":"9","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\404.js":"10","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyHandyman.js":"11","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanForgotPassword.js":"12","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanRegister.js":"13","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanDashboard.js":"14","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\BookJob.js":"15","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Pricing.js":"16","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyCustomer.js":"17","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ThankYouPage.js":"18","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerJob.js":"19","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerDashboard.js":"20","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Flutterwave.js":"21","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\JobList.js":"22","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Review.js":"23","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Nav.js":"24","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\NeedHelpTemplate.js":"25","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ForgotPasswordForm.js":"26","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Footer.js":"27","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\loginForm.js":"28","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Job.js":"29","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\verifyUserForm.js":"30","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\registerForm.js":"31","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanIsVerified.js":"32","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\CustomerJobComponent.js":"33","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PricingPlan.js":"34","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Dashboard.js":"35","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ReviewForm.js":"36","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanJob.js":"37","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\MiniFooter.js":"38","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Error.js":"39","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Settings.js":"40","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\settingsform.js":"41","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\RequestPayment.js":"42","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\RequestPaymentForm.js":"43","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\jobTable.js":"44","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanJob.js":"45","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandyManJobListComp.js":"46","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Loading.js":"47","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PrivacyPolicy.js":"48","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\About.js":"49","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Terms.js":"50","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\relaks__cta.js":"51","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ICA.js":"52","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanFlutter.js":"53"},{"size":658,"mtime":1620857553635,"results":"54","hashOfConfig":"55"},{"size":362,"mtime":499162500000,"results":"56","hashOfConfig":"55"},{"size":4838,"mtime":1623848072857,"results":"57","hashOfConfig":"55"},{"size":3592,"mtime":1199147967870,"results":"58","hashOfConfig":"55"},{"size":3553,"mtime":1199147979305,"results":"59","hashOfConfig":"55"},{"size":2852,"mtime":1199147842120,"results":"60","hashOfConfig":"55"},{"size":13499,"mtime":1623398103661,"results":"61","hashOfConfig":"55"},{"size":2024,"mtime":1199145677661,"results":"62","hashOfConfig":"55"},{"size":5530,"mtime":1624015454099,"results":"63","hashOfConfig":"55"},{"size":1281,"mtime":1199143779025,"results":"64","hashOfConfig":"55"},{"size":2857,"mtime":1623417526818,"results":"65","hashOfConfig":"55"},{"size":2850,"mtime":1199147823160,"results":"66","hashOfConfig":"55"},{"size":5676,"mtime":1624015657603,"results":"67","hashOfConfig":"55"},{"size":3814,"mtime":1199147645838,"results":"68","hashOfConfig":"55"},{"size":7282,"mtime":1199144090891,"results":"69","hashOfConfig":"55"},{"size":6233,"mtime":1623423294560,"results":"70","hashOfConfig":"55"},{"size":2864,"mtime":1623417365939,"results":"71","hashOfConfig":"55"},{"size":1819,"mtime":1199144107561,"results":"72","hashOfConfig":"55"},{"size":3524,"mtime":1199147304793,"results":"73","hashOfConfig":"55"},{"size":3276,"mtime":1199146540226,"results":"74","hashOfConfig":"55"},{"size":4529,"mtime":1625742019208,"results":"75","hashOfConfig":"55"},{"size":3879,"mtime":1623416766692,"results":"76","hashOfConfig":"55"},{"size":2251,"mtime":1623416915068,"results":"77","hashOfConfig":"55"},{"size":8390,"mtime":1621378248082,"results":"78","hashOfConfig":"55"},{"size":680,"mtime":1620893024444,"results":"79","hashOfConfig":"55"},{"size":1366,"mtime":1612725202456,"results":"80","hashOfConfig":"55"},{"size":3356,"mtime":1621017869122,"results":"81","hashOfConfig":"55"},{"size":3287,"mtime":1620406074458,"results":"82","hashOfConfig":"55"},{"size":5047,"mtime":1620406074383,"results":"83","hashOfConfig":"55"},{"size":2408,"mtime":1618997345724,"results":"84","hashOfConfig":"55"},{"size":7966,"mtime":1620406074489,"results":"85","hashOfConfig":"55"},{"size":1552,"mtime":1199144151760,"results":"86","hashOfConfig":"55"},{"size":5402,"mtime":1619953263699,"results":"87","hashOfConfig":"55"},{"size":10369,"mtime":1625742605922,"results":"88","hashOfConfig":"55"},{"size":14516,"mtime":1624017365476,"results":"89","hashOfConfig":"55"},{"size":1493,"mtime":1618779415582,"results":"90","hashOfConfig":"55"},{"size":3728,"mtime":1619783931197,"results":"91","hashOfConfig":"55"},{"size":213,"mtime":1618578183375,"results":"92","hashOfConfig":"55"},{"size":965,"mtime":1615461644279,"results":"93","hashOfConfig":"55"},{"size":4426,"mtime":1623417167709,"results":"94","hashOfConfig":"55"},{"size":3245,"mtime":1620406074511,"results":"95","hashOfConfig":"55"},{"size":3708,"mtime":1623416851284,"results":"96","hashOfConfig":"55"},{"size":2862,"mtime":1620221454197,"results":"97","hashOfConfig":"55"},{"size":702,"mtime":1618224465917,"results":"98","hashOfConfig":"55"},{"size":4036,"mtime":1199147868175,"results":"99","hashOfConfig":"55"},{"size":4030,"mtime":1619783984176,"results":"100","hashOfConfig":"55"},{"size":493,"mtime":1620406074400,"results":"101","hashOfConfig":"55"},{"size":22613,"mtime":1199143610357,"results":"102","hashOfConfig":"55"},{"size":7238,"mtime":1199145207805,"results":"103","hashOfConfig":"55"},{"size":19343,"mtime":1199144128040,"results":"104","hashOfConfig":"55"},{"size":1118,"mtime":1618782333896,"results":"105","hashOfConfig":"55"},{"size":22588,"mtime":1199143701774,"results":"106","hashOfConfig":"55"},{"size":3819,"mtime":1199147714224,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1cdldua",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\index.js",[],["224","225"],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\App.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanLogin.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerLogin.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerForgotPassword.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Home.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ContactUs.js",["226","227"],"import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport Footer from './Footer';\r\nimport { NormalNav } from './Nav';\r\nimport NeedHelpTemplate from './NeedHelpTemplate';\r\nimport '../css/contactus.css';\r\n\r\nimport {\r\n  faHeadset,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport RelaksCta from './relaks__cta';\r\n\r\nconst ContactUs = () => {\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Contact Relaks</title>\r\n        <meta name=\"title\" content=\"Contact Relaks |\" />\r\n        <meta name=\"description\" content=\"We Would love to answer any questions you have. Let's get started\" />\r\n      </Helmet>\r\n      <NeedHelpTemplate />\r\n      <NormalNav />\r\n      <div className=\"contact-us-header\">\r\n        <h1><b>CONTACT RELAKS</b></h1>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <div>\r\n            <p className=\"contact-us-text\">Relaks is a home subcription service that pays for your home repair and care needs.</p>\r\n            <p className=\"contact-us-text\">We would love to answer any question you have. Feel Free to contact us!!</p>\r\n            {/* <p className=\"contact-us-text\">Before You lay complain please read our faq, the answer to your question might just be there</p> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n            <p className=\"contact-us-text\">Email: <a href=\"email:support@tryrelaks.com\">support@tryrelaks.com</a></p>\r\n            <p className=\"contact-us-text\">Tel: <a href=\"tel:+2349055681975\">+2349055681975</a></p>\r\n          </div>\r\n      </div>\r\n      {/* <div className=\"faq\">\r\n        <h2 id=\"faq-header\">Frequently Asked Question</h2>\r\n        <div>\r\n          <p>This is our FAQ Section</p>\r\n        </div>\r\n      </div> */}\r\n      <RelaksCta />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerRegister.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\404.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyHandyman.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanForgotPassword.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanRegister.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanDashboard.js",["228","229"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Helmet from 'react-helmet';\r\nimport Dashboard from '../statelessComponent/Dashboard';\r\nimport HandymanIsVerified from '../statelessComponent/HandymanIsVerified';\r\nimport Loading from '../statelessComponent/Loading';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { HandymanDashboardNav } from '../statelessComponent/Nav';\r\n\r\nconst HandymanDashboard = () => {\r\n  // const[response, setResponse] = useState({\r\n  //   loading: false,\r\n  //   isAuth: false,\r\n  //   data: [],\r\n  //   success: false,\r\n  //   error: false,\r\n  // });\r\n  const[data, setData] = useState([]);\r\n  const[jobs, setJobs] = useState([]);\r\n  const[loading, setLoading] = useState(false);\r\n  let history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    // Get the user Info\r\n    const getUserInfo = async ()  => {\r\n    try {\r\n      setLoading(true);\r\n      const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        setLoading(false);\r\n        setData(data);\r\n        localStorage.setItem('earned_amount', data.amountEarned);\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n         history.push('/handyman/login');\r\n      };\r\n      if(mounted.current && response.status === 201) {\r\n        return (\r\n          <HandymanIsVerified />\r\n        );\r\n      };\r\n    } catch (error) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  getUserInfo();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Get the User Jobs\r\n    const getJobs = async ()  => {\r\n    try {\r\n      setLoading(true);\r\n      const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/get-all-jobs';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        setLoading(false);\r\n        setJobs(data);\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n         history.push('/handyman/login');\r\n      };\r\n      if(mounted.current && response.status === 201) {\r\n        return (\r\n          <HandymanIsVerified />\r\n        );\r\n      };\r\n\r\n      setJobs(data);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setJobs(error);\r\n    }\r\n  };\r\n  getJobs();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />\r\n  }\r\n\r\n  if (data.isVerified === false) {\r\n    return (\r\n      <HandymanIsVerified />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Relaks Dashboard | View your account, Accept Job, Request Payment!!</title>\r\n        <meta name=\"title\" content=\"Relaks Dashboard | View your account, Accept Job, Request Payment!!\" />\r\n        <meta name = \"description\" content = \"View Your Dashboard\" />\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n      </Helmet>\r\n      <HandymanDashboardNav />\r\n      <Dashboard jobs={jobs.jobs}\r\n        data={data}\r\n        loading={loading}\r\n      />\r\n      <MiniFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandymanDashboard;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\BookJob.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Pricing.js",["230"],"import React, { useEffect, useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PricingPlan from '../statelessComponent/PricingPlan';\r\nimport Loading from '../statelessComponent/Loading';\r\n\r\nconst Pricing = () => {\r\n  const[pageLoad, setPageLoad] = useState(false);\r\n  const[isAuth, setIsAuth] = useState(false);\r\n  const[loading, setLoading] = useState({\r\n    _prime: false,\r\n    _xtra: false,\r\n    _basic: false,\r\n  });\r\n  const[mon, setMon] = useState(true);\r\n  const[err, setErr] = useState({\r\n    isTrue: false,\r\n    data: '',\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const token = localStorage.getItem('jwt_token');\r\n\r\n  const handleMon = () => {\r\n    setMon(!mon);\r\n  }\r\n\r\n  const closeButton = () => {\r\n    setErr({\r\n      isTrue: false,\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n    setPageLoad(true);\r\n    const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/dashboard';\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'auth-token': token,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      }\r\n    });\r\n\r\n    if (response.status === 200 || response.status === 201) {\r\n      if (response.status === 200) {\r\n        setIsAuth(true);\r\n        setPageLoad(false);\r\n\r\n      } else if (response.status === 201) {\r\n        setIsAuth(true);\r\n        setPageLoad(false)\r\n\r\n      }\r\n      setIsAuth(true);\r\n      setPageLoad(false);\r\n    } else {\r\n      console.log('error');\r\n      setIsAuth(false);\r\n      setPageLoad(false);\r\n    }\r\n    } catch (error) {\r\n      setPageLoad(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, []);\r\n    \r\n    // Each of Package function will redirect to the payment page once the response status is 200 or 201\r\n    const prime = async() => {\r\n      const data = {\r\n        planName: 'Prime',\r\n        mon,\r\n      }\r\n\r\n      // console.log(data);\r\n\r\n      try {\r\n        setLoading({\r\n          _prime: true,\r\n        });\r\n        const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/choose-plan';\r\n\r\n        const response = await fetch(url, {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'auth-token': token,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        })\r\n\r\n        if (response.status === 200) {\r\n          setLoading({\r\n            _prime: false\r\n          });\r\n          history.push('/customer/pay');\r\n        } else {\r\n          const message = await response.json()\r\n          // console.log(message.errMessage);\r\n          setErr({\r\n            isTrue: true,\r\n            data: message.errMessage,\r\n          })\r\n          setLoading({\r\n            _prime: false,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setLoading({\r\n          _prime: false,\r\n        });\r\n      }\r\n    };\r\n\r\n\r\n  // Basic Package\r\n    const basic = async() => {\r\n      const data = {\r\n        planName: 'Basic',\r\n        mon,\r\n      }\r\n      try {\r\n        setLoading({\r\n          _basic: true,\r\n        });\r\n        const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/choose-plan';\r\n\r\n        const response = await fetch(url, {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'auth-token': token,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        })\r\n\r\n        if (response.status === 200) {\r\n          setLoading({\r\n            _basic: false,\r\n          });\r\n          history.push('/customer/pay');\r\n        } else {\r\n          const message = await response.json();\r\n          console.log(message);\r\n          setLoading({\r\n            _basic: false,\r\n          });\r\n          setErr({\r\n            isTrue: true,\r\n            data: message.errMessage,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        setLoading({\r\n          _basic: false,\r\n        });\r\n      }\r\n    };\r\n\r\n    const xtra = async() => {\r\n      const data = {\r\n        planName: 'Xtra',\r\n        mon,\r\n      }\r\n      try {\r\n        setLoading({\r\n          _xtra: true,\r\n        });\r\n        const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/choose-plan';\r\n\r\n        const response = await fetch(url, {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'auth-token': token,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        })\r\n\r\n        if (response.status === 200) {\r\n          setLoading({\r\n            _xtra: false,\r\n          });\r\n          history.push('/customer/pay');\r\n        } else {\r\n          const message = await response.json();\r\n          setLoading({\r\n            _xtra: false,\r\n          });\r\n          setErr({\r\n            isTrue: true,\r\n            data: message.errMessage,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        setLoading({\r\n          _xtra: false,\r\n        });\r\n      }\r\n    };\r\n\r\n  if (pageLoad) {\r\n    return (\r\n      <Loading />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Relaks Pricing | Subcribe, let's Relaks pay for your next home project</title>\r\n        <meta name=\"title\" content=\"Relaks Pricing | Subcribe, let's Relaks pay for your next home project\" />\r\n        <meta name=\"description\" content=\"With as low as ₦4,000 you can cover your home care and repairs need. Sign up and get 20% off your first subscription\" />\r\n        <meta name=\"keywords\" content=\"relaks plan, relaks basic, relaks xtra, relaks prime, how much is relaks plans, how much is relaks basic, how much is relaks xtra, how much is relaks prime, relaks pricing, how much does relaks cost, cost of using relaks\" />\r\n      </Helmet>\r\n      <PricingPlan basic={basic}\r\n        xtra={xtra}\r\n        prime={prime}\r\n        loading={loading}\r\n        isAuth={isAuth}\r\n        mon={mon}\r\n        handleMon={handleMon}\r\n        err={err}\r\n        closeButton={closeButton}\r\n        // plan={plan}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pricing;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyCustomer.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ThankYouPage.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerJob.js",["231"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomerJobComponent from '../statelessComponent/CustomerJobComponent';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { CustomerDashboardNav } from '../statelessComponent/Nav';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\n\r\nconst CustomerJob = () => {\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  // The success variable checks if the request was successful\r\n  const[jobs, setJobs] = useState([]);\r\n  const[error, setError] = useState({\r\n    error: false,\r\n    message: ''\r\n  });\r\n  const[success, setSuccess] = useState(false);\r\n  const[loading, setLoading] = useState(false);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n    const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/get-all-jobs';\r\n\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'auth-token': token,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      }\r\n    });\r\n\r\n    if (mounted.current && response.status === 200) {\r\n      const job = await response.json();\r\n      setSuccess(true);\r\n      setLoading(false);\r\n      return setJobs(job);\r\n    } else if (mounted.current && response.status === 201) {\r\n      const job = await response.json();\r\n      setLoading(false)\r\n      setSuccess(false);\r\n      return setError({\r\n        error: true,\r\n        message: job.errMessage,\r\n      });\r\n    } else if (mounted.current && response.status === 401) {\r\n\r\n      history.push('/customer/login');\r\n    } else if (mounted.current && response.status === 400) {\r\n      const job = await response.json();\r\n      setLoading(false);\r\n      setSuccess(false);\r\n      return setError({\r\n        error: true,\r\n        message: job.errMessage,\r\n      });\r\n    }\r\n\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setJobs(error)\r\n      setSuccess(false);\r\n      return setError({\r\n        error: true,\r\n        message: `Couldn't fetch the jobs. Please check your internet connection and try again!!`\r\n      });\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  const logic = () => {\r\n    if (loading) {\r\n      return (\r\n        <div>\r\n          <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">Fetching Your Jobs...</h4>\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (success) {\r\n      const mappedJob = jobs.map(job =>  <CustomerJobComponent job={job} key={job._id} />);\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          {mappedJob}\r\n          <MiniFooter />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <h4 className=\"how-its-works\">{error.message}</h4>\r\n    );\r\n\r\n  };\r\n  // const mappedJob = jobs.map(job => <p className=\"card-tex\">{job.Description}</p>)\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Your Jobs</title>\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n      </Helmet>\r\n      <CustomerDashboardNav />\r\n      {logic()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerJob;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerDashboard.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Flutterwave.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\JobList.js",["232"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Helmet from 'react-helmet';\r\nimport HandymanJob from '../statelessComponent/HandymanJob';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { HandymanDashboardNav } from '../statelessComponent/Nav';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\n\r\nconst JobList =  () => {\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  // The success variable checks if the request was successful\r\n  const[jobs, setJobs] = useState([]);\r\n  const[error, setError] = useState({\r\n    error: false,\r\n    message: ''\r\n  })\r\n  const[loading, setLoading] = useState(false);\r\n  const[success, setSuccess] = useState(false);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n      const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/all-jobs';\r\n\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n        }\r\n      });\r\n\r\n      if (mounted.current && response.status === 200) {\r\n        const job = await response.json();\r\n        setSuccess(true);\r\n        setLoading(false);\r\n        return setJobs(job.jobs);\r\n      } else if (mounted.current && response.status === 201) {\r\n        const job = await response.json();\r\n\r\n        setSuccess(false);\r\n        setLoading(false);\r\n        return setError({\r\n          error: true,\r\n          message: job.errMessage,\r\n        });\r\n      } else if (mounted.current && response.status === 401) {\r\n\r\n        history.push('/handyman/login');\r\n      } else if (mounted.current && response.status === 400) {\r\n        const job = await response.json();\r\n\r\n        setSuccess(false);\r\n        setLoading(false);\r\n        return setError({\r\n          error: true,\r\n          message: job.errMessage,\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n      setJobs(error);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n      return setError({\r\n        error: true,\r\n        message: `Couldn't fetch the jobs. Please check your internet connection and try again!!`,\r\n      });\r\n    };\r\n  };\r\n\r\n  // Cleans the DOM\r\n  useEffect(() => {\r\n    getData();\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n\r\n  const logic = () => {\r\n    if (loading) {\r\n      return (\r\n        <div>\r\n          <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">Loading Jobs...</h4>\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (success) {\r\n      const mappedJob = jobs.map(job => <HandymanJob job={job} key={job._id} />);\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          {mappedJob}\r\n          <MiniFooter />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">{error.message}</h4>\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n          </div>\r\n      </div>\r\n    );\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Relaks Jobs | Accept Jobs and Earn Money!!</title>\r\n        <meta name=\"description\" content=\"Login to Your Account\"/>\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n      </Helmet>\r\n      <HandymanDashboardNav />\r\n      {logic()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobList;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Review.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Nav.js",["233","234","235"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n// import { FaCog } from 'react-icons/fa';\r\n\r\nimport '../css/nav.css'\r\nimport NavLogo from '../assest/RelaksLogo.png';\r\nimport {\r\n  faBars,\r\n  faCog,\r\n  faTachometerAlt,\r\n  faSignOutAlt,\r\n  faBullhorn,\r\n  faBriefcase,\r\n  faShoppingCart,\r\n  faTools,\r\n  faMoneyBillWave,\r\n  faClipboardCheck,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport HandymanIsVerified from './HandymanIsVerified';\r\n\r\n\r\n// This is the Homepage Nav when not authenticated\r\nexport const NormalNav = () => {\r\n  const history = useHistory();\r\n  const handleNavButton = () => {\r\n    return (\r\n      history.push('/customer/register')\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"nav-content\">\r\n      <div>\r\n        <Link to=\"/\">\r\n          <img src={NavLogo} className=\"nav-logo\" alt=\"relaks logo\" />\r\n        </Link>\r\n      </div>\r\n      <div className=\"nav-action\">\r\n        <div className=\"nav-login\">\r\n          <h4 className=\"nav-header\"><Link to=\"/customer/login\">Login</Link></h4>\r\n        </div>\r\n        <div className=\"nav-subcribe\">\r\n          <button onClick={handleNavButton} className=\"nav-subcribe-button\">\r\n            <h4 className=\"nav-header\">\r\n              <b>Subcribe</b>\r\n            </h4>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// This is the home page nav when authenticated\r\nexport const AuthNav = () => {\r\n  const history = useHistory();\r\n  const handleNavButton = () => {\r\n    return (\r\n      history.push('/customer')\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"nav-content\">\r\n      <div>\r\n        <Link to=\"/\">\r\n          <img src={NavLogo} className=\"nav-logo\" alt=\"relaks logo\" />\r\n        </Link>\r\n      </div>\r\n      <div className=\"nav-action\">\r\n        {/* <div className=\"nav-login\">\r\n          <h4><Link to=\"/customer/login\">Login</Link></h4>\r\n        </div> */}\r\n        <div className=\"nav-subcribe\">\r\n          <button onClick={handleNavButton} className=\"nav-subcribe-button\">\r\n            <h4>\r\n              <b>Dashboard</b>\r\n            </h4>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// The Handyman Dashboard Nav\r\nexport const HandymanDashboardNav = () => {\r\n  const[menuButton, setMenuButton] = useState(false);\r\n  const[response, setResponse] = useState({\r\n    loading: false,\r\n    data: '',\r\n  });\r\n\r\n  const history = useHistory();\r\n  \r\n\r\n\r\n  const handleMenuButton = () => {\r\n    setMenuButton(!menuButton);\r\n  };\r\n\r\n  const logouthandler = () => {\r\n    localStorage.clear('jwt_token');\r\n  };\r\n  \r\n  const getData = async ()  => {\r\n    try {\r\n      setResponse({\r\n        loading: true,\r\n      });\r\n      const url =  'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(response.status === 200) {\r\n        setResponse({\r\n          loading: false,\r\n          data: data,\r\n        });\r\n      }\r\n      if(response.status === 401) {\r\n        history.push('/handyman/login');\r\n      };\r\n    } catch (error) {\r\n      setResponse({\r\n        loading: false,\r\n        data: 'Something Went wrong. Try Again!!',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"harmburger\">\r\n      <FontAwesomeIcon icon={faBars} size=\"3x\" onClick={handleMenuButton} className=\"harmburger-icon\" style={{\r\n        color: menuButton ? 'blue': null\r\n      }} />\r\n        <div>\r\n          <img src={NavLogo} className=\"nav-logo\" alt=\"relaks logo\" />\r\n        </div>\r\n      </div>\r\n      <div className={menuButton ? 'mystyle' : 'dashboardnav'}>\r\n      <div className=\"dashboardnav-content\">\r\n        <h5 className=\"dashboard-header\">{response.loading ? 'Loading...' : `Hi, ${response.data.name}`}</h5>\r\n        <ul className=\"dashboardnav-ul footer-ul\">\r\n          <li className=\"dashboardnav-li\"><Link to=\"/handyman\"><FontAwesomeIcon icon={faTachometerAlt} /> Dashboard</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/handyman/accept-job\"><FontAwesomeIcon icon={faClipboardCheck} /> Accept Jobs</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/handyman/job\"><FontAwesomeIcon icon={faBriefcase} /> My Jobs</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/handyman/request-payment\"><FontAwesomeIcon icon={faMoneyBillWave} /> Pay Out</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/handyman/setting\"><FontAwesomeIcon icon={faCog} /> Settings</Link></li>\r\n          <li className=\"dashboardnav-li\" onClick={logouthandler}><Link to=\"/\"><FontAwesomeIcon icon={faSignOutAlt} /> Logout</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"#\"><FontAwesomeIcon icon={faBullhorn} /> Feedback</Link></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    </nav>\r\n  );\r\n}; \r\n\r\n// The Customer Dashboard Nav\r\nexport const CustomerDashboardNav = () => {\r\n  const[menuButton, setMenuButton] = useState(false);\r\n  const[response, setResponse] = useState({\r\n    loading: false,\r\n    data: ''\r\n  });\r\n\r\n  const history = useHistory();\r\n  \r\n\r\n\r\n  const handleMenuButton = () => {\r\n    setMenuButton(!menuButton);\r\n  };\r\n\r\n  const logouthandler = () => {\r\n    localStorage.clear('jwt_token');\r\n  };\r\n\r\n  const getData = async ()  => {\r\n    try {\r\n      setResponse({\r\n        loading: true,\r\n      });\r\n      const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      if(response.status === 200) {\r\n        const data = await response.json();\r\n        setResponse({\r\n          loading: false,\r\n          data,\r\n        });\r\n      }\r\n      if(response.status === 201) {\r\n        const data = await response.json();\r\n        setResponse({\r\n          loading: false,\r\n          data: data.authUser,\r\n        })\r\n        history.push('/customer/pricing');\r\n      }\r\n      if(response.status === 401) {\r\n        history.push('/customer/login');\r\n      };\r\n    } catch (error) {\r\n      setResponse({\r\n        loading: false,\r\n        data: 'Something Went wrong. Try Again!!',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [])\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"harmburger\">\r\n        <FontAwesomeIcon icon={faBars} size=\"3x\" onClick={handleMenuButton} className=\"harmburger-icon\" style={{\r\n          color: menuButton ? 'blue' : null,\r\n        }}/>\r\n        <div>\r\n          <img src={NavLogo} className=\"nav-logo\" alt=\"relaks logo\" />\r\n        </div>\r\n      </div>\r\n      <div className={menuButton ? 'mystyle' : 'dashboardnav'}>\r\n      <div className=\"dashboardnav-content\">\r\n        <h5 className=\"dashboard-header\">{response.loading ? 'Loading...' : `Hi, ${response.data.name}`}</h5>\r\n        <ul className=\"dashboardnav-ul footer-ul\">\r\n          <li className=\"dashboardnav-li\"><Link to=\"/customer\"><FontAwesomeIcon icon={faTachometerAlt} /> Dashboard</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/customer/book-service\"><FontAwesomeIcon icon={faTools} /> Request Service</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/customer/job\"><FontAwesomeIcon icon={faBriefcase} /> My Jobs</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/customer/pricing\"><FontAwesomeIcon icon={faShoppingCart} /> Buy Plan</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/customer/setting\"><FontAwesomeIcon icon={faCog} /> Settings</Link></li>\r\n          <li className=\"dashboardnav-li\" onClick={logouthandler}><Link to=\"/\"><FontAwesomeIcon icon={faSignOutAlt} /> Logout</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"#\"><FontAwesomeIcon icon={faBullhorn} /> Feedback</Link></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    </nav>\r\n  );\r\n}; ","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\NeedHelpTemplate.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ForgotPasswordForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Footer.js",["236"],"import React from 'react';\r\nimport Logo from '../assest/logo.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  faFacebook,\r\n  faTwitter,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  faPhoneAlt,\r\n  faEnvelope,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div id=\"footer\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <h4 className=\"footer-header\">Company</h4>\r\n          <div className=\"footer-text\">\r\n            <ul className=\"footer-ul\">\r\n              <li><Link to=\"/\">Home</Link></li>\r\n              <li><Link to=\"/about\">About</Link></li>\r\n              <li><Link to=\"/contact-us\">Contact Us</Link></li>\r\n              <li><Link to=\"customer/pricing\">Pricing</Link></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <h4 className=\"footer-header\">Legal</h4>\r\n          <div className=\"footer-text\">\r\n            <ul className=\"footer-ul\">\r\n              <li><Link to='/terms-condition'>Terms of Service</Link></li>\r\n              <li><Link to='/privacy-policy'>Privacy Policy</Link></li>\r\n              <li><Link to='/technician-agreement'>Relaks Technicians Agreement</Link></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{marginTop: '30px'}} className=\"row\">\r\n        <div className=\"col-6\">\r\n          <h4 className=\"footer-header\">Solutions</h4>\r\n          <div className=\"footer-text\">\r\n            <ul className=\"footer-ul\">\r\n              <li><Link to='/customer'>Relaks For Customers</Link></li>\r\n              <li><Link to='/handyman'>Relaks For Technicians</Link></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <h4 className=\"footer-header\">Connect With Us</h4>\r\n          <div className=\"footer-text\">\r\n            <ul className=\"footer-ul\">\r\n              <li><a href=\"https://www.facebook.com/Relaks-Home-100598445516384/\" target=\"blank\"><FontAwesomeIcon icon={faFacebook} style={{\r\n                marginRight: '4px'\r\n              }}/>Facebook</a></li>\r\n              <li><a href=\"mailto:support@tryrelaks.com\"><FontAwesomeIcon icon={faEnvelope} style={{\r\n                marginRight: '4px',\r\n              }}/>support@tryrelaks.com.ng</a></li>\r\n              <li><a href=\"tel:+2349055681957\"><FontAwesomeIcon icon={faPhoneAlt} style={{\r\n                marginRight: '4px'\r\n              }} />+2349085876383</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr style={{\r\n        backgroundColor: 'aqua',\r\n      }}/>\r\n      <div>\r\n        <h6 style={{\r\n          color: 'white',\r\n          marginLeft: '35px',\r\n          marginRight: '35px',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          fontFamily: 'fangsong',\r\n        }}>\r\n          At Relaks We are making it easier for you to keep your home in good shape while doing what matters to you most\r\n        </h6>\r\n      </div>\r\n      <div className=\"relaks-footer-logo\">\r\n        <img src={Logo} alt=\"Relaks Logo\" className=\"footer-logo\" />\r\n      </div>\r\n      <div className=\"footer-text\">\r\n        <p className=\"footer-text\">© Relaks 2021</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\loginForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Job.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\verifyUserForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\registerForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanIsVerified.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\CustomerJobComponent.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PricingPlan.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Dashboard.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ReviewForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanJob.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\MiniFooter.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Error.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Settings.js",["237"],"import React, { useState } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { CustomerDashboardNav, HandymanDashboardNav } from '../statelessComponent/Nav';\r\nimport SettingsForm from '../statelessComponent/settingsform';\r\n\r\nconst Settings = ()  => {\r\n  const[name, setName] = useState('');\r\n  const[email, setEmail] = useState('');\r\n  const[phone, setPhone] = useState('');\r\n  const[oldPassword, setOldPassword] = useState('');\r\n  const[newPassword, setNewPassword] = useState('');\r\n  const[loading, setLoading] = useState(false);\r\n  const[personalInfoRes, setPersonalInfoRes] = useState('');\r\n  const[resetPasswordRes, setResetPasswordRes] = useState('');\r\n\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handlePhone = (e) => {\r\n    setPhone(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleOldPassword = (e) => {\r\n    setOldPassword(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleNewPassword =  (e) => {\r\n    setNewPassword(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handlePersonalInformation = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n      const url = document.location.pathname === '/customer/setting' ? 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/update-user' : 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/update-user'\r\n      const data = {\r\n        name: name,\r\n        email: email,\r\n        phone: phone\r\n      }\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      if (response.status === 200) {\r\n        const message = await response.json();\r\n        setLoading(false);\r\n        setPersonalInfoRes(message.successMessage);\r\n      } else {\r\n        const message = await response.json()\r\n        setLoading(false);\r\n        setPersonalInfoRes(message.errMessage);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setPersonalInfoRes(error.TypeError);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n      const url = document.location.pathname === '/customer/reset-password' ? 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/reset-password' : 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/reset-password'\r\n      const data = {\r\n        oldPassword,\r\n        newPassword,\r\n      };\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'auth-token' : token,\r\n          'Accept' : 'application/json',\r\n          'Content-Type' : 'application/json',\r\n        }\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const message = response.json();\r\n        setLoading(false);\r\n        setResetPasswordRes(message.successMessage);\r\n      } else {\r\n        const message = response.json();\r\n        setLoading(false);\r\n        setResetPasswordRes(message.errMessage);\r\n      };\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setResetPasswordRes(error.TypeError);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Relaks Settings | Manage your account here.</title>\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n      </Helmet>\r\n      {document.location.pathname === '/customer/setting' ? <CustomerDashboardNav /> : <HandymanDashboardNav />}\r\n      <SettingsForm oldPassword={oldPassword}\r\n        newPassword={newPassword}\r\n        name={name}\r\n        email={email}\r\n        phone={phone}\r\n        loading={loading}\r\n        personalInfoRes={personalInfoRes}\r\n        handleName={handleName}\r\n        handleEmail={handleEmail}\r\n        handlePhone={handlePhone}\r\n        handleOldPassword={handleOldPassword}\r\n        handleNewPassword={handleNewPassword}\r\n        handlePersonalInformation={handlePersonalInformation}\r\n        handleResetPassword={handleResetPassword}\r\n       />\r\n      <MiniFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\settingsform.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\RequestPayment.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\RequestPaymentForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\jobTable.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanJob.js",["238"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Helmet from 'react-helmet';\r\nimport HandymanJobComp from '../statelessComponent/HandyManJobListComp';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { HandymanDashboardNav } from '../statelessComponent/Nav';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\n\r\nconst HandymanJob = () => {\r\n  const[jobs, setJobs] = useState([]);\r\n  const[loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    // Get the User Jobs\r\n    const getJobs = async ()  => {\r\n    try {\r\n      setLoading(true);\r\n      const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/get-all-jobs';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        setLoading(false);\r\n        setJobs(data);\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n         history.push('/handyman/login');\r\n      };\r\n      if(mounted.current && response.status === 201) {\r\n        setLoading(false);\r\n        setJobs(data);\r\n      };\r\n\r\n      setJobs(data);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setJobs(error);\r\n    }\r\n  };\r\n  getJobs();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n\r\n  const logic = () => {\r\n    if (loading) {\r\n      <div>\r\n        <NeedHelpTemplate />\r\n        <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">Loading Jobs...</h4>\r\n        <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n        </div>\r\n      </div>\r\n    }\r\n\r\n    if (typeof jobs === String) {\r\n      <div>\r\n        <NeedHelpTemplate />\r\n        <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">{jobs.errMessage}</h4>\r\n        <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n        }} className=\"mini-footer\">\r\n          <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n        </div>\r\n      </div>\r\n    }\r\n\r\n    if (jobs.jobs === undefined) {\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">Loading Jobs...</h4>\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (jobs.jobs.length === 0) {\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">No Jobs Yet!!</h4>\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n    const mappedJob = jobs.jobs.map((job) => <HandymanJobComp key={job._id} job={job}/>);\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>Relaks Dashboard | View your account, manage all your job request.</title>\r\n          <meta name = \"description\" content = \"View Your Dashboard\" />\r\n          <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n        </Helmet>\r\n        <NeedHelpTemplate />\r\n        {mappedJob}\r\n        <MiniFooter />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <HandymanDashboardNav />\r\n      {logic()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandymanJob;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandyManJobListComp.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Loading.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PrivacyPolicy.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\About.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Terms.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\relaks__cta.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ICA.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanFlutter.js",[],{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":9,"column":3,"nodeType":"245","messageId":"246","endLine":9,"endColumn":12},{"ruleId":"243","severity":1,"message":"247","line":11,"column":10,"nodeType":"245","messageId":"246","endLine":11,"endColumn":25},{"ruleId":"248","severity":1,"message":"249","line":61,"column":6,"nodeType":"250","endLine":61,"endColumn":8,"suggestions":"251"},{"ruleId":"248","severity":1,"message":"249","line":102,"column":6,"nodeType":"250","endLine":102,"endColumn":8,"suggestions":"252"},{"ruleId":"248","severity":1,"message":"253","line":72,"column":6,"nodeType":"250","endLine":72,"endColumn":8,"suggestions":"254"},{"ruleId":"248","severity":1,"message":"253","line":79,"column":6,"nodeType":"250","endLine":79,"endColumn":8,"suggestions":"255"},{"ruleId":"248","severity":1,"message":"253","line":82,"column":6,"nodeType":"250","endLine":82,"endColumn":8,"suggestions":"256"},{"ruleId":"243","severity":1,"message":"257","line":20,"column":8,"nodeType":"245","messageId":"246","endLine":20,"endColumn":26},{"ruleId":"248","severity":1,"message":"253","line":140,"column":6,"nodeType":"250","endLine":140,"endColumn":8,"suggestions":"258"},{"ruleId":"248","severity":1,"message":"253","line":233,"column":6,"nodeType":"250","endLine":233,"endColumn":8,"suggestions":"259"},{"ruleId":"243","severity":1,"message":"260","line":7,"column":3,"nodeType":"245","messageId":"246","endLine":7,"endColumn":12},{"ruleId":"243","severity":1,"message":"261","line":15,"column":9,"nodeType":"245","messageId":"246","endLine":15,"endColumn":25},{"ruleId":"248","severity":1,"message":"249","line":54,"column":6,"nodeType":"250","endLine":54,"endColumn":8,"suggestions":"262"},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'faHeadset' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["265"],["266"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["267"],["268"],["269"],"'HandymanIsVerified' is defined but never used.",["270"],["271"],"'faTwitter' is defined but never used.","'resetPasswordRes' is assigned a value but never used.",["272"],"no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"273","fix":"275"},{"desc":"276","fix":"277"},{"desc":"276","fix":"278"},{"desc":"276","fix":"279"},{"desc":"276","fix":"280"},{"desc":"276","fix":"281"},{"desc":"273","fix":"282"},"Update the dependencies array to be: [history]",{"range":"283","text":"284"},{"range":"285","text":"284"},"Update the dependencies array to be: [getData]",{"range":"286","text":"287"},{"range":"288","text":"287"},{"range":"289","text":"287"},{"range":"290","text":"287"},{"range":"291","text":"287"},{"range":"292","text":"284"},[1973,1975],"[history]",[3070,3072],[1735,1737],"[getData]",[2396,2398],[2468,2470],[3601,3603],[6786,6788],[1683,1685]]
=======
[{"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\index.js":"1","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\App.js":"3","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanLogin.js":"4","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerLogin.js":"5","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerForgotPassword.js":"6","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Home.js":"7","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ContactUs.js":"8","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerRegister.js":"9","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\404.js":"10","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyHandyman.js":"11","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanForgotPassword.js":"12","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanRegister.js":"13","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanDashboard.js":"14","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\BookJob.js":"15","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Pricing.js":"16","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyCustomer.js":"17","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ThankYouPage.js":"18","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerJob.js":"19","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerDashboard.js":"20","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Flutterwave.js":"21","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\JobList.js":"22","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Review.js":"23","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Nav.js":"24","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\NeedHelpTemplate.js":"25","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ForgotPasswordForm.js":"26","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Footer.js":"27","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\loginForm.js":"28","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Job.js":"29","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\verifyUserForm.js":"30","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\registerForm.js":"31","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanIsVerified.js":"32","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\CustomerJobComponent.js":"33","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PricingPlan.js":"34","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Dashboard.js":"35","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ReviewForm.js":"36","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanJob.js":"37","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\MiniFooter.js":"38","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Error.js":"39","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Settings.js":"40","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\settingsform.js":"41","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\RequestPayment.js":"42","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\RequestPaymentForm.js":"43","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\jobTable.js":"44","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanJob.js":"45","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandyManJobListComp.js":"46","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Loading.js":"47","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PrivacyPolicy.js":"48","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\About.js":"49","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Terms.js":"50","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\relaks__cta.js":"51","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ICA.js":"52","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanFlutter.js":"53"},{"size":658,"mtime":1620857553635,"results":"54","hashOfConfig":"55"},{"size":362,"mtime":499162500000,"results":"56","hashOfConfig":"55"},{"size":4838,"mtime":1623848072857,"results":"57","hashOfConfig":"55"},{"size":3592,"mtime":1199147967870,"results":"58","hashOfConfig":"55"},{"size":3553,"mtime":1199147979305,"results":"59","hashOfConfig":"55"},{"size":2852,"mtime":1199147842120,"results":"60","hashOfConfig":"55"},{"size":13499,"mtime":1623398103661,"results":"61","hashOfConfig":"55"},{"size":2024,"mtime":1199145677661,"results":"62","hashOfConfig":"55"},{"size":5530,"mtime":1624015454099,"results":"63","hashOfConfig":"55"},{"size":1281,"mtime":1199143779025,"results":"64","hashOfConfig":"55"},{"size":2857,"mtime":1623417526818,"results":"65","hashOfConfig":"55"},{"size":2850,"mtime":1199147823160,"results":"66","hashOfConfig":"55"},{"size":5676,"mtime":1624015657603,"results":"67","hashOfConfig":"55"},{"size":3814,"mtime":1199147645838,"results":"68","hashOfConfig":"55"},{"size":7282,"mtime":1199144090891,"results":"69","hashOfConfig":"55"},{"size":6233,"mtime":1623423294560,"results":"70","hashOfConfig":"55"},{"size":2864,"mtime":1623417365939,"results":"71","hashOfConfig":"55"},{"size":1819,"mtime":1199144107561,"results":"72","hashOfConfig":"55"},{"size":3524,"mtime":1199147304793,"results":"73","hashOfConfig":"55"},{"size":3276,"mtime":1199146540226,"results":"74","hashOfConfig":"55"},{"size":4112,"mtime":1625919882619,"results":"75","hashOfConfig":"55"},{"size":3879,"mtime":1623416766692,"results":"76","hashOfConfig":"55"},{"size":2251,"mtime":1623416915068,"results":"77","hashOfConfig":"55"},{"size":8390,"mtime":1621378248082,"results":"78","hashOfConfig":"55"},{"size":680,"mtime":1620893024444,"results":"79","hashOfConfig":"55"},{"size":1366,"mtime":1612725202456,"results":"80","hashOfConfig":"55"},{"size":3356,"mtime":1621017869122,"results":"81","hashOfConfig":"55"},{"size":3287,"mtime":1620406074458,"results":"82","hashOfConfig":"55"},{"size":5047,"mtime":1620406074383,"results":"83","hashOfConfig":"55"},{"size":2408,"mtime":1618997345724,"results":"84","hashOfConfig":"55"},{"size":7966,"mtime":1620406074489,"results":"85","hashOfConfig":"55"},{"size":1552,"mtime":1199144151760,"results":"86","hashOfConfig":"55"},{"size":5434,"mtime":1626177865728,"results":"87","hashOfConfig":"55"},{"size":10279,"mtime":1625919882747,"results":"88","hashOfConfig":"55"},{"size":14516,"mtime":1624017365476,"results":"89","hashOfConfig":"55"},{"size":1493,"mtime":1618779415582,"results":"90","hashOfConfig":"55"},{"size":3728,"mtime":1619783931197,"results":"91","hashOfConfig":"55"},{"size":213,"mtime":1618578183375,"results":"92","hashOfConfig":"55"},{"size":965,"mtime":1615461644279,"results":"93","hashOfConfig":"55"},{"size":4426,"mtime":1623417167709,"results":"94","hashOfConfig":"55"},{"size":3245,"mtime":1620406074511,"results":"95","hashOfConfig":"55"},{"size":3708,"mtime":1623416851284,"results":"96","hashOfConfig":"55"},{"size":2862,"mtime":1620221454197,"results":"97","hashOfConfig":"55"},{"size":702,"mtime":1618224465917,"results":"98","hashOfConfig":"55"},{"size":4036,"mtime":1199147868175,"results":"99","hashOfConfig":"55"},{"size":4030,"mtime":1619783984176,"results":"100","hashOfConfig":"55"},{"size":493,"mtime":1620406074400,"results":"101","hashOfConfig":"55"},{"size":22613,"mtime":1199143610357,"results":"102","hashOfConfig":"55"},{"size":7238,"mtime":1199145207805,"results":"103","hashOfConfig":"55"},{"size":19343,"mtime":1199144128040,"results":"104","hashOfConfig":"55"},{"size":1118,"mtime":1618782333896,"results":"105","hashOfConfig":"55"},{"size":22588,"mtime":1199143701774,"results":"106","hashOfConfig":"55"},{"size":3819,"mtime":1199147714224,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1cdldua",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\index.js",[],["224","225"],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\App.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanLogin.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerLogin.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerForgotPassword.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Home.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ContactUs.js",["226","227"],"import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport Footer from './Footer';\r\nimport { NormalNav } from './Nav';\r\nimport NeedHelpTemplate from './NeedHelpTemplate';\r\nimport '../css/contactus.css';\r\n\r\nimport {\r\n  faHeadset,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport RelaksCta from './relaks__cta';\r\n\r\nconst ContactUs = () => {\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Contact Relaks</title>\r\n        <meta name=\"title\" content=\"Contact Relaks |\" />\r\n        <meta name=\"description\" content=\"We Would love to answer any questions you have. Let's get started\" />\r\n      </Helmet>\r\n      <NeedHelpTemplate />\r\n      <NormalNav />\r\n      <div className=\"contact-us-header\">\r\n        <h1><b>CONTACT RELAKS</b></h1>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <div>\r\n            <p className=\"contact-us-text\">Relaks is a home subcription service that pays for your home repair and care needs.</p>\r\n            <p className=\"contact-us-text\">We would love to answer any question you have. Feel Free to contact us!!</p>\r\n            {/* <p className=\"contact-us-text\">Before You lay complain please read our faq, the answer to your question might just be there</p> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n            <p className=\"contact-us-text\">Email: <a href=\"email:support@tryrelaks.com\">support@tryrelaks.com</a></p>\r\n            <p className=\"contact-us-text\">Tel: <a href=\"tel:+2349055681975\">+2349055681975</a></p>\r\n          </div>\r\n      </div>\r\n      {/* <div className=\"faq\">\r\n        <h2 id=\"faq-header\">Frequently Asked Question</h2>\r\n        <div>\r\n          <p>This is our FAQ Section</p>\r\n        </div>\r\n      </div> */}\r\n      <RelaksCta />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerRegister.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\404.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyHandyman.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanForgotPassword.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanRegister.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanDashboard.js",["228","229"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Helmet from 'react-helmet';\r\nimport Dashboard from '../statelessComponent/Dashboard';\r\nimport HandymanIsVerified from '../statelessComponent/HandymanIsVerified';\r\nimport Loading from '../statelessComponent/Loading';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { HandymanDashboardNav } from '../statelessComponent/Nav';\r\n\r\nconst HandymanDashboard = () => {\r\n  // const[response, setResponse] = useState({\r\n  //   loading: false,\r\n  //   isAuth: false,\r\n  //   data: [],\r\n  //   success: false,\r\n  //   error: false,\r\n  // });\r\n  const[data, setData] = useState([]);\r\n  const[jobs, setJobs] = useState([]);\r\n  const[loading, setLoading] = useState(false);\r\n  let history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    // Get the user Info\r\n    const getUserInfo = async ()  => {\r\n    try {\r\n      setLoading(true);\r\n      const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        setLoading(false);\r\n        setData(data);\r\n        localStorage.setItem('earned_amount', data.amountEarned);\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n         history.push('/handyman/login');\r\n      };\r\n      if(mounted.current && response.status === 201) {\r\n        return (\r\n          <HandymanIsVerified />\r\n        );\r\n      };\r\n    } catch (error) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  getUserInfo();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Get the User Jobs\r\n    const getJobs = async ()  => {\r\n    try {\r\n      setLoading(true);\r\n      const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/get-all-jobs';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        setLoading(false);\r\n        setJobs(data);\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n         history.push('/handyman/login');\r\n      };\r\n      if(mounted.current && response.status === 201) {\r\n        return (\r\n          <HandymanIsVerified />\r\n        );\r\n      };\r\n\r\n      setJobs(data);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setJobs(error);\r\n    }\r\n  };\r\n  getJobs();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />\r\n  }\r\n\r\n  if (data.isVerified === false) {\r\n    return (\r\n      <HandymanIsVerified />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Relaks Dashboard | View your account, Accept Job, Request Payment!!</title>\r\n        <meta name=\"title\" content=\"Relaks Dashboard | View your account, Accept Job, Request Payment!!\" />\r\n        <meta name = \"description\" content = \"View Your Dashboard\" />\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n      </Helmet>\r\n      <HandymanDashboardNav />\r\n      <Dashboard jobs={jobs.jobs}\r\n        data={data}\r\n        loading={loading}\r\n      />\r\n      <MiniFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandymanDashboard;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\BookJob.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Pricing.js",["230"],"import React, { useEffect, useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PricingPlan from '../statelessComponent/PricingPlan';\r\nimport Loading from '../statelessComponent/Loading';\r\n\r\nconst Pricing = () => {\r\n  const[pageLoad, setPageLoad] = useState(false);\r\n  const[isAuth, setIsAuth] = useState(false);\r\n  const[loading, setLoading] = useState({\r\n    _prime: false,\r\n    _xtra: false,\r\n    _basic: false,\r\n  });\r\n  const[mon, setMon] = useState(true);\r\n  const[err, setErr] = useState({\r\n    isTrue: false,\r\n    data: '',\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const token = localStorage.getItem('jwt_token');\r\n\r\n  const handleMon = () => {\r\n    setMon(!mon);\r\n  }\r\n\r\n  const closeButton = () => {\r\n    setErr({\r\n      isTrue: false,\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n    setPageLoad(true);\r\n    const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/dashboard';\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'auth-token': token,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      }\r\n    });\r\n\r\n    if (response.status === 200 || response.status === 201) {\r\n      if (response.status === 200) {\r\n        setIsAuth(true);\r\n        setPageLoad(false);\r\n\r\n      } else if (response.status === 201) {\r\n        setIsAuth(true);\r\n        setPageLoad(false)\r\n\r\n      }\r\n      setIsAuth(true);\r\n      setPageLoad(false);\r\n    } else {\r\n      console.log('error');\r\n      setIsAuth(false);\r\n      setPageLoad(false);\r\n    }\r\n    } catch (error) {\r\n      setPageLoad(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, []);\r\n    \r\n    // Each of Package function will redirect to the payment page once the response status is 200 or 201\r\n    const prime = async() => {\r\n      const data = {\r\n        planName: 'Prime',\r\n        mon,\r\n      }\r\n\r\n      // console.log(data);\r\n\r\n      try {\r\n        setLoading({\r\n          _prime: true,\r\n        });\r\n        const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/choose-plan';\r\n\r\n        const response = await fetch(url, {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'auth-token': token,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        })\r\n\r\n        if (response.status === 200) {\r\n          setLoading({\r\n            _prime: false\r\n          });\r\n          history.push('/customer/pay');\r\n        } else {\r\n          const message = await response.json()\r\n          // console.log(message.errMessage);\r\n          setErr({\r\n            isTrue: true,\r\n            data: message.errMessage,\r\n          })\r\n          setLoading({\r\n            _prime: false,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setLoading({\r\n          _prime: false,\r\n        });\r\n      }\r\n    };\r\n\r\n\r\n  // Basic Package\r\n    const basic = async() => {\r\n      const data = {\r\n        planName: 'Basic',\r\n        mon,\r\n      }\r\n      try {\r\n        setLoading({\r\n          _basic: true,\r\n        });\r\n        const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/choose-plan';\r\n\r\n        const response = await fetch(url, {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'auth-token': token,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        })\r\n\r\n        if (response.status === 200) {\r\n          setLoading({\r\n            _basic: false,\r\n          });\r\n          history.push('/customer/pay');\r\n        } else {\r\n          const message = await response.json();\r\n          console.log(message);\r\n          setLoading({\r\n            _basic: false,\r\n          });\r\n          setErr({\r\n            isTrue: true,\r\n            data: message.errMessage,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        setLoading({\r\n          _basic: false,\r\n        });\r\n      }\r\n    };\r\n\r\n    const xtra = async() => {\r\n      const data = {\r\n        planName: 'Xtra',\r\n        mon,\r\n      }\r\n      try {\r\n        setLoading({\r\n          _xtra: true,\r\n        });\r\n        const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/choose-plan';\r\n\r\n        const response = await fetch(url, {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'auth-token': token,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        })\r\n\r\n        if (response.status === 200) {\r\n          setLoading({\r\n            _xtra: false,\r\n          });\r\n          history.push('/customer/pay');\r\n        } else {\r\n          const message = await response.json();\r\n          setLoading({\r\n            _xtra: false,\r\n          });\r\n          setErr({\r\n            isTrue: true,\r\n            data: message.errMessage,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        setLoading({\r\n          _xtra: false,\r\n        });\r\n      }\r\n    };\r\n\r\n  if (pageLoad) {\r\n    return (\r\n      <Loading />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Relaks Pricing | Subcribe, let's Relaks pay for your next home project</title>\r\n        <meta name=\"title\" content=\"Relaks Pricing | Subcribe, let's Relaks pay for your next home project\" />\r\n        <meta name=\"description\" content=\"With as low as ₦4,000 you can cover your home care and repairs need. Sign up and get 20% off your first subscription\" />\r\n        <meta name=\"keywords\" content=\"relaks plan, relaks basic, relaks xtra, relaks prime, how much is relaks plans, how much is relaks basic, how much is relaks xtra, how much is relaks prime, relaks pricing, how much does relaks cost, cost of using relaks\" />\r\n      </Helmet>\r\n      <PricingPlan basic={basic}\r\n        xtra={xtra}\r\n        prime={prime}\r\n        loading={loading}\r\n        isAuth={isAuth}\r\n        mon={mon}\r\n        handleMon={handleMon}\r\n        err={err}\r\n        closeButton={closeButton}\r\n        // plan={plan}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pricing;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\VerifyCustomer.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ThankYouPage.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerJob.js",["231"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomerJobComponent from '../statelessComponent/CustomerJobComponent';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { CustomerDashboardNav } from '../statelessComponent/Nav';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\n\r\nconst CustomerJob = () => {\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  // The success variable checks if the request was successful\r\n  const[jobs, setJobs] = useState([]);\r\n  const[error, setError] = useState({\r\n    error: false,\r\n    message: ''\r\n  });\r\n  const[success, setSuccess] = useState(false);\r\n  const[loading, setLoading] = useState(false);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n    const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/get-all-jobs';\r\n\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'auth-token': token,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      }\r\n    });\r\n\r\n    if (mounted.current && response.status === 200) {\r\n      const job = await response.json();\r\n      setSuccess(true);\r\n      setLoading(false);\r\n      return setJobs(job);\r\n    } else if (mounted.current && response.status === 201) {\r\n      const job = await response.json();\r\n      setLoading(false)\r\n      setSuccess(false);\r\n      return setError({\r\n        error: true,\r\n        message: job.errMessage,\r\n      });\r\n    } else if (mounted.current && response.status === 401) {\r\n\r\n      history.push('/customer/login');\r\n    } else if (mounted.current && response.status === 400) {\r\n      const job = await response.json();\r\n      setLoading(false);\r\n      setSuccess(false);\r\n      return setError({\r\n        error: true,\r\n        message: job.errMessage,\r\n      });\r\n    }\r\n\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setJobs(error)\r\n      setSuccess(false);\r\n      return setError({\r\n        error: true,\r\n        message: `Couldn't fetch the jobs. Please check your internet connection and try again!!`\r\n      });\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  const logic = () => {\r\n    if (loading) {\r\n      return (\r\n        <div>\r\n          <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">Fetching Your Jobs...</h4>\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (success) {\r\n      const mappedJob = jobs.map(job =>  <CustomerJobComponent job={job} key={job._id} />);\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          {mappedJob}\r\n          <MiniFooter />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <h4 className=\"how-its-works\">{error.message}</h4>\r\n    );\r\n\r\n  };\r\n  // const mappedJob = jobs.map(job => <p className=\"card-tex\">{job.Description}</p>)\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Your Jobs</title>\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n      </Helmet>\r\n      <CustomerDashboardNav />\r\n      {logic()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerJob;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\CustomerDashboard.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Flutterwave.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\JobList.js",["232"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Helmet from 'react-helmet';\r\nimport HandymanJob from '../statelessComponent/HandymanJob';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { HandymanDashboardNav } from '../statelessComponent/Nav';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\n\r\nconst JobList =  () => {\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  // The success variable checks if the request was successful\r\n  const[jobs, setJobs] = useState([]);\r\n  const[error, setError] = useState({\r\n    error: false,\r\n    message: ''\r\n  })\r\n  const[loading, setLoading] = useState(false);\r\n  const[success, setSuccess] = useState(false);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n      const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/all-jobs';\r\n\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n        }\r\n      });\r\n\r\n      if (mounted.current && response.status === 200) {\r\n        const job = await response.json();\r\n        setSuccess(true);\r\n        setLoading(false);\r\n        return setJobs(job.jobs);\r\n      } else if (mounted.current && response.status === 201) {\r\n        const job = await response.json();\r\n\r\n        setSuccess(false);\r\n        setLoading(false);\r\n        return setError({\r\n          error: true,\r\n          message: job.errMessage,\r\n        });\r\n      } else if (mounted.current && response.status === 401) {\r\n\r\n        history.push('/handyman/login');\r\n      } else if (mounted.current && response.status === 400) {\r\n        const job = await response.json();\r\n\r\n        setSuccess(false);\r\n        setLoading(false);\r\n        return setError({\r\n          error: true,\r\n          message: job.errMessage,\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n      setJobs(error);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n      return setError({\r\n        error: true,\r\n        message: `Couldn't fetch the jobs. Please check your internet connection and try again!!`,\r\n      });\r\n    };\r\n  };\r\n\r\n  // Cleans the DOM\r\n  useEffect(() => {\r\n    getData();\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n\r\n  const logic = () => {\r\n    if (loading) {\r\n      return (\r\n        <div>\r\n          <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">Loading Jobs...</h4>\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (success) {\r\n      const mappedJob = jobs.map(job => <HandymanJob job={job} key={job._id} />);\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          {mappedJob}\r\n          <MiniFooter />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">{error.message}</h4>\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n          </div>\r\n      </div>\r\n    );\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Relaks Jobs | Accept Jobs and Earn Money!!</title>\r\n        <meta name=\"description\" content=\"Login to Your Account\"/>\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n      </Helmet>\r\n      <HandymanDashboardNav />\r\n      {logic()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobList;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Review.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Nav.js",["233","234","235"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n// import { FaCog } from 'react-icons/fa';\r\n\r\nimport '../css/nav.css'\r\nimport NavLogo from '../assest/RelaksLogo.png';\r\nimport {\r\n  faBars,\r\n  faCog,\r\n  faTachometerAlt,\r\n  faSignOutAlt,\r\n  faBullhorn,\r\n  faBriefcase,\r\n  faShoppingCart,\r\n  faTools,\r\n  faMoneyBillWave,\r\n  faClipboardCheck,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport HandymanIsVerified from './HandymanIsVerified';\r\n\r\n\r\n// This is the Homepage Nav when not authenticated\r\nexport const NormalNav = () => {\r\n  const history = useHistory();\r\n  const handleNavButton = () => {\r\n    return (\r\n      history.push('/customer/register')\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"nav-content\">\r\n      <div>\r\n        <Link to=\"/\">\r\n          <img src={NavLogo} className=\"nav-logo\" alt=\"relaks logo\" />\r\n        </Link>\r\n      </div>\r\n      <div className=\"nav-action\">\r\n        <div className=\"nav-login\">\r\n          <h4 className=\"nav-header\"><Link to=\"/customer/login\">Login</Link></h4>\r\n        </div>\r\n        <div className=\"nav-subcribe\">\r\n          <button onClick={handleNavButton} className=\"nav-subcribe-button\">\r\n            <h4 className=\"nav-header\">\r\n              <b>Subcribe</b>\r\n            </h4>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// This is the home page nav when authenticated\r\nexport const AuthNav = () => {\r\n  const history = useHistory();\r\n  const handleNavButton = () => {\r\n    return (\r\n      history.push('/customer')\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"nav-content\">\r\n      <div>\r\n        <Link to=\"/\">\r\n          <img src={NavLogo} className=\"nav-logo\" alt=\"relaks logo\" />\r\n        </Link>\r\n      </div>\r\n      <div className=\"nav-action\">\r\n        {/* <div className=\"nav-login\">\r\n          <h4><Link to=\"/customer/login\">Login</Link></h4>\r\n        </div> */}\r\n        <div className=\"nav-subcribe\">\r\n          <button onClick={handleNavButton} className=\"nav-subcribe-button\">\r\n            <h4>\r\n              <b>Dashboard</b>\r\n            </h4>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// The Handyman Dashboard Nav\r\nexport const HandymanDashboardNav = () => {\r\n  const[menuButton, setMenuButton] = useState(false);\r\n  const[response, setResponse] = useState({\r\n    loading: false,\r\n    data: '',\r\n  });\r\n\r\n  const history = useHistory();\r\n  \r\n\r\n\r\n  const handleMenuButton = () => {\r\n    setMenuButton(!menuButton);\r\n  };\r\n\r\n  const logouthandler = () => {\r\n    localStorage.clear('jwt_token');\r\n  };\r\n  \r\n  const getData = async ()  => {\r\n    try {\r\n      setResponse({\r\n        loading: true,\r\n      });\r\n      const url =  'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(response.status === 200) {\r\n        setResponse({\r\n          loading: false,\r\n          data: data,\r\n        });\r\n      }\r\n      if(response.status === 401) {\r\n        history.push('/handyman/login');\r\n      };\r\n    } catch (error) {\r\n      setResponse({\r\n        loading: false,\r\n        data: 'Something Went wrong. Try Again!!',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"harmburger\">\r\n      <FontAwesomeIcon icon={faBars} size=\"3x\" onClick={handleMenuButton} className=\"harmburger-icon\" style={{\r\n        color: menuButton ? 'blue': null\r\n      }} />\r\n        <div>\r\n          <img src={NavLogo} className=\"nav-logo\" alt=\"relaks logo\" />\r\n        </div>\r\n      </div>\r\n      <div className={menuButton ? 'mystyle' : 'dashboardnav'}>\r\n      <div className=\"dashboardnav-content\">\r\n        <h5 className=\"dashboard-header\">{response.loading ? 'Loading...' : `Hi, ${response.data.name}`}</h5>\r\n        <ul className=\"dashboardnav-ul footer-ul\">\r\n          <li className=\"dashboardnav-li\"><Link to=\"/handyman\"><FontAwesomeIcon icon={faTachometerAlt} /> Dashboard</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/handyman/accept-job\"><FontAwesomeIcon icon={faClipboardCheck} /> Accept Jobs</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/handyman/job\"><FontAwesomeIcon icon={faBriefcase} /> My Jobs</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/handyman/request-payment\"><FontAwesomeIcon icon={faMoneyBillWave} /> Pay Out</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/handyman/setting\"><FontAwesomeIcon icon={faCog} /> Settings</Link></li>\r\n          <li className=\"dashboardnav-li\" onClick={logouthandler}><Link to=\"/\"><FontAwesomeIcon icon={faSignOutAlt} /> Logout</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"#\"><FontAwesomeIcon icon={faBullhorn} /> Feedback</Link></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    </nav>\r\n  );\r\n}; \r\n\r\n// The Customer Dashboard Nav\r\nexport const CustomerDashboardNav = () => {\r\n  const[menuButton, setMenuButton] = useState(false);\r\n  const[response, setResponse] = useState({\r\n    loading: false,\r\n    data: ''\r\n  });\r\n\r\n  const history = useHistory();\r\n  \r\n\r\n\r\n  const handleMenuButton = () => {\r\n    setMenuButton(!menuButton);\r\n  };\r\n\r\n  const logouthandler = () => {\r\n    localStorage.clear('jwt_token');\r\n  };\r\n\r\n  const getData = async ()  => {\r\n    try {\r\n      setResponse({\r\n        loading: true,\r\n      });\r\n      const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/dashboard';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      if(response.status === 200) {\r\n        const data = await response.json();\r\n        setResponse({\r\n          loading: false,\r\n          data,\r\n        });\r\n      }\r\n      if(response.status === 201) {\r\n        const data = await response.json();\r\n        setResponse({\r\n          loading: false,\r\n          data: data.authUser,\r\n        })\r\n        history.push('/customer/pricing');\r\n      }\r\n      if(response.status === 401) {\r\n        history.push('/customer/login');\r\n      };\r\n    } catch (error) {\r\n      setResponse({\r\n        loading: false,\r\n        data: 'Something Went wrong. Try Again!!',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [])\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"harmburger\">\r\n        <FontAwesomeIcon icon={faBars} size=\"3x\" onClick={handleMenuButton} className=\"harmburger-icon\" style={{\r\n          color: menuButton ? 'blue' : null,\r\n        }}/>\r\n        <div>\r\n          <img src={NavLogo} className=\"nav-logo\" alt=\"relaks logo\" />\r\n        </div>\r\n      </div>\r\n      <div className={menuButton ? 'mystyle' : 'dashboardnav'}>\r\n      <div className=\"dashboardnav-content\">\r\n        <h5 className=\"dashboard-header\">{response.loading ? 'Loading...' : `Hi, ${response.data.name}`}</h5>\r\n        <ul className=\"dashboardnav-ul footer-ul\">\r\n          <li className=\"dashboardnav-li\"><Link to=\"/customer\"><FontAwesomeIcon icon={faTachometerAlt} /> Dashboard</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/customer/book-service\"><FontAwesomeIcon icon={faTools} /> Request Service</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/customer/job\"><FontAwesomeIcon icon={faBriefcase} /> My Jobs</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/customer/pricing\"><FontAwesomeIcon icon={faShoppingCart} /> Buy Plan</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"/customer/setting\"><FontAwesomeIcon icon={faCog} /> Settings</Link></li>\r\n          <li className=\"dashboardnav-li\" onClick={logouthandler}><Link to=\"/\"><FontAwesomeIcon icon={faSignOutAlt} /> Logout</Link></li>\r\n          <li className=\"dashboardnav-li\"><Link to=\"#\"><FontAwesomeIcon icon={faBullhorn} /> Feedback</Link></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    </nav>\r\n  );\r\n}; ","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\NeedHelpTemplate.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ForgotPasswordForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Footer.js",["236"],"import React from 'react';\r\nimport Logo from '../assest/logo.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  faFacebook,\r\n  faTwitter,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  faPhoneAlt,\r\n  faEnvelope,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div id=\"footer\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <h4 className=\"footer-header\">Company</h4>\r\n          <div className=\"footer-text\">\r\n            <ul className=\"footer-ul\">\r\n              <li><Link to=\"/\">Home</Link></li>\r\n              <li><Link to=\"/about\">About</Link></li>\r\n              <li><Link to=\"/contact-us\">Contact Us</Link></li>\r\n              <li><Link to=\"customer/pricing\">Pricing</Link></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <h4 className=\"footer-header\">Legal</h4>\r\n          <div className=\"footer-text\">\r\n            <ul className=\"footer-ul\">\r\n              <li><Link to='/terms-condition'>Terms of Service</Link></li>\r\n              <li><Link to='/privacy-policy'>Privacy Policy</Link></li>\r\n              <li><Link to='/technician-agreement'>Relaks Technicians Agreement</Link></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{marginTop: '30px'}} className=\"row\">\r\n        <div className=\"col-6\">\r\n          <h4 className=\"footer-header\">Solutions</h4>\r\n          <div className=\"footer-text\">\r\n            <ul className=\"footer-ul\">\r\n              <li><Link to='/customer'>Relaks For Customers</Link></li>\r\n              <li><Link to='/handyman'>Relaks For Technicians</Link></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <h4 className=\"footer-header\">Connect With Us</h4>\r\n          <div className=\"footer-text\">\r\n            <ul className=\"footer-ul\">\r\n              <li><a href=\"https://www.facebook.com/Relaks-Home-100598445516384/\" target=\"blank\"><FontAwesomeIcon icon={faFacebook} style={{\r\n                marginRight: '4px'\r\n              }}/>Facebook</a></li>\r\n              <li><a href=\"mailto:support@tryrelaks.com\"><FontAwesomeIcon icon={faEnvelope} style={{\r\n                marginRight: '4px',\r\n              }}/>support@tryrelaks.com.ng</a></li>\r\n              <li><a href=\"tel:+2349055681957\"><FontAwesomeIcon icon={faPhoneAlt} style={{\r\n                marginRight: '4px'\r\n              }} />+2349085876383</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr style={{\r\n        backgroundColor: 'aqua',\r\n      }}/>\r\n      <div>\r\n        <h6 style={{\r\n          color: 'white',\r\n          marginLeft: '35px',\r\n          marginRight: '35px',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          fontFamily: 'fangsong',\r\n        }}>\r\n          At Relaks We are making it easier for you to keep your home in good shape while doing what matters to you most\r\n        </h6>\r\n      </div>\r\n      <div className=\"relaks-footer-logo\">\r\n        <img src={Logo} alt=\"Relaks Logo\" className=\"footer-logo\" />\r\n      </div>\r\n      <div className=\"footer-text\">\r\n        <p className=\"footer-text\">© Relaks 2021</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\loginForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Job.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\verifyUserForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\registerForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanIsVerified.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\CustomerJobComponent.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PricingPlan.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Dashboard.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ReviewForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandymanJob.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\MiniFooter.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Error.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\Settings.js",["237"],"import React, { useState } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { CustomerDashboardNav, HandymanDashboardNav } from '../statelessComponent/Nav';\r\nimport SettingsForm from '../statelessComponent/settingsform';\r\n\r\nconst Settings = ()  => {\r\n  const[name, setName] = useState('');\r\n  const[email, setEmail] = useState('');\r\n  const[phone, setPhone] = useState('');\r\n  const[oldPassword, setOldPassword] = useState('');\r\n  const[newPassword, setNewPassword] = useState('');\r\n  const[loading, setLoading] = useState(false);\r\n  const[personalInfoRes, setPersonalInfoRes] = useState('');\r\n  const[resetPasswordRes, setResetPasswordRes] = useState('');\r\n\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handlePhone = (e) => {\r\n    setPhone(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleOldPassword = (e) => {\r\n    setOldPassword(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleNewPassword =  (e) => {\r\n    setNewPassword(e.target.value);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handlePersonalInformation = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n      const url = document.location.pathname === '/customer/setting' ? 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/update-user' : 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/update-user'\r\n      const data = {\r\n        name: name,\r\n        email: email,\r\n        phone: phone\r\n      }\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      if (response.status === 200) {\r\n        const message = await response.json();\r\n        setLoading(false);\r\n        setPersonalInfoRes(message.successMessage);\r\n      } else {\r\n        const message = await response.json()\r\n        setLoading(false);\r\n        setPersonalInfoRes(message.errMessage);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setPersonalInfoRes(error.TypeError);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('jwt_token');\r\n      const url = document.location.pathname === '/customer/reset-password' ? 'https://enigmatic-ocean-25180.herokuapp.com/api/customers/reset-password' : 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/reset-password'\r\n      const data = {\r\n        oldPassword,\r\n        newPassword,\r\n      };\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'auth-token' : token,\r\n          'Accept' : 'application/json',\r\n          'Content-Type' : 'application/json',\r\n        }\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const message = response.json();\r\n        setLoading(false);\r\n        setResetPasswordRes(message.successMessage);\r\n      } else {\r\n        const message = response.json();\r\n        setLoading(false);\r\n        setResetPasswordRes(message.errMessage);\r\n      };\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setResetPasswordRes(error.TypeError);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Relaks Settings | Manage your account here.</title>\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n      </Helmet>\r\n      {document.location.pathname === '/customer/setting' ? <CustomerDashboardNav /> : <HandymanDashboardNav />}\r\n      <SettingsForm oldPassword={oldPassword}\r\n        newPassword={newPassword}\r\n        name={name}\r\n        email={email}\r\n        phone={phone}\r\n        loading={loading}\r\n        personalInfoRes={personalInfoRes}\r\n        handleName={handleName}\r\n        handleEmail={handleEmail}\r\n        handlePhone={handlePhone}\r\n        handleOldPassword={handleOldPassword}\r\n        handleNewPassword={handleNewPassword}\r\n        handlePersonalInformation={handlePersonalInformation}\r\n        handleResetPassword={handleResetPassword}\r\n       />\r\n      <MiniFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\settingsform.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\RequestPayment.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\RequestPaymentForm.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\jobTable.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanJob.js",["238"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Helmet from 'react-helmet';\r\nimport HandymanJobComp from '../statelessComponent/HandyManJobListComp';\r\nimport MiniFooter from '../statelessComponent/MiniFooter';\r\nimport { HandymanDashboardNav } from '../statelessComponent/Nav';\r\nimport NeedHelpTemplate from '../statelessComponent/NeedHelpTemplate';\r\n\r\nconst HandymanJob = () => {\r\n  const[jobs, setJobs] = useState([]);\r\n  const[loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n  let mounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    // Get the User Jobs\r\n    const getJobs = async ()  => {\r\n    try {\r\n      setLoading(true);\r\n      const url = 'https://enigmatic-ocean-25180.herokuapp.com/api/handymen/get-all-jobs';\r\n      const token = localStorage.getItem('jwt_token');\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth-token': token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if(mounted.current && response.status === 200) {\r\n        setLoading(false);\r\n        setJobs(data);\r\n      }\r\n      if(mounted.current && response.status === 401) {\r\n         history.push('/handyman/login');\r\n      };\r\n      if(mounted.current && response.status === 201) {\r\n        setLoading(false);\r\n        setJobs(data);\r\n      };\r\n\r\n      setJobs(data);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setJobs(error);\r\n    }\r\n  };\r\n  getJobs();\r\n    return async () => {\r\n      mounted.current = false\r\n    };\r\n  }, []);\r\n\r\n  const logic = () => {\r\n    if (loading) {\r\n      <div>\r\n        <NeedHelpTemplate />\r\n        <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">Loading Jobs...</h4>\r\n        <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n        </div>\r\n      </div>\r\n    }\r\n\r\n    if (typeof jobs === String) {\r\n      <div>\r\n        <NeedHelpTemplate />\r\n        <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">{jobs.errMessage}</h4>\r\n        <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n        }} className=\"mini-footer\">\r\n          <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n        </div>\r\n      </div>\r\n    }\r\n\r\n    if (jobs.jobs === undefined) {\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">Loading Jobs...</h4>\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (jobs.jobs.length === 0) {\r\n      return (\r\n        <div>\r\n          <NeedHelpTemplate />\r\n          <h4 style={{\r\n            marginTop: '20%'\r\n          }}className=\"how-its-works\">No Jobs Yet!!</h4>\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n          }} className=\"mini-footer\">\r\n            <p className=\"mini-footer-text\">© Relaks 2021</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n    const mappedJob = jobs.jobs.map((job) => <HandymanJobComp key={job._id} job={job}/>);\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>Relaks Dashboard | View your account, manage all your job request.</title>\r\n          <meta name = \"description\" content = \"View Your Dashboard\" />\r\n          <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n        </Helmet>\r\n        <NeedHelpTemplate />\r\n        {mappedJob}\r\n        <MiniFooter />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <HandymanDashboardNav />\r\n      {logic()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandymanJob;","C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\HandyManJobListComp.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Loading.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\PrivacyPolicy.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\About.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\Terms.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\relaks__cta.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statelessComponent\\ICA.js",[],"C:\\Users\\toshib\\Desktop\\Relaks - Connecting Local handymen to Customers\\Relaks - Frontend\\relaks-frontend\\src\\statefulComponent\\HandymanFlutter.js",[],{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":9,"column":3,"nodeType":"245","messageId":"246","endLine":9,"endColumn":12},{"ruleId":"243","severity":1,"message":"247","line":11,"column":10,"nodeType":"245","messageId":"246","endLine":11,"endColumn":25},{"ruleId":"248","severity":1,"message":"249","line":61,"column":6,"nodeType":"250","endLine":61,"endColumn":8,"suggestions":"251"},{"ruleId":"248","severity":1,"message":"249","line":102,"column":6,"nodeType":"250","endLine":102,"endColumn":8,"suggestions":"252"},{"ruleId":"248","severity":1,"message":"253","line":72,"column":6,"nodeType":"250","endLine":72,"endColumn":8,"suggestions":"254"},{"ruleId":"248","severity":1,"message":"253","line":79,"column":6,"nodeType":"250","endLine":79,"endColumn":8,"suggestions":"255"},{"ruleId":"248","severity":1,"message":"253","line":82,"column":6,"nodeType":"250","endLine":82,"endColumn":8,"suggestions":"256"},{"ruleId":"243","severity":1,"message":"257","line":20,"column":8,"nodeType":"245","messageId":"246","endLine":20,"endColumn":26},{"ruleId":"248","severity":1,"message":"253","line":140,"column":6,"nodeType":"250","endLine":140,"endColumn":8,"suggestions":"258"},{"ruleId":"248","severity":1,"message":"253","line":233,"column":6,"nodeType":"250","endLine":233,"endColumn":8,"suggestions":"259"},{"ruleId":"243","severity":1,"message":"260","line":7,"column":3,"nodeType":"245","messageId":"246","endLine":7,"endColumn":12},{"ruleId":"243","severity":1,"message":"261","line":15,"column":9,"nodeType":"245","messageId":"246","endLine":15,"endColumn":25},{"ruleId":"248","severity":1,"message":"249","line":54,"column":6,"nodeType":"250","endLine":54,"endColumn":8,"suggestions":"262"},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'faHeadset' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["265"],["266"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["267"],["268"],["269"],"'HandymanIsVerified' is defined but never used.",["270"],["271"],"'faTwitter' is defined but never used.","'resetPasswordRes' is assigned a value but never used.",["272"],"no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"273","fix":"275"},{"desc":"276","fix":"277"},{"desc":"276","fix":"278"},{"desc":"276","fix":"279"},{"desc":"276","fix":"280"},{"desc":"276","fix":"281"},{"desc":"273","fix":"282"},"Update the dependencies array to be: [history]",{"range":"283","text":"284"},{"range":"285","text":"284"},"Update the dependencies array to be: [getData]",{"range":"286","text":"287"},{"range":"288","text":"287"},{"range":"289","text":"287"},{"range":"290","text":"287"},{"range":"291","text":"287"},{"range":"292","text":"284"},[1973,1975],"[history]",[3070,3072],[1735,1737],"[getData]",[2396,2398],[2468,2470],[3601,3603],[6786,6788],[1683,1685]]
>>>>>>> recurring
